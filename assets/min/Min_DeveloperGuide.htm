<!doctype html>
<html lang="en">
<head>
  <title>min Language Developer Guide</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="author" content="Fabio Cevasco">
  <meta name="generator" content="HastyScribe">
  <style>    @font-face {
      font-family:"HastyScribe";
      src:url(data:application/x-font-woff;charset=utf-8;base64,d09GRk9UVE8AAA0QAAoAAAAADMgAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABDRkYgAAAA9AAACWIAAAlip080OU9TLzIAAApYAAAAYAAAAGAIIgb+Y21hcAAACrgAAABMAAAATAAMAOdnYXNwAAALBAAAAAgAAAAIAAAAEGhlYWQAAAsMAAAANgAAADYF2GJnaGhlYQAAC0QAAAAkAAAAJAi9BsJobXR4AAALaAAAABQAAAAUB9wAAG1heHAAAAt8AAAABgAAAAYABVAAbmFtZQAAC4QAAAFpAAABaWw1wUNwb3N0AAAM8AAAACAAAAAgAAMAAAEABAQAAQEBDGhhc3R5c2NyaWJlAAECAAEAO/gcAvgbA/gYBB4KABlT/4uLHgoAGVP/i4sMB4trHAbc+HQFHQAAAIEPHQAAAIYRHQAAAAkdAAAJWRIABgEBDBcZGx4haGFzdHlzY3JpYmVoYXN0eXNjcmliZXUwdTF1MjB1NDgAAAIBiQADAAUCAAEABAAHAAoADQjF/JQO/JQO/JQO+5QOHATc4veUFYSnBXqReJJ5koqLi4uLiouGoHy0cAipmxWQdo59jIXFaK96m4oIeNEFa5Fqk2iVCHD3TBWKdAWLdZJfmkirgquCroSBsYSrhqaHpoioi6mMjo+PlJGUkZKOj4uNi4yKi4gIiXIFi2SVTp85p4emiKOLjYuMiouJi4qGh4CFgIaFiImLgIt+jHuNCJlYBYuHgoR6gXiLZZxTrI5+jH+MgYqLhoiCh4KGhomKi4iLiY6Lj4miiKGHoXKbdpl6mAh6mIKTi46Lj5OSm5QIjIwFm4ObhJuGfb+Frouei5OMkoyQjIuQj5WRlZGRjo2LjIuLiouJCPfA+0UVjI2Si5eLl4uSiouHi4qKiomJg3+Hf4t/i36OgZCDkYOTh5SLmoualZuhCI2GBXhtd310i3qLfpOCnYeFhYaChoKGg4iEi3aLgJSLnIuZkZmXmpaal5OWi4yLjIuLigiLioqKioqGiYeFh4OIg4mCi4OLeZKCmIuPi4+Mjo2PjY2OjI+HlIqTi5SLlYuSjJEIjZmNkYyLCPdlVRWOhgWBe39/fYJ8g36Gfotxi3qXg6GLjI6PkJKRkY6PjYuNi4yKi4qNg4+DkYKSg5GGkYsIk4uQjouQi5KClnqahJGFk4aThZWJlIuVi4yLjYyLlZWSkI+LjYuNiYuHi4KPgpKBCJKCkoKSgpOCjoOLgouDh4ODhJ6MnpibpAia9xoVj/sFnFKqi5iLm5edowiOhgV0anZ6dot3i3qafqt/qoS1ir+Li4qkjIqMnYyTjJyLjYyMjYyZkZOOjYuNi4yKi4gIi3+KgIuCCPdF+9QVi3eReJd6lnmWgpWLlIuPk4ubi5aHnIOiiJSGmIWchZyGmIeWfHSEc4tyCNpvFYt0h3mDgIN/gYV/i3yLfJN+nH6chJ+LpI2ckJuSmZOalZqYmoOhhZ2ImIF+f4R9iwh+i3+SgZmBmIafi6WLjY2NjoyXjpKMjIuOi42Ji4mLdZB6lH6Sg5KHlYuQi5COkY8Ih5uJmYuWi5aOk5CQlZGRjoyLjouMiYuHi3GQcJRuCJF3BZ2fmZyUmQiOhgWFgoaEhoWGhYaFhoWFhYiHiYmdWZVtjIOPeox9i4AIovgOFYtzmXand5eskqWLnouTiJOFkoaShY+Ei4SLhYeFhIaEh4SJhImEiYaLiAhd+38ViYmJioqLiYuKjIuNi42MjIyNlpeXnZqjmqOYpZelbaB7oYuhi5qPmpKbkpqUmJeVCJeVl5CVi5aLk4iPho+GjYSLgYt4gGl0WJOGloSYhJmDloWUhZWGlYSUhJ98lXqLegiLeYJ7eHt5fHmEeItti3GadKqIjoqOi46LjY6PkZCRkJCNjouMi4uLjIqRgJd/nH4InH+bhJuLn42VlIuei5qCmnqYfpV7lXiWeJZ+k4SQbU5xX3RxCPfH5RWLk4aOgouCi4SHhYOFg4iAi3+Lfo+AlYCVgZmGn4uXi5eOl5GWkZWUk5cIjoYFgnx+fnmDeYJ5h3mLeYt8j4CSf5OGlouZi52SnJmbmZudk6GLkouRiY6Hj4iNhouFCIuFiIWHhYeFhoiFi4iLiIyIjYiOioyLjYuNjIyMjIyMjIyNjI+NjY+LkQj0cBWEjAWJi4mKioiIhIeDhIIIiI8FkJGPlI6Ui42KjYmLgI+GlIubi46OjpCOkY6QjY+Lj4uNiYuIi3mTgpyLj4uOi46MCI2MjYuLi42LjYqLh4uIioiJiomKiYiJhomHioeLhYuAjoORhJKFkoiVi5SLlY6UkQiVkJOTkpYIjYYFg31/f3yCfIJ+h3+Lc4t/lougi4+NkY6SjpKNkY6QCJCSBYuMiouLi4OJhYqHiwj3AaEVioGLgouFi3SPeZR+k3+WhZiLl4uYj5eUmJSXl5WcCImQBXhxen57i4GLg5CEloWWiJqLnYuVjJSNlYuOioyJi4mLg4h9hYiKioqLiQip2BWPh42Gi4WLhomGh4eIhoaJhouGi4eNh5CHj4qQi5CLkYyQj4+Pj4+NkIuQi5CJjocI9y8xFYiLioiLhYuGjYSQg4+DkYWThouNi4yLjouViZWHlIeUho+FiwhI9xEVi1uQYpZplqmQsou9i6CKnYiZiZmHkoeLhYuGhIh+iH6Ke4t2CMStFYtzh2+Da4NqgnCCd5J2lHqUgJWAlIWTi5OLkJCNlYGQgZKEloOViJaLlouQjJCOjgiNjo+NkIuYi5SGkoKSgY6Ai36Lg4qEiYSNi46KjouYi5eUlZwIjocFgHh+gnuLiYuIi4eMgnt/g3qLd4t5l3ujg5eEm4efhaCJoouki6SNoo+fkKCRnJOYCJSYlJKWi5yLlHqLagj3D/sMFYuPBYuOiI2Fi4SLhYmGh4aHiIaLhIuAlIWbi46LjYuOjI6MjoyOi46LjIqLiYuKiouJigiJiomKiImIiomIiImEhYiCi4CLgI6DkYWShpOIlouVi5WOlpGWkZSTkpYIjYYFgnt+f3uCe4F8h36LfYuBjYSRhJGIkouTi5SNk4+Tj5KPkI6Pj46NjYyMjY2MjIuLCIuMi4uLi4OJg4mEi36LhZCLlouZk5eblZuVmZCWi5eLkYiLhYuHiYiIh4eGh4mIiwiGi4mNi5AIHPtwtRWLi46NkI+Rj5OQl5GXkJmRnZKckaCRoZCmkqmSq5Cska+QsY/PktiQ3Iywi7KLsooIsomyibCI1obRgst+qYWohaaDp4OkgqGCoIKegJuAkoaShZCFkYWQhY+EjoWOhIyECI2Ei4SKhIuLi4uLi4mDiYWIhYiGiYeIiIaEiIiKjIuLjY+Pko2OjY+NkY2QjJGMkgiLi4uLi4uLkYuRiZGKkYiQiJGHkYeQhZCGkISQhZB7lXmUd5N0lHOTcJJwkm+RbJAITJZFk0GRZo1ljWSNZIxli2aLOotAh0eFZYdnh2uHaoZuhXCGdYZ2hnqGeYZ9hn+GCH+HgoeFiIWIiIqKjAgO+JQU+JQViwwKAAAAAwIAAZAABQAAAUwBZgAAAEcBTAFmAAAA9QAZAIQAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAABAAAAASAHg/+D/4AHgACAAAAABAAAAAAAAAAAAAAAgAAAAAAACAAAAAwAAABQAAwABAAAAFAAEADgAAAAKAAgAAgACAAEAIABI//3//wAAAAAAIABI//3//wAB/+P/vAADAAEAAAAAAAAAAAAAAAEAAf//AA8AAQAAAAEAABsfnuxfDzz1AAsCAAAAAADP7xDVAAAAAM/vENUAAP/gBtsB4AAAAAgAAgAAAAAAAAABAAAB4P/gAAAG3AAAAAAG2wABAAAAAAAAAAAAAAAAAAAABQAAAAAAAAAAAAAAAAEAAAAG3AAAAABQAAAFAAAAAAAOAK4AAQAAAAAAAQAWAAAAAQAAAAAAAgAOAGMAAQAAAAAAAwAWACwAAQAAAAAABAAWAHEAAQAAAAAABQAWABYAAQAAAAAABgALAEIAAQAAAAAACgA0AIcAAwABBAkAAQAWAAAAAwABBAkAAgAOAGMAAwABBAkAAwAWACwAAwABBAkABAAWAHEAAwABBAkABQAWABYAAwABBAkABgAWAE0AAwABBAkACgA0AIcAaABhAHMAdAB5AHMAYwByAGkAYgBlAFYAZQByAHMAaQBvAG4AIAAxAC4AMABoAGEAcwB0AHkAcwBjAHIAaQBiAGVoYXN0eXNjcmliZQBoAGEAcwB0AHkAcwBjAHIAaQBiAGUAUgBlAGcAdQBsAGEAcgBoAGEAcwB0AHkAcwBjAHIAaQBiAGUARgBvAG4AdAAgAGcAZQBuAGUAcgBhAHQAZQBkACAAYgB5ACAASQBjAG8ATQBvAG8AbgAuAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=) format('woff');
      font-style:normal;
      font-weight:400;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }
      @font-face {
      font-family:"Font Awesome 5 Free";
      src:url(data:application/x-font-woff;charset=utf-8;base64,) format('woff');
      font-style:normal;
      font-weight:900;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }
      @font-face {
      font-family:"Font Awesome 5 Brands";
      src:url(data:application/x-font-woff;charset=utf-8;base64,) format('woff');
      font-style:normal;
      font-weight:400;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }
      @font-face {
      font-family:"Source Code Pro";
      src:url(data:application/x-font-woff;charset=utf-8;base64,) format('woff');
      font-style:normal;
      font-weight:400;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }
      @font-face {
      font-family:"Source Sans Pro";
      src:url(data:application/x-font-woff;charset=utf-8;base64,) format('woff');
      font-style:normal;
      font-weight:400;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }
      @font-face {
      font-family:"Source Sans Pro";
      src:url(data:application/x-font-woff;charset=utf-8;base64,) format('woff');
      font-style:normal;
      font-weight:800;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }
      @font-face {
      font-family:"Source Sans Pro";
      src:url(data:application/x-font-woff;charset=utf-8;base64,) format('woff');
      font-style:italic;
      font-weight:400;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }
      @font-face {
      font-family:"Source Sans Pro";
      src:url(data:application/x-font-woff;charset=utf-8;base64,) format('woff');
      font-style:italic;
      font-weight:800;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }
  </style>
  <style>/*! normalize.css v2.1.3 | MIT License | git.io/normalize */
/* ==========================================================================
   HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined in IE 8/9.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}
/**
 * Correct `inline-block` display not defined in IE 8/9.
 */
audio,
canvas,
video {
  display: inline-block;
}
/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}
/**
 * Address `[hidden]` styling not present in IE 8/9.
 * Hide the `template` element in IE, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}
/* ==========================================================================
   Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}
/**
 * Remove default margin.
 */
body {
  margin: 0;
}
/* ==========================================================================
   Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent;
}
/**
 * Address `outline` inconsistency between Chrome and other browsers.
 */
a:focus {
  outline: thin dotted;
}
/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}
/* ==========================================================================
   Typography
   ========================================================================== */
/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari 5, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}
/**
 * Address styling not present in IE 8/9, Safari 5, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}
/**
 * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */
b,
strong {
  font-weight: bold;
}
/**
 * Address styling not present in Safari 5 and Chrome.
 */
dfn {
  font-style: italic;
}
/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}
/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}
/**
 * Correct font family set oddly in Safari 5 and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em;
}
/**
 * Improve readability of pre-formatted text in all browsers.
 */
pre {
  white-space: pre-wrap;
}
/**
 * Set consistent quote types.
 */
q {
  quotes: "\201C" "\201D" "\2018" "\2019";
}
/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}
/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
/* ==========================================================================
   Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9.
 */
img {
  border: 0;
}
/**
 * Correct overflow displayed oddly in IE 9.
 */
svg:not(:root) {
  overflow: hidden;
}
/* ==========================================================================
   Figures
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari 5.
 */
figure {
  margin: 0;
}
/* ==========================================================================
   Forms
   ========================================================================== */
/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}
/**
 * 1. Correct `color` not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}
/**
 * 1. Correct font family not being inherited in all browsers.
 * 2. Correct font size not being inherited in all browsers.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 */
button,
input,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */
}
/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal;
}
/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
button,
select {
  text-transform: none;
}
/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}
/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}
/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}
/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box;
}
/**
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}
/**
 * 1. Remove default vertical scrollbar in IE 8/9.
 * 2. Improve readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */
}
/* ==========================================================================
   Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}
/* Fonts */
/* Colors */
/*!
 * Font Awesome Free 5.0.8 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 */
.fa,
.fas,
.far,
.fal,
.fab {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  font-style: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
}
/* makes the font 33% larger relative to the icon container */
.fa-lg {
  font-size: 1.33333333em;
  line-height: 0.75em;
  vertical-align: -0.0667em;
}
.fa-xs {
  font-size: .75em;
}
.fa-sm {
  font-size: .875em;
}
.fa-1x {
  font-size: 1em;
}
.fa-2x {
  font-size: 2em;
}
.fa-3x {
  font-size: 3em;
}
.fa-4x {
  font-size: 4em;
}
.fa-5x {
  font-size: 5em;
}
.fa-6x {
  font-size: 6em;
}
.fa-7x {
  font-size: 7em;
}
.fa-8x {
  font-size: 8em;
}
.fa-9x {
  font-size: 9em;
}
.fa-10x {
  font-size: 10em;
}
.fa-fw {
  text-align: center;
  width: 1.25em;
}
.fa-ul {
  list-style-type: none;
  margin-left: 2.5em;
  padding-left: 0;
}
.fa-ul > li {
  position: relative;
}
.fa-li {
  left: -2em;
  position: absolute;
  text-align: center;
  width: 2em;
  line-height: inherit;
}
.fa-border {
  border-radius: .1em;
  border: solid 0.08em #eee;
  padding: .2em .25em .15em;
}
.fa-pull-left {
  float: left;
}
.fa-pull-right {
  float: right;
}
.fa.fa-pull-left,
.fas.fa-pull-left,
.far.fa-pull-left,
.fal.fa-pull-left,
.fab.fa-pull-left {
  margin-right: .3em;
}
.fa.fa-pull-right,
.fas.fa-pull-right,
.far.fa-pull-right,
.fal.fa-pull-right,
.fab.fa-pull-right {
  margin-left: .3em;
}
.fa-spin {
  animation: fa-spin 2s infinite linear;
}
.fa-pulse {
  animation: fa-spin 1s infinite steps(8);
}
@keyframes fa-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.fa-rotate-90 {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=1)";
  transform: rotate(90deg);
}
.fa-rotate-180 {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2)";
  transform: rotate(180deg);
}
.fa-rotate-270 {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=3)";
  transform: rotate(270deg);
}
.fa-flip-horizontal {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)";
  transform: scale(-1, 1);
}
.fa-flip-vertical {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)";
  transform: scale(1, -1);
}
.fa-flip-horizontal.fa-flip-vertical {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)";
  transform: scale(-1, -1);
}
:root .fa-rotate-90,
:root .fa-rotate-180,
:root .fa-rotate-270,
:root .fa-flip-horizontal,
:root .fa-flip-vertical {
  filter: none;
}
.fa-stack {
  display: inline-block;
  height: 2em;
  line-height: 2em;
  position: relative;
  vertical-align: middle;
  width: 2em;
}
.fa-stack-1x,
.fa-stack-2x {
  left: 0;
  position: absolute;
  text-align: center;
  width: 100%;
}
.fa-stack-1x {
  line-height: inherit;
}
.fa-stack-2x {
  font-size: 2em;
}
.fa-inverse {
  color: #fff;
}
/* Font Awesome uses the Unicode Private Use Area (PUA) to ensure screen
   readers do not read off random characters that represent icons */
.fa-500px:before {
  content: "\f26e";
}
.fa-accessible-icon:before {
  content: "\f368";
}
.fa-accusoft:before {
  content: "\f369";
}
.fa-address-book:before {
  content: "\f2b9";
}
.fa-address-card:before {
  content: "\f2bb";
}
.fa-adjust:before {
  content: "\f042";
}
.fa-adn:before {
  content: "\f170";
}
.fa-adversal:before {
  content: "\f36a";
}
.fa-affiliatetheme:before {
  content: "\f36b";
}
.fa-algolia:before {
  content: "\f36c";
}
.fa-align-center:before {
  content: "\f037";
}
.fa-align-justify:before {
  content: "\f039";
}
.fa-align-left:before {
  content: "\f036";
}
.fa-align-right:before {
  content: "\f038";
}
.fa-amazon:before {
  content: "\f270";
}
.fa-amazon-pay:before {
  content: "\f42c";
}
.fa-ambulance:before {
  content: "\f0f9";
}
.fa-american-sign-language-interpreting:before {
  content: "\f2a3";
}
.fa-amilia:before {
  content: "\f36d";
}
.fa-anchor:before {
  content: "\f13d";
}
.fa-android:before {
  content: "\f17b";
}
.fa-angellist:before {
  content: "\f209";
}
.fa-angle-double-down:before {
  content: "\f103";
}
.fa-angle-double-left:before {
  content: "\f100";
}
.fa-angle-double-right:before {
  content: "\f101";
}
.fa-angle-double-up:before {
  content: "\f102";
}
.fa-angle-down:before {
  content: "\f107";
}
.fa-angle-left:before {
  content: "\f104";
}
.fa-angle-right:before {
  content: "\f105";
}
.fa-angle-up:before {
  content: "\f106";
}
.fa-angrycreative:before {
  content: "\f36e";
}
.fa-angular:before {
  content: "\f420";
}
.fa-app-store:before {
  content: "\f36f";
}
.fa-app-store-ios:before {
  content: "\f370";
}
.fa-apper:before {
  content: "\f371";
}
.fa-apple:before {
  content: "\f179";
}
.fa-apple-pay:before {
  content: "\f415";
}
.fa-archive:before {
  content: "\f187";
}
.fa-arrow-alt-circle-down:before {
  content: "\f358";
}
.fa-arrow-alt-circle-left:before {
  content: "\f359";
}
.fa-arrow-alt-circle-right:before {
  content: "\f35a";
}
.fa-arrow-alt-circle-up:before {
  content: "\f35b";
}
.fa-arrow-circle-down:before {
  content: "\f0ab";
}
.fa-arrow-circle-left:before {
  content: "\f0a8";
}
.fa-arrow-circle-right:before {
  content: "\f0a9";
}
.fa-arrow-circle-up:before {
  content: "\f0aa";
}
.fa-arrow-down:before {
  content: "\f063";
}
.fa-arrow-left:before {
  content: "\f060";
}
.fa-arrow-right:before {
  content: "\f061";
}
.fa-arrow-up:before {
  content: "\f062";
}
.fa-arrows-alt:before {
  content: "\f0b2";
}
.fa-arrows-alt-h:before {
  content: "\f337";
}
.fa-arrows-alt-v:before {
  content: "\f338";
}
.fa-assistive-listening-systems:before {
  content: "\f2a2";
}
.fa-asterisk:before {
  content: "\f069";
}
.fa-asymmetrik:before {
  content: "\f372";
}
.fa-at:before {
  content: "\f1fa";
}
.fa-audible:before {
  content: "\f373";
}
.fa-audio-description:before {
  content: "\f29e";
}
.fa-autoprefixer:before {
  content: "\f41c";
}
.fa-avianex:before {
  content: "\f374";
}
.fa-aviato:before {
  content: "\f421";
}
.fa-aws:before {
  content: "\f375";
}
.fa-backward:before {
  content: "\f04a";
}
.fa-balance-scale:before {
  content: "\f24e";
}
.fa-ban:before {
  content: "\f05e";
}
.fa-band-aid:before {
  content: "\f462";
}
.fa-bandcamp:before {
  content: "\f2d5";
}
.fa-barcode:before {
  content: "\f02a";
}
.fa-bars:before {
  content: "\f0c9";
}
.fa-baseball-ball:before {
  content: "\f433";
}
.fa-basketball-ball:before {
  content: "\f434";
}
.fa-bath:before {
  content: "\f2cd";
}
.fa-battery-empty:before {
  content: "\f244";
}
.fa-battery-full:before {
  content: "\f240";
}
.fa-battery-half:before {
  content: "\f242";
}
.fa-battery-quarter:before {
  content: "\f243";
}
.fa-battery-three-quarters:before {
  content: "\f241";
}
.fa-bed:before {
  content: "\f236";
}
.fa-beer:before {
  content: "\f0fc";
}
.fa-behance:before {
  content: "\f1b4";
}
.fa-behance-square:before {
  content: "\f1b5";
}
.fa-bell:before {
  content: "\f0f3";
}
.fa-bell-slash:before {
  content: "\f1f6";
}
.fa-bicycle:before {
  content: "\f206";
}
.fa-bimobject:before {
  content: "\f378";
}
.fa-binoculars:before {
  content: "\f1e5";
}
.fa-birthday-cake:before {
  content: "\f1fd";
}
.fa-bitbucket:before {
  content: "\f171";
}
.fa-bitcoin:before {
  content: "\f379";
}
.fa-bity:before {
  content: "\f37a";
}
.fa-black-tie:before {
  content: "\f27e";
}
.fa-blackberry:before {
  content: "\f37b";
}
.fa-blind:before {
  content: "\f29d";
}
.fa-blogger:before {
  content: "\f37c";
}
.fa-blogger-b:before {
  content: "\f37d";
}
.fa-bluetooth:before {
  content: "\f293";
}
.fa-bluetooth-b:before {
  content: "\f294";
}
.fa-bold:before {
  content: "\f032";
}
.fa-bolt:before {
  content: "\f0e7";
}
.fa-bomb:before {
  content: "\f1e2";
}
.fa-book:before {
  content: "\f02d";
}
.fa-bookmark:before {
  content: "\f02e";
}
.fa-bowling-ball:before {
  content: "\f436";
}
.fa-box:before {
  content: "\f466";
}
.fa-boxes:before {
  content: "\f468";
}
.fa-braille:before {
  content: "\f2a1";
}
.fa-briefcase:before {
  content: "\f0b1";
}
.fa-btc:before {
  content: "\f15a";
}
.fa-bug:before {
  content: "\f188";
}
.fa-building:before {
  content: "\f1ad";
}
.fa-bullhorn:before {
  content: "\f0a1";
}
.fa-bullseye:before {
  content: "\f140";
}
.fa-buromobelexperte:before {
  content: "\f37f";
}
.fa-bus:before {
  content: "\f207";
}
.fa-buysellads:before {
  content: "\f20d";
}
.fa-calculator:before {
  content: "\f1ec";
}
.fa-calendar:before {
  content: "\f133";
}
.fa-calendar-alt:before {
  content: "\f073";
}
.fa-calendar-check:before {
  content: "\f274";
}
.fa-calendar-minus:before {
  content: "\f272";
}
.fa-calendar-plus:before {
  content: "\f271";
}
.fa-calendar-times:before {
  content: "\f273";
}
.fa-camera:before {
  content: "\f030";
}
.fa-camera-retro:before {
  content: "\f083";
}
.fa-car:before {
  content: "\f1b9";
}
.fa-caret-down:before {
  content: "\f0d7";
}
.fa-caret-left:before {
  content: "\f0d9";
}
.fa-caret-right:before {
  content: "\f0da";
}
.fa-caret-square-down:before {
  content: "\f150";
}
.fa-caret-square-left:before {
  content: "\f191";
}
.fa-caret-square-right:before {
  content: "\f152";
}
.fa-caret-square-up:before {
  content: "\f151";
}
.fa-caret-up:before {
  content: "\f0d8";
}
.fa-cart-arrow-down:before {
  content: "\f218";
}
.fa-cart-plus:before {
  content: "\f217";
}
.fa-cc-amazon-pay:before {
  content: "\f42d";
}
.fa-cc-amex:before {
  content: "\f1f3";
}
.fa-cc-apple-pay:before {
  content: "\f416";
}
.fa-cc-diners-club:before {
  content: "\f24c";
}
.fa-cc-discover:before {
  content: "\f1f2";
}
.fa-cc-jcb:before {
  content: "\f24b";
}
.fa-cc-mastercard:before {
  content: "\f1f1";
}
.fa-cc-paypal:before {
  content: "\f1f4";
}
.fa-cc-stripe:before {
  content: "\f1f5";
}
.fa-cc-visa:before {
  content: "\f1f0";
}
.fa-centercode:before {
  content: "\f380";
}
.fa-certificate:before {
  content: "\f0a3";
}
.fa-chart-area:before {
  content: "\f1fe";
}
.fa-chart-bar:before {
  content: "\f080";
}
.fa-chart-line:before {
  content: "\f201";
}
.fa-chart-pie:before {
  content: "\f200";
}
.fa-check:before {
  content: "\f00c";
}
.fa-check-circle:before {
  content: "\f058";
}
.fa-check-square:before {
  content: "\f14a";
}
.fa-chess:before {
  content: "\f439";
}
.fa-chess-bishop:before {
  content: "\f43a";
}
.fa-chess-board:before {
  content: "\f43c";
}
.fa-chess-king:before {
  content: "\f43f";
}
.fa-chess-knight:before {
  content: "\f441";
}
.fa-chess-pawn:before {
  content: "\f443";
}
.fa-chess-queen:before {
  content: "\f445";
}
.fa-chess-rook:before {
  content: "\f447";
}
.fa-chevron-circle-down:before {
  content: "\f13a";
}
.fa-chevron-circle-left:before {
  content: "\f137";
}
.fa-chevron-circle-right:before {
  content: "\f138";
}
.fa-chevron-circle-up:before {
  content: "\f139";
}
.fa-chevron-down:before {
  content: "\f078";
}
.fa-chevron-left:before {
  content: "\f053";
}
.fa-chevron-right:before {
  content: "\f054";
}
.fa-chevron-up:before {
  content: "\f077";
}
.fa-child:before {
  content: "\f1ae";
}
.fa-chrome:before {
  content: "\f268";
}
.fa-circle:before {
  content: "\f111";
}
.fa-circle-notch:before {
  content: "\f1ce";
}
.fa-clipboard:before {
  content: "\f328";
}
.fa-clipboard-check:before {
  content: "\f46c";
}
.fa-clipboard-list:before {
  content: "\f46d";
}
.fa-clock:before {
  content: "\f017";
}
.fa-clone:before {
  content: "\f24d";
}
.fa-closed-captioning:before {
  content: "\f20a";
}
.fa-cloud:before {
  content: "\f0c2";
}
.fa-cloud-download-alt:before {
  content: "\f381";
}
.fa-cloud-upload-alt:before {
  content: "\f382";
}
.fa-cloudscale:before {
  content: "\f383";
}
.fa-cloudsmith:before {
  content: "\f384";
}
.fa-cloudversify:before {
  content: "\f385";
}
.fa-code:before {
  content: "\f121";
}
.fa-code-branch:before {
  content: "\f126";
}
.fa-codepen:before {
  content: "\f1cb";
}
.fa-codiepie:before {
  content: "\f284";
}
.fa-coffee:before {
  content: "\f0f4";
}
.fa-cog:before {
  content: "\f013";
}
.fa-cogs:before {
  content: "\f085";
}
.fa-columns:before {
  content: "\f0db";
}
.fa-comment:before {
  content: "\f075";
}
.fa-comment-alt:before {
  content: "\f27a";
}
.fa-comments:before {
  content: "\f086";
}
.fa-compass:before {
  content: "\f14e";
}
.fa-compress:before {
  content: "\f066";
}
.fa-connectdevelop:before {
  content: "\f20e";
}
.fa-contao:before {
  content: "\f26d";
}
.fa-copy:before {
  content: "\f0c5";
}
.fa-copyright:before {
  content: "\f1f9";
}
.fa-cpanel:before {
  content: "\f388";
}
.fa-creative-commons:before {
  content: "\f25e";
}
.fa-credit-card:before {
  content: "\f09d";
}
.fa-crop:before {
  content: "\f125";
}
.fa-crosshairs:before {
  content: "\f05b";
}
.fa-css3:before {
  content: "\f13c";
}
.fa-css3-alt:before {
  content: "\f38b";
}
.fa-cube:before {
  content: "\f1b2";
}
.fa-cubes:before {
  content: "\f1b3";
}
.fa-cut:before {
  content: "\f0c4";
}
.fa-cuttlefish:before {
  content: "\f38c";
}
.fa-d-and-d:before {
  content: "\f38d";
}
.fa-dashcube:before {
  content: "\f210";
}
.fa-database:before {
  content: "\f1c0";
}
.fa-deaf:before {
  content: "\f2a4";
}
.fa-delicious:before {
  content: "\f1a5";
}
.fa-deploydog:before {
  content: "\f38e";
}
.fa-deskpro:before {
  content: "\f38f";
}
.fa-desktop:before {
  content: "\f108";
}
.fa-deviantart:before {
  content: "\f1bd";
}
.fa-digg:before {
  content: "\f1a6";
}
.fa-digital-ocean:before {
  content: "\f391";
}
.fa-discord:before {
  content: "\f392";
}
.fa-discourse:before {
  content: "\f393";
}
.fa-dna:before {
  content: "\f471";
}
.fa-dochub:before {
  content: "\f394";
}
.fa-docker:before {
  content: "\f395";
}
.fa-dollar-sign:before {
  content: "\f155";
}
.fa-dolly:before {
  content: "\f472";
}
.fa-dolly-flatbed:before {
  content: "\f474";
}
.fa-dot-circle:before {
  content: "\f192";
}
.fa-download:before {
  content: "\f019";
}
.fa-draft2digital:before {
  content: "\f396";
}
.fa-dribbble:before {
  content: "\f17d";
}
.fa-dribbble-square:before {
  content: "\f397";
}
.fa-dropbox:before {
  content: "\f16b";
}
.fa-drupal:before {
  content: "\f1a9";
}
.fa-dyalog:before {
  content: "\f399";
}
.fa-earlybirds:before {
  content: "\f39a";
}
.fa-edge:before {
  content: "\f282";
}
.fa-edit:before {
  content: "\f044";
}
.fa-eject:before {
  content: "\f052";
}
.fa-elementor:before {
  content: "\f430";
}
.fa-ellipsis-h:before {
  content: "\f141";
}
.fa-ellipsis-v:before {
  content: "\f142";
}
.fa-ember:before {
  content: "\f423";
}
.fa-empire:before {
  content: "\f1d1";
}
.fa-envelope:before {
  content: "\f0e0";
}
.fa-envelope-open:before {
  content: "\f2b6";
}
.fa-envelope-square:before {
  content: "\f199";
}
.fa-envira:before {
  content: "\f299";
}
.fa-eraser:before {
  content: "\f12d";
}
.fa-erlang:before {
  content: "\f39d";
}
.fa-ethereum:before {
  content: "\f42e";
}
.fa-etsy:before {
  content: "\f2d7";
}
.fa-euro-sign:before {
  content: "\f153";
}
.fa-exchange-alt:before {
  content: "\f362";
}
.fa-exclamation:before {
  content: "\f12a";
}
.fa-exclamation-circle:before {
  content: "\f06a";
}
.fa-exclamation-triangle:before {
  content: "\f071";
}
.fa-expand:before {
  content: "\f065";
}
.fa-expand-arrows-alt:before {
  content: "\f31e";
}
.fa-expeditedssl:before {
  content: "\f23e";
}
.fa-external-link-alt:before {
  content: "\f35d";
}
.fa-external-link-square-alt:before {
  content: "\f360";
}
.fa-eye:before {
  content: "\f06e";
}
.fa-eye-dropper:before {
  content: "\f1fb";
}
.fa-eye-slash:before {
  content: "\f070";
}
.fa-facebook:before {
  content: "\f09a";
}
.fa-facebook-f:before {
  content: "\f39e";
}
.fa-facebook-messenger:before {
  content: "\f39f";
}
.fa-facebook-square:before {
  content: "\f082";
}
.fa-fast-backward:before {
  content: "\f049";
}
.fa-fast-forward:before {
  content: "\f050";
}
.fa-fax:before {
  content: "\f1ac";
}
.fa-female:before {
  content: "\f182";
}
.fa-fighter-jet:before {
  content: "\f0fb";
}
.fa-file:before {
  content: "\f15b";
}
.fa-file-alt:before {
  content: "\f15c";
}
.fa-file-archive:before {
  content: "\f1c6";
}
.fa-file-audio:before {
  content: "\f1c7";
}
.fa-file-code:before {
  content: "\f1c9";
}
.fa-file-excel:before {
  content: "\f1c3";
}
.fa-file-image:before {
  content: "\f1c5";
}
.fa-file-pdf:before {
  content: "\f1c1";
}
.fa-file-powerpoint:before {
  content: "\f1c4";
}
.fa-file-video:before {
  content: "\f1c8";
}
.fa-file-word:before {
  content: "\f1c2";
}
.fa-film:before {
  content: "\f008";
}
.fa-filter:before {
  content: "\f0b0";
}
.fa-fire:before {
  content: "\f06d";
}
.fa-fire-extinguisher:before {
  content: "\f134";
}
.fa-firefox:before {
  content: "\f269";
}
.fa-first-aid:before {
  content: "\f479";
}
.fa-first-order:before {
  content: "\f2b0";
}
.fa-firstdraft:before {
  content: "\f3a1";
}
.fa-flag:before {
  content: "\f024";
}
.fa-flag-checkered:before {
  content: "\f11e";
}
.fa-flask:before {
  content: "\f0c3";
}
.fa-flickr:before {
  content: "\f16e";
}
.fa-flipboard:before {
  content: "\f44d";
}
.fa-fly:before {
  content: "\f417";
}
.fa-folder:before {
  content: "\f07b";
}
.fa-folder-open:before {
  content: "\f07c";
}
.fa-font:before {
  content: "\f031";
}
.fa-font-awesome:before {
  content: "\f2b4";
}
.fa-font-awesome-alt:before {
  content: "\f35c";
}
.fa-font-awesome-flag:before {
  content: "\f425";
}
.fa-fonticons:before {
  content: "\f280";
}
.fa-fonticons-fi:before {
  content: "\f3a2";
}
.fa-football-ball:before {
  content: "\f44e";
}
.fa-fort-awesome:before {
  content: "\f286";
}
.fa-fort-awesome-alt:before {
  content: "\f3a3";
}
.fa-forumbee:before {
  content: "\f211";
}
.fa-forward:before {
  content: "\f04e";
}
.fa-foursquare:before {
  content: "\f180";
}
.fa-free-code-camp:before {
  content: "\f2c5";
}
.fa-freebsd:before {
  content: "\f3a4";
}
.fa-frown:before {
  content: "\f119";
}
.fa-futbol:before {
  content: "\f1e3";
}
.fa-gamepad:before {
  content: "\f11b";
}
.fa-gavel:before {
  content: "\f0e3";
}
.fa-gem:before {
  content: "\f3a5";
}
.fa-genderless:before {
  content: "\f22d";
}
.fa-get-pocket:before {
  content: "\f265";
}
.fa-gg:before {
  content: "\f260";
}
.fa-gg-circle:before {
  content: "\f261";
}
.fa-gift:before {
  content: "\f06b";
}
.fa-git:before {
  content: "\f1d3";
}
.fa-git-square:before {
  content: "\f1d2";
}
.fa-github:before {
  content: "\f09b";
}
.fa-github-alt:before {
  content: "\f113";
}
.fa-github-square:before {
  content: "\f092";
}
.fa-gitkraken:before {
  content: "\f3a6";
}
.fa-gitlab:before {
  content: "\f296";
}
.fa-gitter:before {
  content: "\f426";
}
.fa-glass-martini:before {
  content: "\f000";
}
.fa-glide:before {
  content: "\f2a5";
}
.fa-glide-g:before {
  content: "\f2a6";
}
.fa-globe:before {
  content: "\f0ac";
}
.fa-gofore:before {
  content: "\f3a7";
}
.fa-golf-ball:before {
  content: "\f450";
}
.fa-goodreads:before {
  content: "\f3a8";
}
.fa-goodreads-g:before {
  content: "\f3a9";
}
.fa-google:before {
  content: "\f1a0";
}
.fa-google-drive:before {
  content: "\f3aa";
}
.fa-google-play:before {
  content: "\f3ab";
}
.fa-google-plus:before {
  content: "\f2b3";
}
.fa-google-plus-g:before {
  content: "\f0d5";
}
.fa-google-plus-square:before {
  content: "\f0d4";
}
.fa-google-wallet:before {
  content: "\f1ee";
}
.fa-graduation-cap:before {
  content: "\f19d";
}
.fa-gratipay:before {
  content: "\f184";
}
.fa-grav:before {
  content: "\f2d6";
}
.fa-gripfire:before {
  content: "\f3ac";
}
.fa-grunt:before {
  content: "\f3ad";
}
.fa-gulp:before {
  content: "\f3ae";
}
.fa-h-square:before {
  content: "\f0fd";
}
.fa-hacker-news:before {
  content: "\f1d4";
}
.fa-hacker-news-square:before {
  content: "\f3af";
}
.fa-hand-lizard:before {
  content: "\f258";
}
.fa-hand-paper:before {
  content: "\f256";
}
.fa-hand-peace:before {
  content: "\f25b";
}
.fa-hand-point-down:before {
  content: "\f0a7";
}
.fa-hand-point-left:before {
  content: "\f0a5";
}
.fa-hand-point-right:before {
  content: "\f0a4";
}
.fa-hand-point-up:before {
  content: "\f0a6";
}
.fa-hand-pointer:before {
  content: "\f25a";
}
.fa-hand-rock:before {
  content: "\f255";
}
.fa-hand-scissors:before {
  content: "\f257";
}
.fa-hand-spock:before {
  content: "\f259";
}
.fa-handshake:before {
  content: "\f2b5";
}
.fa-hashtag:before {
  content: "\f292";
}
.fa-hdd:before {
  content: "\f0a0";
}
.fa-heading:before {
  content: "\f1dc";
}
.fa-headphones:before {
  content: "\f025";
}
.fa-heart:before {
  content: "\f004";
}
.fa-heartbeat:before {
  content: "\f21e";
}
.fa-hips:before {
  content: "\f452";
}
.fa-hire-a-helper:before {
  content: "\f3b0";
}
.fa-history:before {
  content: "\f1da";
}
.fa-hockey-puck:before {
  content: "\f453";
}
.fa-home:before {
  content: "\f015";
}
.fa-hooli:before {
  content: "\f427";
}
.fa-hospital:before {
  content: "\f0f8";
}
.fa-hospital-symbol:before {
  content: "\f47e";
}
.fa-hotjar:before {
  content: "\f3b1";
}
.fa-hourglass:before {
  content: "\f254";
}
.fa-hourglass-end:before {
  content: "\f253";
}
.fa-hourglass-half:before {
  content: "\f252";
}
.fa-hourglass-start:before {
  content: "\f251";
}
.fa-houzz:before {
  content: "\f27c";
}
.fa-html5:before {
  content: "\f13b";
}
.fa-hubspot:before {
  content: "\f3b2";
}
.fa-i-cursor:before {
  content: "\f246";
}
.fa-id-badge:before {
  content: "\f2c1";
}
.fa-id-card:before {
  content: "\f2c2";
}
.fa-image:before {
  content: "\f03e";
}
.fa-images:before {
  content: "\f302";
}
.fa-imdb:before {
  content: "\f2d8";
}
.fa-inbox:before {
  content: "\f01c";
}
.fa-indent:before {
  content: "\f03c";
}
.fa-industry:before {
  content: "\f275";
}
.fa-info:before {
  content: "\f129";
}
.fa-info-circle:before {
  content: "\f05a";
}
.fa-instagram:before {
  content: "\f16d";
}
.fa-internet-explorer:before {
  content: "\f26b";
}
.fa-ioxhost:before {
  content: "\f208";
}
.fa-italic:before {
  content: "\f033";
}
.fa-itunes:before {
  content: "\f3b4";
}
.fa-itunes-note:before {
  content: "\f3b5";
}
.fa-jenkins:before {
  content: "\f3b6";
}
.fa-joget:before {
  content: "\f3b7";
}
.fa-joomla:before {
  content: "\f1aa";
}
.fa-js:before {
  content: "\f3b8";
}
.fa-js-square:before {
  content: "\f3b9";
}
.fa-jsfiddle:before {
  content: "\f1cc";
}
.fa-key:before {
  content: "\f084";
}
.fa-keyboard:before {
  content: "\f11c";
}
.fa-keycdn:before {
  content: "\f3ba";
}
.fa-kickstarter:before {
  content: "\f3bb";
}
.fa-kickstarter-k:before {
  content: "\f3bc";
}
.fa-korvue:before {
  content: "\f42f";
}
.fa-language:before {
  content: "\f1ab";
}
.fa-laptop:before {
  content: "\f109";
}
.fa-laravel:before {
  content: "\f3bd";
}
.fa-lastfm:before {
  content: "\f202";
}
.fa-lastfm-square:before {
  content: "\f203";
}
.fa-leaf:before {
  content: "\f06c";
}
.fa-leanpub:before {
  content: "\f212";
}
.fa-lemon:before {
  content: "\f094";
}
.fa-less:before {
  content: "\f41d";
}
.fa-level-down-alt:before {
  content: "\f3be";
}
.fa-level-up-alt:before {
  content: "\f3bf";
}
.fa-life-ring:before {
  content: "\f1cd";
}
.fa-lightbulb:before {
  content: "\f0eb";
}
.fa-line:before {
  content: "\f3c0";
}
.fa-link:before {
  content: "\f0c1";
}
.fa-linkedin:before {
  content: "\f08c";
}
.fa-linkedin-in:before {
  content: "\f0e1";
}
.fa-linode:before {
  content: "\f2b8";
}
.fa-linux:before {
  content: "\f17c";
}
.fa-lira-sign:before {
  content: "\f195";
}
.fa-list:before {
  content: "\f03a";
}
.fa-list-alt:before {
  content: "\f022";
}
.fa-list-ol:before {
  content: "\f0cb";
}
.fa-list-ul:before {
  content: "\f0ca";
}
.fa-location-arrow:before {
  content: "\f124";
}
.fa-lock:before {
  content: "\f023";
}
.fa-lock-open:before {
  content: "\f3c1";
}
.fa-long-arrow-alt-down:before {
  content: "\f309";
}
.fa-long-arrow-alt-left:before {
  content: "\f30a";
}
.fa-long-arrow-alt-right:before {
  content: "\f30b";
}
.fa-long-arrow-alt-up:before {
  content: "\f30c";
}
.fa-low-vision:before {
  content: "\f2a8";
}
.fa-lyft:before {
  content: "\f3c3";
}
.fa-magento:before {
  content: "\f3c4";
}
.fa-magic:before {
  content: "\f0d0";
}
.fa-magnet:before {
  content: "\f076";
}
.fa-male:before {
  content: "\f183";
}
.fa-map:before {
  content: "\f279";
}
.fa-map-marker:before {
  content: "\f041";
}
.fa-map-marker-alt:before {
  content: "\f3c5";
}
.fa-map-pin:before {
  content: "\f276";
}
.fa-map-signs:before {
  content: "\f277";
}
.fa-mars:before {
  content: "\f222";
}
.fa-mars-double:before {
  content: "\f227";
}
.fa-mars-stroke:before {
  content: "\f229";
}
.fa-mars-stroke-h:before {
  content: "\f22b";
}
.fa-mars-stroke-v:before {
  content: "\f22a";
}
.fa-maxcdn:before {
  content: "\f136";
}
.fa-medapps:before {
  content: "\f3c6";
}
.fa-medium:before {
  content: "\f23a";
}
.fa-medium-m:before {
  content: "\f3c7";
}
.fa-medkit:before {
  content: "\f0fa";
}
.fa-medrt:before {
  content: "\f3c8";
}
.fa-meetup:before {
  content: "\f2e0";
}
.fa-meh:before {
  content: "\f11a";
}
.fa-mercury:before {
  content: "\f223";
}
.fa-microchip:before {
  content: "\f2db";
}
.fa-microphone:before {
  content: "\f130";
}
.fa-microphone-slash:before {
  content: "\f131";
}
.fa-microsoft:before {
  content: "\f3ca";
}
.fa-minus:before {
  content: "\f068";
}
.fa-minus-circle:before {
  content: "\f056";
}
.fa-minus-square:before {
  content: "\f146";
}
.fa-mix:before {
  content: "\f3cb";
}
.fa-mixcloud:before {
  content: "\f289";
}
.fa-mizuni:before {
  content: "\f3cc";
}
.fa-mobile:before {
  content: "\f10b";
}
.fa-mobile-alt:before {
  content: "\f3cd";
}
.fa-modx:before {
  content: "\f285";
}
.fa-monero:before {
  content: "\f3d0";
}
.fa-money-bill-alt:before {
  content: "\f3d1";
}
.fa-moon:before {
  content: "\f186";
}
.fa-motorcycle:before {
  content: "\f21c";
}
.fa-mouse-pointer:before {
  content: "\f245";
}
.fa-music:before {
  content: "\f001";
}
.fa-napster:before {
  content: "\f3d2";
}
.fa-neuter:before {
  content: "\f22c";
}
.fa-newspaper:before {
  content: "\f1ea";
}
.fa-nintendo-switch:before {
  content: "\f418";
}
.fa-node:before {
  content: "\f419";
}
.fa-node-js:before {
  content: "\f3d3";
}
.fa-npm:before {
  content: "\f3d4";
}
.fa-ns8:before {
  content: "\f3d5";
}
.fa-nutritionix:before {
  content: "\f3d6";
}
.fa-object-group:before {
  content: "\f247";
}
.fa-object-ungroup:before {
  content: "\f248";
}
.fa-odnoklassniki:before {
  content: "\f263";
}
.fa-odnoklassniki-square:before {
  content: "\f264";
}
.fa-opencart:before {
  content: "\f23d";
}
.fa-openid:before {
  content: "\f19b";
}
.fa-opera:before {
  content: "\f26a";
}
.fa-optin-monster:before {
  content: "\f23c";
}
.fa-osi:before {
  content: "\f41a";
}
.fa-outdent:before {
  content: "\f03b";
}
.fa-page4:before {
  content: "\f3d7";
}
.fa-pagelines:before {
  content: "\f18c";
}
.fa-paint-brush:before {
  content: "\f1fc";
}
.fa-palfed:before {
  content: "\f3d8";
}
.fa-pallet:before {
  content: "\f482";
}
.fa-paper-plane:before {
  content: "\f1d8";
}
.fa-paperclip:before {
  content: "\f0c6";
}
.fa-paragraph:before {
  content: "\f1dd";
}
.fa-paste:before {
  content: "\f0ea";
}
.fa-patreon:before {
  content: "\f3d9";
}
.fa-pause:before {
  content: "\f04c";
}
.fa-pause-circle:before {
  content: "\f28b";
}
.fa-paw:before {
  content: "\f1b0";
}
.fa-paypal:before {
  content: "\f1ed";
}
.fa-pen-square:before {
  content: "\f14b";
}
.fa-pencil-alt:before {
  content: "\f303";
}
.fa-percent:before {
  content: "\f295";
}
.fa-periscope:before {
  content: "\f3da";
}
.fa-phabricator:before {
  content: "\f3db";
}
.fa-phoenix-framework:before {
  content: "\f3dc";
}
.fa-phone:before {
  content: "\f095";
}
.fa-phone-square:before {
  content: "\f098";
}
.fa-phone-volume:before {
  content: "\f2a0";
}
.fa-php:before {
  content: "\f457";
}
.fa-pied-piper:before {
  content: "\f2ae";
}
.fa-pied-piper-alt:before {
  content: "\f1a8";
}
.fa-pied-piper-pp:before {
  content: "\f1a7";
}
.fa-pills:before {
  content: "\f484";
}
.fa-pinterest:before {
  content: "\f0d2";
}
.fa-pinterest-p:before {
  content: "\f231";
}
.fa-pinterest-square:before {
  content: "\f0d3";
}
.fa-plane:before {
  content: "\f072";
}
.fa-play:before {
  content: "\f04b";
}
.fa-play-circle:before {
  content: "\f144";
}
.fa-playstation:before {
  content: "\f3df";
}
.fa-plug:before {
  content: "\f1e6";
}
.fa-plus:before {
  content: "\f067";
}
.fa-plus-circle:before {
  content: "\f055";
}
.fa-plus-square:before {
  content: "\f0fe";
}
.fa-podcast:before {
  content: "\f2ce";
}
.fa-pound-sign:before {
  content: "\f154";
}
.fa-power-off:before {
  content: "\f011";
}
.fa-print:before {
  content: "\f02f";
}
.fa-product-hunt:before {
  content: "\f288";
}
.fa-pushed:before {
  content: "\f3e1";
}
.fa-puzzle-piece:before {
  content: "\f12e";
}
.fa-python:before {
  content: "\f3e2";
}
.fa-qq:before {
  content: "\f1d6";
}
.fa-qrcode:before {
  content: "\f029";
}
.fa-question:before {
  content: "\f128";
}
.fa-question-circle:before {
  content: "\f059";
}
.fa-quidditch:before {
  content: "\f458";
}
.fa-quinscape:before {
  content: "\f459";
}
.fa-quora:before {
  content: "\f2c4";
}
.fa-quote-left:before {
  content: "\f10d";
}
.fa-quote-right:before {
  content: "\f10e";
}
.fa-random:before {
  content: "\f074";
}
.fa-ravelry:before {
  content: "\f2d9";
}
.fa-react:before {
  content: "\f41b";
}
.fa-rebel:before {
  content: "\f1d0";
}
.fa-recycle:before {
  content: "\f1b8";
}
.fa-red-river:before {
  content: "\f3e3";
}
.fa-reddit:before {
  content: "\f1a1";
}
.fa-reddit-alien:before {
  content: "\f281";
}
.fa-reddit-square:before {
  content: "\f1a2";
}
.fa-redo:before {
  content: "\f01e";
}
.fa-redo-alt:before {
  content: "\f2f9";
}
.fa-registered:before {
  content: "\f25d";
}
.fa-rendact:before {
  content: "\f3e4";
}
.fa-renren:before {
  content: "\f18b";
}
.fa-reply:before {
  content: "\f3e5";
}
.fa-reply-all:before {
  content: "\f122";
}
.fa-replyd:before {
  content: "\f3e6";
}
.fa-resolving:before {
  content: "\f3e7";
}
.fa-retweet:before {
  content: "\f079";
}
.fa-road:before {
  content: "\f018";
}
.fa-rocket:before {
  content: "\f135";
}
.fa-rocketchat:before {
  content: "\f3e8";
}
.fa-rockrms:before {
  content: "\f3e9";
}
.fa-rss:before {
  content: "\f09e";
}
.fa-rss-square:before {
  content: "\f143";
}
.fa-ruble-sign:before {
  content: "\f158";
}
.fa-rupee-sign:before {
  content: "\f156";
}
.fa-safari:before {
  content: "\f267";
}
.fa-sass:before {
  content: "\f41e";
}
.fa-save:before {
  content: "\f0c7";
}
.fa-schlix:before {
  content: "\f3ea";
}
.fa-scribd:before {
  content: "\f28a";
}
.fa-search:before {
  content: "\f002";
}
.fa-search-minus:before {
  content: "\f010";
}
.fa-search-plus:before {
  content: "\f00e";
}
.fa-searchengin:before {
  content: "\f3eb";
}
.fa-sellcast:before {
  content: "\f2da";
}
.fa-sellsy:before {
  content: "\f213";
}
.fa-server:before {
  content: "\f233";
}
.fa-servicestack:before {
  content: "\f3ec";
}
.fa-share:before {
  content: "\f064";
}
.fa-share-alt:before {
  content: "\f1e0";
}
.fa-share-alt-square:before {
  content: "\f1e1";
}
.fa-share-square:before {
  content: "\f14d";
}
.fa-shekel-sign:before {
  content: "\f20b";
}
.fa-shield-alt:before {
  content: "\f3ed";
}
.fa-ship:before {
  content: "\f21a";
}
.fa-shipping-fast:before {
  content: "\f48b";
}
.fa-shirtsinbulk:before {
  content: "\f214";
}
.fa-shopping-bag:before {
  content: "\f290";
}
.fa-shopping-basket:before {
  content: "\f291";
}
.fa-shopping-cart:before {
  content: "\f07a";
}
.fa-shower:before {
  content: "\f2cc";
}
.fa-sign-in-alt:before {
  content: "\f2f6";
}
.fa-sign-language:before {
  content: "\f2a7";
}
.fa-sign-out-alt:before {
  content: "\f2f5";
}
.fa-signal:before {
  content: "\f012";
}
.fa-simplybuilt:before {
  content: "\f215";
}
.fa-sistrix:before {
  content: "\f3ee";
}
.fa-sitemap:before {
  content: "\f0e8";
}
.fa-skyatlas:before {
  content: "\f216";
}
.fa-skype:before {
  content: "\f17e";
}
.fa-slack:before {
  content: "\f198";
}
.fa-slack-hash:before {
  content: "\f3ef";
}
.fa-sliders-h:before {
  content: "\f1de";
}
.fa-slideshare:before {
  content: "\f1e7";
}
.fa-smile:before {
  content: "\f118";
}
.fa-snapchat:before {
  content: "\f2ab";
}
.fa-snapchat-ghost:before {
  content: "\f2ac";
}
.fa-snapchat-square:before {
  content: "\f2ad";
}
.fa-snowflake:before {
  content: "\f2dc";
}
.fa-sort:before {
  content: "\f0dc";
}
.fa-sort-alpha-down:before {
  content: "\f15d";
}
.fa-sort-alpha-up:before {
  content: "\f15e";
}
.fa-sort-amount-down:before {
  content: "\f160";
}
.fa-sort-amount-up:before {
  content: "\f161";
}
.fa-sort-down:before {
  content: "\f0dd";
}
.fa-sort-numeric-down:before {
  content: "\f162";
}
.fa-sort-numeric-up:before {
  content: "\f163";
}
.fa-sort-up:before {
  content: "\f0de";
}
.fa-soundcloud:before {
  content: "\f1be";
}
.fa-space-shuttle:before {
  content: "\f197";
}
.fa-speakap:before {
  content: "\f3f3";
}
.fa-spinner:before {
  content: "\f110";
}
.fa-spotify:before {
  content: "\f1bc";
}
.fa-square:before {
  content: "\f0c8";
}
.fa-square-full:before {
  content: "\f45c";
}
.fa-stack-exchange:before {
  content: "\f18d";
}
.fa-stack-overflow:before {
  content: "\f16c";
}
.fa-star:before {
  content: "\f005";
}
.fa-star-half:before {
  content: "\f089";
}
.fa-staylinked:before {
  content: "\f3f5";
}
.fa-steam:before {
  content: "\f1b6";
}
.fa-steam-square:before {
  content: "\f1b7";
}
.fa-steam-symbol:before {
  content: "\f3f6";
}
.fa-step-backward:before {
  content: "\f048";
}
.fa-step-forward:before {
  content: "\f051";
}
.fa-stethoscope:before {
  content: "\f0f1";
}
.fa-sticker-mule:before {
  content: "\f3f7";
}
.fa-sticky-note:before {
  content: "\f249";
}
.fa-stop:before {
  content: "\f04d";
}
.fa-stop-circle:before {
  content: "\f28d";
}
.fa-stopwatch:before {
  content: "\f2f2";
}
.fa-strava:before {
  content: "\f428";
}
.fa-street-view:before {
  content: "\f21d";
}
.fa-strikethrough:before {
  content: "\f0cc";
}
.fa-stripe:before {
  content: "\f429";
}
.fa-stripe-s:before {
  content: "\f42a";
}
.fa-studiovinari:before {
  content: "\f3f8";
}
.fa-stumbleupon:before {
  content: "\f1a4";
}
.fa-stumbleupon-circle:before {
  content: "\f1a3";
}
.fa-subscript:before {
  content: "\f12c";
}
.fa-subway:before {
  content: "\f239";
}
.fa-suitcase:before {
  content: "\f0f2";
}
.fa-sun:before {
  content: "\f185";
}
.fa-superpowers:before {
  content: "\f2dd";
}
.fa-superscript:before {
  content: "\f12b";
}
.fa-supple:before {
  content: "\f3f9";
}
.fa-sync:before {
  content: "\f021";
}
.fa-sync-alt:before {
  content: "\f2f1";
}
.fa-syringe:before {
  content: "\f48e";
}
.fa-table:before {
  content: "\f0ce";
}
.fa-table-tennis:before {
  content: "\f45d";
}
.fa-tablet:before {
  content: "\f10a";
}
.fa-tablet-alt:before {
  content: "\f3fa";
}
.fa-tachometer-alt:before {
  content: "\f3fd";
}
.fa-tag:before {
  content: "\f02b";
}
.fa-tags:before {
  content: "\f02c";
}
.fa-tasks:before {
  content: "\f0ae";
}
.fa-taxi:before {
  content: "\f1ba";
}
.fa-telegram:before {
  content: "\f2c6";
}
.fa-telegram-plane:before {
  content: "\f3fe";
}
.fa-tencent-weibo:before {
  content: "\f1d5";
}
.fa-terminal:before {
  content: "\f120";
}
.fa-text-height:before {
  content: "\f034";
}
.fa-text-width:before {
  content: "\f035";
}
.fa-th:before {
  content: "\f00a";
}
.fa-th-large:before {
  content: "\f009";
}
.fa-th-list:before {
  content: "\f00b";
}
.fa-themeisle:before {
  content: "\f2b2";
}
.fa-thermometer:before {
  content: "\f491";
}
.fa-thermometer-empty:before {
  content: "\f2cb";
}
.fa-thermometer-full:before {
  content: "\f2c7";
}
.fa-thermometer-half:before {
  content: "\f2c9";
}
.fa-thermometer-quarter:before {
  content: "\f2ca";
}
.fa-thermometer-three-quarters:before {
  content: "\f2c8";
}
.fa-thumbs-down:before {
  content: "\f165";
}
.fa-thumbs-up:before {
  content: "\f164";
}
.fa-thumbtack:before {
  content: "\f08d";
}
.fa-ticket-alt:before {
  content: "\f3ff";
}
.fa-times:before {
  content: "\f00d";
}
.fa-times-circle:before {
  content: "\f057";
}
.fa-tint:before {
  content: "\f043";
}
.fa-toggle-off:before {
  content: "\f204";
}
.fa-toggle-on:before {
  content: "\f205";
}
.fa-trademark:before {
  content: "\f25c";
}
.fa-train:before {
  content: "\f238";
}
.fa-transgender:before {
  content: "\f224";
}
.fa-transgender-alt:before {
  content: "\f225";
}
.fa-trash:before {
  content: "\f1f8";
}
.fa-trash-alt:before {
  content: "\f2ed";
}
.fa-tree:before {
  content: "\f1bb";
}
.fa-trello:before {
  content: "\f181";
}
.fa-tripadvisor:before {
  content: "\f262";
}
.fa-trophy:before {
  content: "\f091";
}
.fa-truck:before {
  content: "\f0d1";
}
.fa-tty:before {
  content: "\f1e4";
}
.fa-tumblr:before {
  content: "\f173";
}
.fa-tumblr-square:before {
  content: "\f174";
}
.fa-tv:before {
  content: "\f26c";
}
.fa-twitch:before {
  content: "\f1e8";
}
.fa-twitter:before {
  content: "\f099";
}
.fa-twitter-square:before {
  content: "\f081";
}
.fa-typo3:before {
  content: "\f42b";
}
.fa-uber:before {
  content: "\f402";
}
.fa-uikit:before {
  content: "\f403";
}
.fa-umbrella:before {
  content: "\f0e9";
}
.fa-underline:before {
  content: "\f0cd";
}
.fa-undo:before {
  content: "\f0e2";
}
.fa-undo-alt:before {
  content: "\f2ea";
}
.fa-uniregistry:before {
  content: "\f404";
}
.fa-universal-access:before {
  content: "\f29a";
}
.fa-university:before {
  content: "\f19c";
}
.fa-unlink:before {
  content: "\f127";
}
.fa-unlock:before {
  content: "\f09c";
}
.fa-unlock-alt:before {
  content: "\f13e";
}
.fa-untappd:before {
  content: "\f405";
}
.fa-upload:before {
  content: "\f093";
}
.fa-usb:before {
  content: "\f287";
}
.fa-user:before {
  content: "\f007";
}
.fa-user-circle:before {
  content: "\f2bd";
}
.fa-user-md:before {
  content: "\f0f0";
}
.fa-user-plus:before {
  content: "\f234";
}
.fa-user-secret:before {
  content: "\f21b";
}
.fa-user-times:before {
  content: "\f235";
}
.fa-users:before {
  content: "\f0c0";
}
.fa-ussunnah:before {
  content: "\f407";
}
.fa-utensil-spoon:before {
  content: "\f2e5";
}
.fa-utensils:before {
  content: "\f2e7";
}
.fa-vaadin:before {
  content: "\f408";
}
.fa-venus:before {
  content: "\f221";
}
.fa-venus-double:before {
  content: "\f226";
}
.fa-venus-mars:before {
  content: "\f228";
}
.fa-viacoin:before {
  content: "\f237";
}
.fa-viadeo:before {
  content: "\f2a9";
}
.fa-viadeo-square:before {
  content: "\f2aa";
}
.fa-viber:before {
  content: "\f409";
}
.fa-video:before {
  content: "\f03d";
}
.fa-vimeo:before {
  content: "\f40a";
}
.fa-vimeo-square:before {
  content: "\f194";
}
.fa-vimeo-v:before {
  content: "\f27d";
}
.fa-vine:before {
  content: "\f1ca";
}
.fa-vk:before {
  content: "\f189";
}
.fa-vnv:before {
  content: "\f40b";
}
.fa-volleyball-ball:before {
  content: "\f45f";
}
.fa-volume-down:before {
  content: "\f027";
}
.fa-volume-off:before {
  content: "\f026";
}
.fa-volume-up:before {
  content: "\f028";
}
.fa-vuejs:before {
  content: "\f41f";
}
.fa-warehouse:before {
  content: "\f494";
}
.fa-weibo:before {
  content: "\f18a";
}
.fa-weight:before {
  content: "\f496";
}
.fa-weixin:before {
  content: "\f1d7";
}
.fa-whatsapp:before {
  content: "\f232";
}
.fa-whatsapp-square:before {
  content: "\f40c";
}
.fa-wheelchair:before {
  content: "\f193";
}
.fa-whmcs:before {
  content: "\f40d";
}
.fa-wifi:before {
  content: "\f1eb";
}
.fa-wikipedia-w:before {
  content: "\f266";
}
.fa-window-close:before {
  content: "\f410";
}
.fa-window-maximize:before {
  content: "\f2d0";
}
.fa-window-minimize:before {
  content: "\f2d1";
}
.fa-window-restore:before {
  content: "\f2d2";
}
.fa-windows:before {
  content: "\f17a";
}
.fa-won-sign:before {
  content: "\f159";
}
.fa-wordpress:before {
  content: "\f19a";
}
.fa-wordpress-simple:before {
  content: "\f411";
}
.fa-wpbeginner:before {
  content: "\f297";
}
.fa-wpexplorer:before {
  content: "\f2de";
}
.fa-wpforms:before {
  content: "\f298";
}
.fa-wrench:before {
  content: "\f0ad";
}
.fa-xbox:before {
  content: "\f412";
}
.fa-xing:before {
  content: "\f168";
}
.fa-xing-square:before {
  content: "\f169";
}
.fa-y-combinator:before {
  content: "\f23b";
}
.fa-yahoo:before {
  content: "\f19e";
}
.fa-yandex:before {
  content: "\f413";
}
.fa-yandex-international:before {
  content: "\f414";
}
.fa-yelp:before {
  content: "\f1e9";
}
.fa-yen-sign:before {
  content: "\f157";
}
.fa-yoast:before {
  content: "\f2b1";
}
.fa-youtube:before {
  content: "\f167";
}
.fa-youtube-square:before {
  content: "\f431";
}
.sr-only {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}
.sr-only-focusable:active,
.sr-only-focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
}
/*!
 * Font Awesome Free 5.0.8 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 */
@font-face {
  font-family: 'Font Awesome 5 Free';
  font-style: normal;
  font-weight: 900;
  src: url('../../fonts/fa-solid-900.eot');
  src: url('../../fonts/fa-solid-900.eot?#iefix') format('embedded-opentype'), url('../../fonts/fa-solid-900.woff2') format('woff2'), url('../../fonts/fa-solid-900.woff') format('woff'), url('../../fonts/fa-solid-900.ttf') format('truetype'), url('../../fonts/fa-solid-900.svg#fontawesome') format('svg');
}
.fa,
.fas {
  font-family: 'Font Awesome 5 Free';
  font-weight: 900;
}
/*!
 * Font Awesome Free 5.0.8 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 */
@font-face {
  font-family: 'Font Awesome 5 Brands';
  font-style: normal;
  font-weight: normal;
  src: url('../../fonts/fa-brands-400.eot');
  src: url('../../fonts/fa-brands-400.eot?#iefix') format('embedded-opentype'), url('../../fonts/fa-brands-400.woff2') format('woff2'), url('../../fonts/fa-brands-400.woff') format('woff'), url('../../fonts/fa-brands-400.ttf') format('truetype'), url('../../fonts/fa-brands-400.svg#fontawesome') format('svg');
}
.fab {
  font-family: 'Font Awesome 5 Brands';
}
.mix-no-border-radius {
  -webkit-border-radius: 0px;
  -moz-border-radius: 0px;
  border-radius: 0px;
}
@media screen and (max-width: 639px) {
  .mix-responsive {
    overflow-y: hidden;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
  .mix-responsive td {
    white-space: nowrap;
  }
}
body {
  background-color: #fff;
  margin: 0 auto;
  height: 100%;
  zoom: 1;
  letter-spacing: normal;
  word-spacing: normal;
  color: #333;
  font: 15px "Source Sans Pro", "Calibri", "Helvetica", "Arial", "Freesans", "Clean", sans-serif;
  line-height: 1.4;
  -webkit-font-smoothing: antialiased;
  width: 960px;
  -webkit-hyphens: auto;
  -moz-hyphens: auto;
  -ms-hyphens: auto;
  -o-hyphens: auto;
  hyphens: auto;
  text-align: justify;
}
@media screen and (max-width: 659px) {
  body {
    width: 100%;
  }
}
@media screen and (min-width: 660px) {
  body {
    width: 660px;
  }
}
#main,
#footer,
#header {
  width: 94%;
  margin: auto;
}
#footer {
  border-top: 1px solid #ddd;
  text-align: center;
  font-size: 75%;
}
#footer p {
  line-height: 0.6em;
}
#toc {
  margin-top: -10px;
}
#toc ul {
  list-style-type: none;
  padding-left: 20px;
}
#toc > ul {
  padding-left: 0;
}
/* Lists */
ul,
ol {
  padding-left: 30px;
}
li p {
  margin: 0 auto;
}
.unstyled li {
  list-style-type: none;
}
dl dt {
  font-weight: bold;
}
dl dd {
  padding: 0 0 0.2em 0;
}
/* Headings */
h1,
h2,
h3,
h4,
h5,
h6 {
  color: #111;
  border-bottom: 1px solid #ddd;
}
h1 {
  text-align: center;
}
/* Blocks */
blockquote {
  border-left: 3px solid #dedede;
  padding: 0px 10px;
  margin: 10px 0;
  font-style: italic;
}
pre {
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  margin: 10px auto;
  padding: 2px 4px 0 4px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.8);
  color: #333;
  background-color: #f8f8f8;
  border: 1px solid #ccc;
  white-space: pre-wrap;
  margin: auto;
  font-family: "Source Code Pro", "Monaco", "DejaVu Sans Mono", "Courier New", monospace;
  padding: 0;
}
pre a {
  color: #264c72;
}
pre p {
  margin: 0 auto;
}
@media screen and (max-width: 639px) {
  pre {
    overflow-y: hidden;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
  pre td {
    white-space: nowrap;
  }
}
pre code {
  box-shadow: none;
  background: #f8f8f8;
  padding: 0px 2px 0 2px;
  border: none;
  line-height: 1.2em;
}
pre .hljs {
  padding: 0 3px;
}
.responsive {
  width: 100%;
}
@media screen and (max-width: 639px) {
  .responsive {
    overflow-y: hidden;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
  .responsive td {
    white-space: nowrap;
  }
}
table {
  border-collapse: collapse;
  margin: 15px auto;
  border-spacing: 0;
  empty-cells: show;
  min-width: 100%;
}
table thead {
  background: #f8f8f8;
  color: #222;
  text-align: left;
  vertical-align: bottom;
}
table td,
table th {
  background-color: transparent;
  border: 1px solid #999;
  font-size: inherit;
  margin: 0;
  overflow: visible;
  padding: 6px 12px;
}
address {
  font-style: italic;
  color: #999;
}
hr {
  border: 0;
  height: 1px;
  background-image: -webkit-linear-gradient(left, rgba(99, 99, 99, 0), rgba(99, 99, 99, 0.75), rgba(99, 99, 99, 0));
  background-image: -moz-linear-gradient(left, rgba(99, 99, 99, 0), rgba(99, 99, 99, 0.75), rgba(99, 99, 99, 0));
  background-image: -ms-linear-gradient(left, rgba(99, 99, 99, 0), rgba(99, 99, 99, 0.75), rgba(99, 99, 99, 0));
  background-image: -o-linear-gradient(left, rgba(99, 99, 99, 0), rgba(99, 99, 99, 0.75), rgba(99, 99, 99, 0));
}
.center {
  margin: auto;
  text-align: center;
}
/* Inline */
[class^="fa-"] {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
}
[class^="fas-"] {
  font-family: "Font Awesome 5 Free";
}
[class^="fab-"] {
  font-family: "Font Awesome 5 Brands";
}
code,
span.code {
  color: #333;
  background-color: #f8f8f8;
  padding: 0 3px 0;
  display: inline-block;
  width: auto;
  margin: 1px;
  -webkit-border-radius: 2px;
  -moz-border-radius: 2px;
  border-radius: 2px;
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.8);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  margin: 2px 0px;
  font-family: "Source Code Pro", "Monaco", "DejaVu Sans Mono", "Courier New", monospace;
  font-size: 85%;
  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  -o-hyphens: none;
  hyphens: none;
}
kbd,
span.kbd {
  color: #333;
  background-color: #f8f8f8;
  padding: 0 3px 0;
  display: inline-block;
  width: auto;
  margin: 1px;
  -webkit-border-radius: 2px;
  -moz-border-radius: 2px;
  border-radius: 2px;
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.8);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  font-family: "Source Code Pro", "Monaco", "DejaVu Sans Mono", "Courier New", monospace;
  font-weight: bold;
  border-right: 1px solid #bbb;
  border-bottom: 1px solid #bbb;
  line-height: 1em;
  font-size: 80%;
  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  -o-hyphens: none;
  hyphens: none;
}
mark,
span.mark {
  padding: 0 1px;
  color: #222;
}
abbr,
span.abbr {
  font-variant: small-caps;
  font-weight: bolder;
  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  -o-hyphens: none;
  hyphens: none;
}
abbr:hover,
span.abbr:hover {
  cursor: help;
}
samp,
span.samp {
  font-size: 90%;
  color: #333;
  background-color: #f8f8f8;
  padding: 0 3px 0;
  display: inline-block;
  width: auto;
  margin: 1px;
  -webkit-border-radius: 2px;
  -moz-border-radius: 2px;
  border-radius: 2px;
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.8);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  -o-hyphens: none;
  hyphens: none;
}
var,
span.var {
  font-size: 90%;
  font-family: "Source Code Pro", "Monaco", "DejaVu Sans Mono", "Courier New", monospace;
  font-weight: bold;
  font-style: normal;
  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  -o-hyphens: none;
  hyphens: none;
}
cite,
span.cite {
  font-weight: bold;
  font-style: italic;
  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  -o-hyphens: none;
  hyphens: none;
}
q,
span.q {
  font-style: italic;
  color: #666;
  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  -o-hyphens: none;
  hyphens: none;
}
span.tt,
span.cmd,
span.opt,
span.arg,
span.kwd,
span.ext,
span.file,
span.dir {
  font-size: 90%;
  font-family: "Source Code Pro", "Monaco", "DejaVu Sans Mono", "Courier New", monospace;
  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  -o-hyphens: none;
  hyphens: none;
}
span.ext,
span.kwd {
  font-weight: bold;
}
img {
  max-width: 100%;
}
/* Links */
a,
a:visited {
  color: #4183c4;
  text-decoration: none;
}
a:hover,
a:visited:hover {
  text-decoration: underline;
}
a[href^="http://"]:before,
a[href^="https://"]:before,
a[href^="ftp://"]:before,
a[href^="sftp://"]:before {
  content: "\f0ac" "\202F";
  font-family: "Font Awesome 5 Free";
}
a[href^="mailto:"]:before {
  content: "\f0e0" "\202F";
  font-family: "Font Awesome 5 Free";
}
a[href^="tel:"]:before {
  content: "\f095" "\202F";
  font-family: "Font Awesome 5 Free";
}
a[href^="skype://"]:before,
a[href*="skype.com"]:before {
  content: "\f17e" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="twitter.com"]:before {
  content: "\f099" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="linkedin.com"]:before {
  content: "\f08c" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="foursquare.com"]:before {
  content: "\f180" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="facebook.com"]:before {
  content: "\f082" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="flickr.com"]:before {
  content: "\f16e" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="github.com"]:before {
  content: "\f09b" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="stackoverflow.com"]:before {
  content: "\f16c" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="tripadvisor.com"]:before {
  content: "\f262" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="trello.com"]:before {
  content: "\f181" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="wordpress.com"]:before {
  content: "\f19a" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="wordpress.org"]:before {
  content: "\f19a" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="amazon.com"]:before {
  content: "\f270" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="medium.com"]:before {
  content: "\f23a" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="youtube.com"]:before {
  content: "\f167" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="dropbox.com"]:before {
  content: "\f16b" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="instagram.com"]:before {
  content: "\f16d" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="google.com"]:before {
  content: "\f1a0" "\202F";
  font-family: "Font Awesome 5 Free";
}
a[href*="plus.google.com"]:before {
  content: "\f0d4" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="yahoo.com"]:before {
  content: "\f19e" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="tumblr.com"]:before {
  content: "\f174" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="vimeo.com"]:before {
  content: "\f194" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="bitbucket.com"]:before {
  content: "\f171" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="pinterest.com"]:before {
  content: "\f0d2" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="reddit.com"]:before {
  content: "\f1a1" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="digg.com"]:before {
  content: "\f1a6" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="news.ycombinator.com"]:before {
  content: "\f1d4" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="jsfiddle.com"]:before {
  content: "\f1cc" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="deviantart.com"]:before {
  content: "\f1bd" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href^="git@"]:before {
  content: "\f1d3" "\202F";
  font-family: "Font Awesome 5 Brands";
}
a[href*="wikipedia.com"]:before {
  content: "\f266" "\202F";
  font-family: "Font Awesome 5 Brands";
}
#footer a:before {
  content: "";
}
a[href="#document-top"] {
  vertical-align: super;
  font-weight: normal;
  font-size: 15px;
  float: right;
}
a[href="#document-top"]:before {
  content: "\f102" "\202F";
  font-family: "Font Awesome 5 Free";
}
#footer a:hover {
  text-decoration: none;
}
#footer a:after {
  content: none;
}
.note {
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  margin: 10px auto;
  padding: 2px 4px 0 4px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.8);
  color: #264c72;
  background-color: #d8ebf8;
  border: 1px solid #A4D1EF;
  font-size: 90%;
}
.note a {
  color: #264c72;
}
.note p {
  margin: 0 auto;
}
.note p {
  margin: 0 auto;
}
.note p:first-child {
  font-weight: bold;
  color: #264c72;
}
.note p:first-child:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #264c72;
  content: "\f08d" " ";
}
.note a {
  color: #132639;
}
.tip {
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  margin: 10px auto;
  padding: 2px 4px 0 4px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.8);
  color: #009926;
  background-color: #d8f5cd;
  border: 1px solid #B0EB99;
  font-size: 90%;
}
.tip a {
  color: #264c72;
}
.tip p {
  margin: 0 auto;
}
.tip p {
  margin: 0 auto;
}
.tip p:first-child {
  font-weight: bold;
  color: #009926;
}
.tip p:first-child:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #009926;
  content: "\f058" " ";
}
.tip a {
  color: #004d13;
}
.warning {
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  margin: 10px auto;
  padding: 2px 4px 0 4px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.8);
  color: #705400;
  background-color: #FFEBAD;
  border: 1px solid #FFDB70;
  font-size: 90%;
}
.warning a {
  color: #264c72;
}
.warning p {
  margin: 0 auto;
}
.warning p {
  margin: 0 auto;
}
.warning p:first-child {
  font-weight: bold;
  color: #705400;
}
.warning p:first-child:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #705400;
  content: "\f071" " ";
}
.warning a {
  color: #241b00;
}
.sidebar {
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  margin: 10px auto;
  padding: 2px 4px 0 4px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.8);
  color: #555;
  background-color: #f8f8f8;
  border: 1px solid #f8f8f8;
  font-size: 90%;
}
.sidebar a {
  color: #264c72;
}
.sidebar p {
  margin: 0 auto;
}
.sidebar p {
  margin: 0 auto;
}
.sidebar p:first-child {
  font-weight: bold;
  color: #555;
}
.sidebar p:first-child:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #555;
  content: "\f05a" " ";
}
.sidebar a {
  color: #2f2f2f;
}
.output {
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  margin: 10px auto;
  padding: 2px 4px 0 4px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.8);
  color: #555;
  background-color: #f8f8f8;
  border: 1px solid #f8f8f8;
}
.output a {
  color: #264c72;
}
.output p {
  margin: 0 auto;
}
.terminal {
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  margin: 10px auto;
  padding: 2px 4px 0 4px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.8);
  color: #eee;
  background-color: #222;
  border: 1px solid #ccc;
  padding: 0 3px;
  border: 2px solid #999;
  white-space: pre-wrap;
  border-top: 10px solid #999;
}
.terminal a {
  color: #264c72;
}
.terminal p {
  margin: 0 auto;
}
@media screen and (max-width: 639px) {
  .terminal {
    overflow-y: hidden;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
  .terminal td {
    white-space: nowrap;
  }
}
.terminal p,
.terminal p:first-child {
  margin-top: -40px;
  margin-bottom: 0;
  text-shadow: none;
  font-weight: normal;
  font-family: "Source Code Pro", "Monaco", "DejaVu Sans Mono", "Courier New", monospace;
  font-size: 85%;
  color: #eee;
}
.terminal p:first-child,
.terminal p:first-child:first-child {
  margin-top: 0px;
}
.terminal p:before,
.terminal p:first-child:before {
  font-family: "Source Code Pro", "Monaco", "DejaVu Sans Mono", "Courier New", monospace;
  font-style: normal;
  font-weight: bold;
  color: #009926;
  content: "$ ";
}
.terminal-su {
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  margin: 10px auto;
  padding: 2px 4px 0 4px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.8);
  color: #eee;
  background-color: #222;
  border: 1px solid #ccc;
  padding: 0 3px;
  border: 2px solid #999;
  white-space: pre-wrap;
  border-top: 10px solid #999;
}
.terminal-su a {
  color: #264c72;
}
.terminal-su p {
  margin: 0 auto;
}
@media screen and (max-width: 639px) {
  .terminal-su {
    overflow-y: hidden;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
  .terminal-su td {
    white-space: nowrap;
  }
}
.terminal-su p,
.terminal-su p:first-child {
  margin-top: -40px;
  margin-bottom: 0;
  text-shadow: none;
  font-weight: normal;
  font-family: "Source Code Pro", "Monaco", "DejaVu Sans Mono", "Courier New", monospace;
  font-size: 85%;
  color: #eee;
}
.terminal-su p:first-child,
.terminal-su p:first-child:first-child {
  margin-top: 0px;
}
.terminal-su p:before,
.terminal-su p:first-child:before {
  font-family: "Source Code Pro", "Monaco", "DejaVu Sans Mono", "Courier New", monospace;
  font-style: normal;
  font-weight: bold;
  color: #009926;
  content: "$ ";
}
.terminal-su p:before,
.terminal-su p:first-child:before {
  color: #CC3300;
  content: "# ";
}
div .terminal {
  margin: 2px auto;
}
.todo {
  color: #CC3300;
}
.todo:before {
  color: #CC3300;
  background-color: #f8d8d8;
  padding: 0 3px 0;
  display: inline-block;
  width: auto;
  margin: 1px;
  -webkit-border-radius: 2px;
  -moz-border-radius: 2px;
  border-radius: 2px;
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.8);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  -webkit-border-radius: 4px;
  -moz-border-radius: 4px;
  border-radius: 4px;
  padding: 1px 1px 1px 1px;
  line-height: 95%;
  width: 70px;
  text-align: center;
  margin-right: 3px;
  box-shadow: none;
  font-size: 90%;
  font-variant: small-caps;
  font-weight: bold;
  content: "todo";
}
.fixme {
  color: #CC3300;
}
.fixme:before {
  color: #CC3300;
  background-color: #f8d8d8;
  padding: 0 3px 0;
  display: inline-block;
  width: auto;
  margin: 1px;
  -webkit-border-radius: 2px;
  -moz-border-radius: 2px;
  border-radius: 2px;
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.8);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  -webkit-border-radius: 4px;
  -moz-border-radius: 4px;
  border-radius: 4px;
  padding: 1px 1px 1px 1px;
  line-height: 95%;
  width: 70px;
  text-align: center;
  margin-right: 3px;
  box-shadow: none;
  font-size: 90%;
  font-variant: small-caps;
  font-weight: bold;
  content: "fixme";
}
.deadline {
  color: #CC3300;
}
.deadline:before {
  color: #CC3300;
  background-color: #f8d8d8;
  padding: 0 3px 0;
  display: inline-block;
  width: auto;
  margin: 1px;
  -webkit-border-radius: 2px;
  -moz-border-radius: 2px;
  border-radius: 2px;
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.8);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  -webkit-border-radius: 4px;
  -moz-border-radius: 4px;
  border-radius: 4px;
  padding: 1px 1px 1px 1px;
  line-height: 95%;
  width: 70px;
  text-align: center;
  margin-right: 3px;
  box-shadow: none;
  font-size: 90%;
  font-variant: small-caps;
  font-weight: bold;
  content: "deadline";
}
.important {
  color: #CC3300;
}
.important:before {
  color: #CC3300;
  background-color: #f8d8d8;
  padding: 0 3px 0;
  display: inline-block;
  width: auto;
  margin: 1px;
  -webkit-border-radius: 2px;
  -moz-border-radius: 2px;
  border-radius: 2px;
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.8);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  -webkit-border-radius: 4px;
  -moz-border-radius: 4px;
  border-radius: 4px;
  padding: 1px 1px 1px 1px;
  line-height: 95%;
  width: 70px;
  text-align: center;
  margin-right: 3px;
  box-shadow: none;
  font-size: 90%;
  font-variant: small-caps;
  font-weight: bold;
  content: "important";
}
.urgent {
  color: #CC3300;
}
.urgent:before {
  color: #CC3300;
  background-color: #f8d8d8;
  padding: 0 3px 0;
  display: inline-block;
  width: auto;
  margin: 1px;
  -webkit-border-radius: 2px;
  -moz-border-radius: 2px;
  border-radius: 2px;
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.8);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  -webkit-border-radius: 4px;
  -moz-border-radius: 4px;
  border-radius: 4px;
  padding: 1px 1px 1px 1px;
  line-height: 95%;
  width: 70px;
  text-align: center;
  margin-right: 3px;
  box-shadow: none;
  font-size: 90%;
  font-variant: small-caps;
  font-weight: bold;
  content: "urgent";
}
.verify {
  color: #705400;
}
.verify:before {
  color: #705400;
  background-color: #FFEBAD;
  padding: 0 3px 0;
  display: inline-block;
  width: auto;
  margin: 1px;
  -webkit-border-radius: 2px;
  -moz-border-radius: 2px;
  border-radius: 2px;
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.8);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  -webkit-border-radius: 4px;
  -moz-border-radius: 4px;
  border-radius: 4px;
  padding: 1px 1px 1px 1px;
  line-height: 95%;
  width: 70px;
  text-align: center;
  margin-right: 3px;
  box-shadow: none;
  font-size: 90%;
  font-variant: small-caps;
  font-weight: bold;
  content: "verify";
}
.draftcomment {
  color: #009926;
}
.draftcomment:before {
  color: #009926;
  background-color: #d8f5cd;
  padding: 0 3px 0;
  display: inline-block;
  width: auto;
  margin: 1px;
  -webkit-border-radius: 2px;
  -moz-border-radius: 2px;
  border-radius: 2px;
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.8);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  -webkit-border-radius: 4px;
  -moz-border-radius: 4px;
  border-radius: 4px;
  padding: 1px 1px 1px 1px;
  line-height: 95%;
  width: 70px;
  text-align: center;
  margin-right: 3px;
  box-shadow: none;
  font-size: 90%;
  font-variant: small-caps;
  font-weight: bold;
  content: "comment";
}
.red-circle:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #CC3300;
  content: "\f111" " ";
}
.green-circle:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #00CC33;
  content: "\f111" " ";
}
.yellow-circle:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #F5B800;
  content: "\f111" " ";
}
.gray-circle:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #999;
  content: "\f111" " ";
}
.star:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #F5B800;
  content: "\f005" " ";
}
.heart:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #CC3300;
  content: "\f004" " ";
}
.square:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #CC3300;
  content: "\f0c8" " ";
}
.check:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #00CC33;
  content: "\f14a" " ";
}
.lock:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #F5B800;
  content: "\f023" " ";
}
.unlock:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #F5B800;
  content: "\f09c" " ";
}
.bug:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #CC3300;
  content: "\f188" " ";
}
.tag:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #F5B800;
  content: "\f02b" " ";
}
.tags:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #F5B800;
  content: "\f02c" " ";
}
.date:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #0F4BFF;
  content: "\f133" " ";
}
.time:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #0F4BFF;
  content: "\f017" " ";
}
.attachment:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #333;
  content: "\f0c6" " ";
}
.geo:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #CC3300;
  content: "\f041" " ";
}
.danger:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #CC3300;
  content: "\f071" " ";
}
.question:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #0F4BFF;
  content: "\f059" " ";
}
.phone:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #333;
  content: "\f095" " ";
}
.email:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #333;
  content: "\f0e0" " ";
}
.fax:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #333;
  content: "\f1ac" " ";
}
.print:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #333;
  content: "\f02f" " ";
}
.usb:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #333;
  content: "\f287" " ";
}
.website:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #333;
  content: "\f0ac" " ";
}
.hastyscribe:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 180%;
  color: #333;
  content: "H" " ";
}
.hastyscribe:before {
  font-family: "HastyScribe";
  font-size: 1.8em;
  margin-right: -2%;
  vertical-align: middle;
}
.btc:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 90%;
  color: #333;
  content: "\f15a" "";
}
.eur:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 90%;
  color: #333;
  content: "\f153" "";
}
.usd:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 90%;
  color: #333;
  content: "\f155" "";
}
.gbp:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 90%;
  color: #333;
  content: "\f154" "";
}
.jpy:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 90%;
  color: #333;
  content: "\f157" "";
}
.inr:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 90%;
  color: #333;
  content: "\f156" "";
}
.krw:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 90%;
  color: #333;
  content: "\f159" "";
}
.rub:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 90%;
  color: #333;
  content: "\f158" "";
}
.try:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 90%;
  color: #333;
  content: "\f195" "";
}
.copy:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #333;
  content: "\f1f9" " ";
}
.reg:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #333;
  content: "\f25d" " ";
}
.tm:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #333;
  content: "\f25c" " ";
}
.red-flag:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #CC3300;
  content: "\f024" " ";
}
.green-flag:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #00CC33;
  content: "\f024" " ";
}
.yellow-flag:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #F5B800;
  content: "\f024" " ";
}
.story:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #0F4BFF;
  content: "\f075" " ";
}
.feature:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #00CC33;
  content: "\f058" " ";
}
.project:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #705400;
  content: "\f0b1" " ";
}
.user:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #0F4BFF;
  content: "\f007" " ";
}
.add:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #00CC33;
  content: "\f055" " ";
}
.remove:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #CC3300;
  content: "\f056" " ";
}
.html5:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #CC3300;
  content: "\f13b" " ";
}
.css3:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #0F4BFF;
  content: "\f13c" " ";
}
.apple:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #aaa;
  content: "\f179" " ";
}
.windows:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #0F4BFF;
  content: "\f17a" " ";
}
.linux:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #000;
  content: "\f17c" " ";
}
.android:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #A4C739;
  content: "\f17b" " ";
}
.bluetooth:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #0F4BFF;
  content: "\f293" " ";
}
.wifi:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #333;
  content: "\f1eb" " ";
}
.signal:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #333;
  content: "\f012" " ";
}
.idea:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #F5B800;
  content: "\f0eb" " ";
}
.sticky:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #F5B800;
  content: "\f249" " ";
}
.link:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #0F4BFF;
  content: "\f0c1" " ";
}
.chrome:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #F5B800;
  content: "\f268" " ";
}
.firefox:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #FF6600;
  content: "\f269" " ";
}
.ie:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #0F4BFF;
  content: "\f26b" " ";
}
.edge:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #0F4BFF;
  content: "\f282" " ";
}
.opera:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #CC3300;
  content: "\f26a" " ";
}
.safari:before {
  font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands";
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  color: #0F4BFF;
  content: "\f267" " ";
}
.headings h1 {
  font-size: 2em;
}
.headings h2 {
  font-size: 1.5em;
  counter-reset: h3;
  counter-increment: h2;
}
.headings h2::before {
  content: counter(h2) "\00A0\00A0";
}
.headings h3 {
  font-size: 1.2em;
  counter-reset: h4;
  counter-increment: h3;
}
.headings h3::before {
  content: counter(h2) "." counter(h3) "\00A0\00A0";
}
.headings h4 {
  font-size: 1.1em;
  counter-reset: h5;
  counter-increment: h4;
}
.headings h4::before {
  content: counter(h2) "." counter(h3) "." counter(h4) "\00A0\00A0";
}
.headings h5 {
  font-size: 1em;
  counter-reset: h6;
  counter-increment: h5;
}
.headings h5::before {
  content: counter(h2) "." counter(h3) "." counter(h4) "." counter(h5) "\00A0\00A0";
}
.headings h6 {
  font-size: 1em;
  counter-increment: h6;
}
.headings h6::before {
  content: counter(h2) "." counter(h3) "." counter(h4) "." counter(h5) "." counter(h6) "\00A0\00A0";
}
/***************/
.headings #toc {
  counter-reset: toc2;
}
.headings #toc li li a {
  counter-reset: toc3;
  counter-increment: toc2;
}
.headings #toc li li a::before {
  content: counter(toc2) "\00A0\00A0";
}
.headings #toc li li li a {
  counter-reset: toc4;
  counter-increment: toc3;
}
.headings #toc li li li a::before {
  content: counter(toc2) "." counter(toc3) "\00A0\00A0";
}
.headings #toc li li li li a {
  counter-reset: toc5;
  counter-increment: toc4;
}
.headings #toc li li li li a::before {
  content: counter(toc2) "." counter(toc3) "." counter(toc4) "\00A0\00A0";
}
.headings #toc li li li li li a {
  counter-reset: toc6;
  counter-increment: toc5;
}
.headings #toc li li li li li a::before {
  content: counter(toc2) "." counter(toc3) "." counter(toc4) "." counter(toc5) "\00A0\00A0";
}
.headings #toc li li li li li li a {
  counter-increment: toc6;
}
.headings #toc li li li li li li a::before {
  content: counter(toc2) "." counter(toc3) "." counter(toc4) "." counter(toc5) "." counter(toc6) "\00A0\00A0";
}
@media print {
  body {
    width: 700px;
  }
  @prince-pdf {
    prince-pdf-page-mode: show-bookmarks;
  }
  /* Table of Contents */
  #toc {
    width: 650px;
    list-style-type: none;
  }
  #toc ul {
    list-style-type: none;
    padding-left: 20px;
    margin-left: 0;
  }
  #toc li {
    padding-left: 0;
    margin-left: 0;
    padding-bottom: 0.2em;
  }
  #toc a {
    text-decoration: none;
  }
  #toc a::after {
    content: leader(".") target-counter(attr(href), page);
  }
  #toc a[href="#preface"]::after {
    content: leader(".") target-counter(attr(href), page, lower-roman);
  }
  #toc a {
    color: #000;
  }
  #toc > li {
    margin: 0.2em 0;
    line-height: 1.2em;
    font-weight: bold;
    padding-bottom: 0.4em;
    font-size: 110%;
  }
  #toc > li > ul > li {
    font-weight: normal;
    font-size: 100%;
  }
  #toc li li li li li li {
    display: none;
    /* None sane of mind would EVER want more than five TOC levels. */
  }
  #toc > li {
    counter-increment: toc1;
    counter-reset: toc2;
  }
  #toc > li > a::before {
    content: counter(toc1) " ";
  }
  #toc > li > a[href="#preface"]::before {
    counter-reset: toc1;
    content: "";
  }
  #toc > li > ul > li {
    counter-increment: toc2;
    counter-reset: toc3;
  }
  #toc > li > ul > li > a::before {
    content: counter(toc1) "." counter(toc2) " ";
  }
  #toc > li > ul > li > ul > li {
    counter-increment: toc3;
    counter-reset: toc4;
  }
  #toc > li > ul > li > ul > li > a::before {
    content: counter(toc1) "." counter(toc2) "." counter(toc3) " ";
  }
  #toc > li > ul > li > ul > li > ul > li {
    counter-increment: toc4;
    counter-reset: toc5;
  }
  #toc > li > ul > li > ul > li > ul > li > a::before {
    content: counter(toc1) "." counter(toc2) "." counter(toc3) "." counter(toc4) " ";
  }
  #toc > li > ul > li > ul > li > ul > li > ul > li {
    counter-increment: toc5;
    counter-reset: toc6;
  }
  #toc > li > ul > li > ul > li > ul > li > ul > li > a::before {
    content: counter(toc1) "." counter(toc2) "." counter(toc3) "." counter(toc4) "." counter(toc5) " ";
  }
  a[href="#document-top"] {
    display: none;
  }
  h1 {
    margin-bottom: 50px;
    string-set: title content();
    border-bottom: 0;
  }
  h2 {
    margin-bottom: 30px;
    page-break-before: always;
    border-bottom: 0;
  }
  h2,
  h3,
  h4,
  h5,
  h6 {
    page-break-after: avoid;
    prince-bookmark-state: closed;
  }
  #footer {
    display: none;
  }
  @page :first {
    @top-center {
      content: "";
    }
  }
  @page {
    size: A4;
    margin: 50pt 30pt 50pt 30pt;
    padding-top: 20pt;
    @top-center {
      font-family: 'Arial';
      font-size: 0.8em;
      content: string(title);
    }
  }
  @page :left {
    @bottom-left {
      content: counter(page);
      font-family: "Arial", "Sans Serif";
      font-size: 0.8em;
    }
  }
  @page :right {
    @bottom-right {
      content: counter(page);
      font-family: "Arial", "Sans Serif";
      font-size: 0.8em;
    }
  }
}
</style>
  
  <style>
.reference-title {
  font-size: 120%;  
  font-weight: 600;
}
.min-terminal {
    -moz-background-clip: padding;
    -webkit-background-clip: padding-box;
    background-clip: padding-box;
    -webkit-border-radius: 3px;
    -moz-border-radius: 3px;
    border-radius: 3px;
    margin: 10px auto;
    padding: 2px 4px 0 4px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    text-shadow: 0 1px 0 rgba(255, 255, 255, 0.8);
    color: #eee;
    background-color: #222;
    border: 1px solid #ccc;
    white-space: pre;
    padding: 0 3px;
    border: 2px solid #999;
    border-top: 10px solid #999;
}
.min-terminal p {
  margin: 0 auto;  
}
.min-terminal p, .min-terminal p:first-child {
    margin-top: 0;
    margin-bottom: 0;
    text-shadow: none;
    font-weight: normal;
    font-family: "Source Code Pro", "Monaco", "DejaVu Sans Mono", "Courier New", monospace;
    font-size: 85%;
    color: #eee;
}
</style>

  
</head>
<body class="headings">
  <div id="container">
    <a id="document-top"></a>
    <div id="header"><h1>min Language Developer Guide</h1></div>
    <div id="toc"><ul>
 <li>
 <ul>
  <li><a href="#About-min">About min</a>
  <ul>
   <li><a href="#Why?">Why?</a></li>
   <li><a href="#How?">How?</a></li>
   <li><a href="#Who?">Who?</a></li>
   <li><a href="#When?">When?</a></li>
  </ul>
  </li>
  <li><a href="#Getting-Started">Getting Started</a>
  <ul>
   <li><a href="#Building-from-Source">Building from Source</a>
   <ul>
    <li><a href="#Additional-build-options">Additional build options</a>
    <ul>
     <li><a href="#-d:ssl">-d:ssl</a></li>
     <li><a href="#-d:lite">-d:lite</a>
</li>
    </ul>
    </li>
   </ul>
   </li>
   <li><a href="#Running-then-min-Shell">Running then min Shell</a></li>
   <li><a href="#Executing-a-min-Program">Executing a min Program</a></li>
   <li><a href="#Syntax-Highlighting">Syntax Highlighting</a></li>
  </ul>
  </li>
  <li><a href="#Learning-the-min-Language">Learning the min Language</a>
  <ul>
   <li><a href="#Data-Types">Data Types</a></li>
   <li><a href="#Quotations">Quotations</a>
   <ul>
    <li><a href="#Quoting,-dequoting,-and-applying">Quoting, dequoting, and applying</a></li>
   </ul>
   </li>
   <li><a href="#Operators">Operators</a></li>
   <li><a href="#Definitions">Definitions</a>
   <ul>
    <li><a href="#Lexical-scoping-and-binding">Lexical scoping and binding</a></li>
    <li><a href="#quote-define-and-quote-bind">quote-define and quote-bind</a></li>
    <li><a href="#Sealing-symbols">Sealing symbols</a></li>
   </ul>
   </li>
   <li><a href="#Control-Flow">Control Flow</a>
   <ul>
    <li><a href="#Conditionals">Conditionals</a></li>
    <li><a href="#Loops">Loops</a></li>
    <li><a href="#Error-handling">Error handling</a>
</li>
   </ul>
   </li>
  </ul>
  </li>
  <li><a href="#Using-the-min-Shell">Using the min Shell</a>
  <ul>
   <li><a href="#Autocompletion-and-shortcuts">Autocompletion and shortcuts</a></li>
   <li><a href="#Shell-configuration-files">Shell configuration files</a>
   <ul>
    <li><a href="#.minrc">.minrc</a></li>
    <li><a href="#.min_history">.min_history</a></li>
    <li><a href="#.min_symbols">.min_symbols</a>
</li>
   </ul>
   </li>
  </ul>
  </li>
  <li><a href="#Extending-min">Extending min</a>
  <ul>
   <li><a href="#Implementing-new-min-modules-using-min-itself">Implementing new min modules using min itself</a></li>
   <li><a href="#Embedding-min-in-your-Nim-program">Embedding min in your Nim program</a></li>
   <li><a href="#Implementing-min-modules-as-dynamic-libraries">Implementing min modules as dynamic libraries</a></li>
  </ul>
  </li>
  <li><a href="#Reference">Reference</a>
  <ul>
   <li><a href="#Notation">Notation</a>
   <ul>
    <li><a href="#Types-and-Values">Types and Values</a></li>
    <li><a href="#Suffixes">Suffixes</a></li>
   </ul>
   </li>
   <li><a href="#<code>lang</code>-Module"><code>lang</code> Module</a></li>
   <li><a href="#<code>stack</code>-Module"><code>stack</code> Module</a></li>
   <li><a href="#<code>seq</code>-Module"><code>seq</code> Module</a></li>
   <li><a href="#<code>io</code>-Module"><code>io</code> Module</a></li>
   <li><a href="#<code>fs</code>-Module"><code>fs</code> Module</a></li>
   <li><a href="#<code>logic</code>-Module"><code>logic</code> Module</a></li>
   <li><a href="#<code>str</code>-Module"><code>str</code> Module</a></li>
   <li><a href="#<code>sys</code>-Module"><code>sys</code> Module</a></li>
   <li><a href="#<code>num</code>-Module"><code>num</code> Module</a></li>
   <li><a href="#<code>time</code>-Module"><code>time</code> Module</a></li>
   <li><a href="#<code>crypto</code>-Module"><code>crypto</code> Module</a></li>
   <li><a href="#<code>math</code>-Module"><code>math</code> Module</a></li>
   <li><a href="#<code>net</code>-Module"><code>net</code> Module</a></li>
   <li><a href="#<code>http</code>-Module"><code>http</code> Module</a></li>
  </ul>
  </li>
 </ul>
 </li>
</ul>
</div>
    <div id="main">




<a name="About-min"></a>
<h2>About min<a href="#document-top" title="Go to top"></a></h2>

<p><strong>min</strong> is an concatenative, fully-homoiconic, functional, interpreted programming language.</p>

<p>This basically means that:</p>

<ul>
<li>It is based on a somewhat obscure and slightly unintuitive programming paradigm, think of <a href="http://www.forth.org/">Forth</a>, <a href="http://factorcode.org/">Factor</a> and <a href="http://www.kevinalbrecht.com/code/joy-mirror/">Joy</a> but with parethesis for an extra <a href="https://common-lisp.net/">Lisp</a>y flavor.</li>
<li>Programs written in min are actually written using <em>quotations</em>, i.e. lists.</li>
<li>It comes with map, filter, find, map-reduce and loads of other functional goodies. See the <a href="#&lt;code>seq&lt;/code>-Module">seq Module</a> for more.</li>
<li>It is probably slower than the average production-ready programming language.</li>
</ul>


<a name="Why?"></a>
<h3>Why?<a href="#document-top" title="Go to top"></a></h3>

<p>Because creating a programming language is something that every programmer needs to do, at some point in life. And also because there are way too few <a href="http://concatenative.org/wiki/view/Front%20Page">concatenative</a> programming language out there &ndash; so people are likely to be <em>less</em> pissed off than if I made a yet another Lisp instead.</p>

<p>I always wanted to build a minimalist language, but that could also be used for real work and provided a standard library for common tasks and functionalities like regular expression support, cryptography, execution of external programs, shell-like operators and keywords to work with files, and more.</p>

<p>Also, I wanted it to be fully self-contained, cross platform, and tiny. About 1MB (depending on the platform) is not really tiny, but I feel it&rsquo;s a good compromise compared to the alternatives out there, considering that you only need <em>one file</em> to run any min program.</p>

<p>I am currently building a static site generator called <a href="https://github.com/h3rald/hastysite">HastySite</a>, that also powers <a href="https://min-lang.org">https://min-lang.org</a>. HastySite internally uses min as the language to write the <a href="https://github.com/h3rald/min/blob/master/site/rules.min">rules</a> to process the source files of the site, and also all its <a href="https://github.com/h3rald/min/tree/master/site/scripts">scripts</a>.</p>

<p>Finally, I think more and more people should get to know concatenative programming languages, because <a href="http://evincarofautumn.blogspot.it/2012/02/why-concatenative-programming-matters.html">concatenative programming matters</a>.</p>

<a name="How?"></a>
<h3>How?<a href="#document-top" title="Go to top"></a></h3>

<p>min is developed entirely in <a href="https://nim-lang.org">Nim</a> &ndash; the name is (almost) entirely a coincidence. I wanted to call it <em>minim</em> but then shortened it for more&hellip; minimalism.</p>

<p>min&rsquo;s parser started off as a fork of Nim&rsquo;s JSON parser &ndash; adapted to process a concatenative programming language with less primitive types than JSON. It is interpreted in the traditional sense: no bytecode, no JIT, just plain read, parse and run.</p>

<a name="Who?"></a>
<h3>Who?<a href="#document-top" title="Go to top"></a></h3>

<p>min was created and implemented by <a href="https://h3rald.com">Fabio Cevasco</a>, with contributions by <a href="https://peterme.net">Peter Munch-Ellingsen</a>.</p>

<a name="When?"></a>
<h3>When?<a href="#document-top" title="Go to top"></a></h3>

<p>min source code <a href="https://github.com/h3rald/min">repository</a> was created on November 8<sup>th</sup> 2014. This only means that I&rsquo;ve been very slowly developing something that was actually made public at the end of July 2017.</p>

<a name="Getting-Started"></a>
<h2>Getting Started<a href="#document-top" title="Go to top"></a></h2>

<p>You can download one of the following pre-built min binaries:</p>

<ul>
<li><a href="https://github.com/h3rald/min/releases/download/v0.16.0/min_v0.16.0_macosx_x64.zip">min v0.16.0 for macOS (x64)</a></li>
<li><a href="https://github.com/h3rald/min/releases/download/v0.16.0/min_v0.16.0_windows_x64.zip">min v0.16.0 for Windows (x64)</a></li>
<li><a href="https://github.com/h3rald/min/releases/download/v0.16.0/min_v0.16.0_linux_x64.zip">min v0.16.0 for Linux (x64)</a></li>
<li><a href="https://github.com/h3rald/min/releases/download/v0.16.0/min_v0.16.0_linux_x86.zip">min v0.16.0 for Linux (x86)</a></li>
<li><a href="https://github.com/h3rald/min/releases/download/v0.16.0/min_v0.16.0_linux_arm.zip">min v0.16.0 for Linux (arm)</a></li>
</ul>


<a name="Building-from-Source"></a>
<h3>Building from Source<a href="#document-top" title="Go to top"></a></h3>

<p>Alternatively, you can build min from source as follows:</p>

<ol>
<li>Download and install <a href="https://nim-lang.org">nim</a>.</li>
<li>Download and build <a href="https://github.com/h3rald/nifty">Nifty</a>, and put the nifty executable somewhere in your <span class="kwd">$PATH</span>.</li>
<li>Clone the min <a href="https://github.com/h3rald/min">repository</a>.</li>
<li>Navigate to the min repository local folder.</li>
<li>Run <strong>nifty install</strong> to download min’s dependencies.</li>
<li>Run <strong>nim c -d:release min.nim</strong>.</li>
</ol>


<a name="Additional-build-options"></a>
<h4>Additional build options<a href="#document-top" title="Go to top"></a></h4>

<a name="-d:ssl"></a>
<h5>-d:ssl<a href="#document-top" title="Go to top"></a></h5>

<p>If the <strong>-d:ssl</strong> flag is specified when compiling, min will be built with SSL support, so it will be possible to perform HTTPS requests with the <a href="#&lt;code>http&lt;/code>-Module">http Module</a>. This means that the resulting <strong>min</strong> executable will no longer be self-contained and it will require the OpenSSL dynamic library to be available on your system.</p>

<a name="-d:lite"></a>
<h5>-d:lite<a href="#document-top" title="Go to top"></a></h5>

<p>If the <strong>d:lite</strong> flag is specified, an even more minimal executable file will be generated, however the following functionalities will not be available:</p>

<ul>
<li>The <a href="#&lt;code>crypto&lt;/code>-Module">crypto Module</a></li>
<li>The <a href="#&lt;code>net&lt;/code>-Module">net Module</a></li>
<li>The <a href="#&lt;code>http&lt;/code>-Module">http Module</a></li>
<li>The <a href="#&lt;code>math&lt;/code>-Module">math Module</a></li>
<li>The <a href="#min-operator-id-zip">zip</a> and <a href="#min-operator-id-unzip">unzip</a> operators.</li>
</ul>


<a name="Running-then-min-Shell"></a>
<h3>Running then min Shell<a href="#document-top" title="Go to top"></a></h3>

<p>To start min shell, run <span class="cmd">min -i</span>. You will be presented with a prompt displaying the path to the current directory:</p>

<div class="min-terminal"><p><span class="prompt">[/Users/h3rald/test]$</span></p></div>

<p>You can type min code and press <span class="kbd">ENTER</span> to evaluate it immediately:</p>

<div class="min-terminal"><p><span class="prompt">[/Users/h3rald/test]$</span> 2 2 +
{1} -> 4
<span class="prompt">[/Users/h3rald/test]$</span></p></div>

<p>The result of each operation will be placed on top of the stack, and it will be available to subsequent operation</p>

<div class="min-terminal"><p><span class="prompt">[/Users/h3rald/test]$</span> dup *
{1} -> 16
<span class="prompt">[/Users/h3rald/test]$</span></p></div>

<p>To exit min shell, press <span class="kbd">CTRL+C</span> or type <span class="cmd">exit</span> and press <span class="kbd">ENTER</span>.</p>

<a name="Executing-a-min-Program"></a>
<h3>Executing a min Program<a href="#document-top" title="Go to top"></a></h3>

<p>To execute a min script, you can:</p>

<ul>
<li>Run <code>min -e:"... program ..."</code> to execute a program inline.</li>
<li>Run <code>min myfile.min</code> to execute a program contained in a file.</li>
</ul>


<p>min also supports running programs from standard input, so the following command can also be used (on Unix-like system) to run a program saved in <span class="file">myfile.min</span>:</p>

<div class="min-terminal"><p><span class="prompt">$</span> cat myfile.min | min</p></div>

<a name="Syntax-Highlighting"></a>
<h3>Syntax Highlighting<a href="#document-top" title="Go to top"></a></h3>

<ul>
<li>If you are using <a href="https://www.vim.org">Vim</a>, a <a href="https://github.com/h3rald/min/blob/master/min.vim">min.vim</a> syntax definition file is available in the min repo.</li>
<li>If you are using <a href="https://www.sublimetext.com/3">Sublime Text 3</a>, Rafael Carrasco created a min syntax definition file that is available <a href="https://github.com/rscarrasco/min-sublime-syntax">here</a>.</li>
</ul>


<a name="Learning-the-min-Language"></a>
<h2>Learning the min Language<a href="#document-top" title="Go to top"></a></h2>

<p><em>min</em> is a stack-based, concatenative programming language that uses postfix notation. If you already know <a href="http://www.forth.org/">Forth</a>, <a href="http://factorcode.org/">Factor</a> or <a href="http://www.kevinalbrecht.com/code/joy-mirror/">Joy</a>, or if you ever used an <a href="https://en.wikipedia.org/wiki/Reverse_Polish_notation">RPN</a> calculator, then min will look somewhat familiar to you.</p>

<p>If not, well, here&rsquo;s how a short min program looks like:</p>

<pre><code>; This is a comment
(1 2 3 4 5) (dup *) map
</code></pre>

<p>This program returns a list containing the square values of the first five integer numbers:</p>

<pre><code>(1 4 9 16 25)
</code></pre>

<p>Let&rsquo;s see how it works:</p>

<ol>
<li>First a list containing the first five integer is pushed on the stack.</li>
<li>Then, another list containing two symbols (<code>dup</code> and <code>*</code>) is pushed on the stack. This constitutes a quoted program which, when executed duplicates (<code>dup</code>) the first element on the stack and then multiplies (<code>*</code>) the two elements together.</li>
<li>Finally, the symbol <code>map</code> is pushed on the stack. Map takes a list of elements and a quoted program and applies the program to each element.</li>
</ol>


<p>Note that:</p>

<ul>
<li>There are no variable assignments.</li>
<li>elements are pushed on the stack one by one.</li>
<li>Parentheses are grouped together one or more elements, so that they are treated as a single element and they are not evaluated immediately.</li>
<li>Symbols can be used to perform operations on the whole stack.</li>
</ul>


<p>Unlike more traditional programming languages, in a concatenative programming language there is no inherent need of variables or named parameters, as symbols acts as stack operators that consume elements that are placed in order on top of a stack.</p>

<a name="Data-Types"></a>
<h3>Data Types<a href="#document-top" title="Go to top"></a></h3>

<p>The type system of min is very simple &ndash; only the following data types are available:</p>

<dl>
<dt>integer</dt>
<dd>An integer number like 1, 27 or -15.</dd>
<dt>float</dt>
<dd>A floating-point number like 3.14 or -56.9876.</dd>
<dt>string</dt>
<dd>A series of characters wrapped in double quotes: &ldquo;Hello, World!&rdquo;.</dd>
<dt>quotation</dt>
<dd>A list of elements, which may also contain symbols. Quotations can be be used to create heterogenous lists of elements of any data type, and also to create a block of code that will be evaluated later on (quoted program).</dd>
</dl>

<p>Additionally, quotations structured in a particular way can be used as dictionaries, and a few operators are available to manage them more easily (<code>dhas?</code>, <code>dget</code>, <code>ddel</code> and <code>dset</code>). A dictionary is a quotation containing zero or more quotations of two elements, the first of which is a string that has not already be used in any of the other inner quotations.</p>

<div class="sidebar"><p>Example</p>

<p>The following is a simple dictionary containing three keys: <em>name</em>, <em>paradigm</em>, and <em>first-release-year</em>:</p>

<pre><code>(
    ("name" "min")
    ("paradigm" "concatenative")
    ("first-release-year" 2017)
)
</code></pre></div>

<p>The <a href="#&lt;code>logic&lt;/code>-Module">logic Module</a> provides predicate operators to check if an element belong to a particular data type or pseudo-type (<code>boolean?</code>, <code>number?</code>, <code>integer?</code>, <code>float?</code>, <code>string?</code>, <code>quotation?</code>, <code>dictionary?</code>).</p>

<p>Additionally, the <a href="#&lt;code>lang&lt;/code>-Module">lang Module</a> provides operators to convert values from a data type to another (e.g. <a href="#min-operator-id-int">int</a>, <a href="#min-operator-id-string">string</a>, and so on).</p>

<div class="note"><p>Note</p>

<p>Most of the operators defined in the <a href="#&lt;code>num&lt;/code>-Module">num Module</a> are able to operate on both integers and floats.</p></div>

<a name="Quotations"></a>
<h3>Quotations<a href="#document-top" title="Go to top"></a></h3>

<p>Quotations are the most important thing to understand in min. Besides being the data type used for lists, they are also used to delimit blocks of min code that is not going to be immediately executed.</p>

<p>Consider for example the following min code which returns all the files present in the current folder sorted by name:</p>

<pre><code> . ls (ftype "file" ==) filter '&gt; sort
</code></pre>

<p>The symbol <a href="#min-operator-id-filter">filter</a> takes two quotations as arguments &ndash; the first quotation on the stack is applied to all the elements of the second quotation on the stack, to determine which elements of the second quotation will be part of the resulting quotation. This is an example of how quotations can be used both as lists and programs.</p>

<p>Let&rsquo;s examine this program step-by-step:</p>

<ol>
<li>The <code>.</code> symbol is pushed on the stack, and it is immediately evaluated to the full path to the current directory.</li>
<li>The <code>ls</code> symbol is pushed on the stack, it consumes the string already on the stack and returns a quotation containing all files and directories within the current directory.</li>
<li>The quotation <code>(ftype 'file ==)</code> is pushed on the stack. It is treated exactly like a list of data and it is not evaluated.</li>
<li>The <code>filter</code> symbol is pushed on the stack. This symbol takes two quotations as input, and applies the result of the first quotation on the stack (<code>(ftype "file" ==)</code>) to all elements of the second quotation of the stack (the list of files and directories), returning a new quotation containing only those elements of the second quotation on the stack that satisfy the result of the first quotation. In this case, it returns a new quotation containing only files.</li>
<li><code>'&gt;</code> is pushed on the stack. The <code>'</code> sigil can be used instead of the <code>quote</code> symbol to quote a single symbol, <code>&lt;</code> in this case. In other words, it is instantly evaluated to the quotation <code>(&gt;)</code>.</li>
<li>The symbol <code>sort</code> is pushed on the stack. This symbol, like <code>filter</code>, takes two quotations as input, and applies the first quotation to each element of the second quotation, effectively sorting each element of the second quotation using the predicate expressed by the first quotation. In this case, all files are sorted by name in ascending order.</li>
</ol>


<div class="tip"><p>Tip</p>

<p>The <a href="#&lt;code>seq&lt;/code>-Module">seq Module</a> provides several symbols to work with quotations in a functional way.</p></div>

<a name="Quoting,-dequoting,-and-applying"></a>
<h4>Quoting, dequoting, and applying<a href="#document-top" title="Go to top"></a></h4>

<p>When a quotation is created, it is treated as data, no matter what it contains: it is placed on the stack, like an integer or a string would. However, unlike other data types, a quotation can be evaluated in certain situations and when it happens its contents are pushed on the stack.</p>

<p>Consider the following program:</p>

<pre><code> (1 2 3 4 5 6 7) (odd?) filter
</code></pre>

<p>This programs returns a new quotation containing all odd numbers contained in quotation <code>(1 2 3 4 5 6 7)</code>.</p>

<p>In this case, the second quotation is used to <em>quote</em> the symbol <code>odd?</code> so that instead of being executed immediately, it will be executed by the symbol <code>filter</code> on each element of the first quotation. In this way, we may say that <code>(odd?)</code> is <em>dequoted</em> by the symbol <code>filter</code>.</p>

<p>The synbol <a href="#min-operator-id-dequote">dequote</a> or its alias <code>-&gt;</code> can be used to dequote a quotation by pushing all its element on the main stack, while the symbol <a href="#min-operator-id-apply">apply</a> can be used to dequote a quotation by pushing its element on a separate stack.</p>

<a name="Operators"></a>
<h3>Operators<a href="#document-top" title="Go to top"></a></h3>

<p>Every min program needs <em>operators</em> to:</p>

<ul>
<li>Manipulate elements on the stack</li>
<li>Perform operations on data</li>
<li>Provide side effects (read/print to standard input/output/files, etc.)</li>
</ul>


<p>There are two types of operators: <em>symbols</em> and <em>sigils</em>.</p>

<p><em>Symbols</em> are the most common type of operator. A min symbol is a single word that is either provided by one of the predefined min modules like <code>dup</code> or <code>.</code> or defined by the user. User-defined symbols must:</p>

<ul>
<li>Start with a letter or an underscore (_).</li>
<li>Contain zero or more letters, numbers and/or any of the following characters: <code>/ ! ? + * . _ -</code></li>
</ul>


<p>It is possible to define symbols using the <a href="#min-operator-id-define">define</a> symbol. The following min program defines a new symbol called square that duplicates the first element on the stack and multiplies the two elements:</p>

<pre><code> (dup *) "square" define
</code></pre>

<p>Besides symbols, min provides a set of predefined <em>sigils</em> for commonly-used symbols. For example, the previous definition could be rewritten as follows using sigils:</p>

<pre><code> (dup *) :square
</code></pre>

<p>A sigil like <code>:</code> can be prepended to a single-word string instead of using the corresponding symbol. Essentially, sigils are nothing more than syntactic sugar. Currently min provides the following sigils:</p>

<dl>
<dt>+</dt>
<dd>Alias for <a href="#min-operator-id-module">module</a>.</dd>
<dt>~</dt>
<dd>Alias for <a href="#min-operator-id-delete">delete</a>.</dd>
<dt>'</dt>
<dd>Alias for <a href="#min-operator-id-quote">quote</a>.</dd>
<dt>:</dt>
<dd>Alias for <a href="#min-operator-id-define">define</a>.</dd>
<dt>^</dt>
<dd>Alias for <a href="#min-operator-id-call">call</a>.</dd>
<dt>@</dt>
<dd>Alias for <a href="#min-operator-id-bind">bind</a>.</dd>
<dt>></dt>
<dd>Alias for <a href="#min-operator-id-save-symbol">save-symbol</a>.</dd>
<dt>&lt;</dt>
<dd>Alias for <a href="#min-operator-id-load-symbol">load-symbol</a>.</dd>
<dt>&#61;</dt>
<dd>Alias for <a href="#min-operator-id-quote-bind">quote-bind</a>.</dd>
<dt>#</dt>
<dd>Alias for <a href="#min-operator-id-quote-define">quote-define</a>.</dd>
<dt>/</dt>
<dd>Alias for <a href="#min-operator-id-dget">dget</a>.</dd>
<dt>%</dt>
<dd>Alias for <a href="#min-operator-id-dset">dset</a>.</dd>
<dt>?</dt>
<dd>Alias for <a href="#min-operator-id-dhas?">dhas?</a>.</dd>
<dt>!</dt>
<dd>Alias for <a href="#min-operator-id-system">system</a>.</dd>
<dt>&amp;</dt>
<dd>Alias for <a href="#min-operator-id-run">run</a>.</dd>
<dt>$</dt>
<dd>Alias for <a href="#min-operator-id-get-env">get-env</a>.</dd>
</dl>

<a name="Definitions"></a>
<h3>Definitions<a href="#document-top" title="Go to top"></a></h3>

<p>Being a concatenative language, min does not really need named parameters or variables: simbols just pop elements off the main stack in order, and that&rsquo;s normally enough. There is however one small problem with the traditional concatenative paradigm; consider the following program for example:</p>

<pre><code> dup dup
 "\.zip$" match 
 swap fsize 1000000 &gt; and 
 swap mtime now 3600 - &gt;
</code></pre>

<p>This program takes a single string corresponding to a file path and returns true if it&rsquo;s a .zip file bigger than 1MB that was modified in the last how. Sure, it is remarkable that no variables are needed for such a program, but it is not very readable: because no variables are used, it is often necessary to make copies of elements and push them to the end of the stack &ndash; that&rsquo;s what the <a href="#min-operator-id-dup">dup</a> and <a href="#min-operator-id-swap">swap</a> are used for.</p>

<p>The good news is that you can use the <a href="#min-operator-id-define">define</a> operator and the <code>:</code> sigil to define new symbols, and symbols can also be set to literals of course.</p>

<p>Consider the following program:</p>

<pre><code> :filepath
 filepath "\.zip$" match
 filepath fsize 1000000 &gt;
 filepath mtime now 3600 - &gt;
 and and
</code></pre>

<p>In this case, the <code>filepath</code> symbol is defined and then used on the following three lines, each of which defines a condition to be evaluated. The last line contains just two <a href="#min-operator-id-and">and</a> symbols necessary to compare the three conditions.</p>

<a name="Lexical-scoping-and-binding"></a>
<h4>Lexical scoping and binding<a href="#document-top" title="Go to top"></a></h4>

<p>min, like many other programming languages, uses <a href="https://en.wikipedia.org/wiki/Scope_(computer_science">lexical scoping</a>#Lexical_scope_vs._dynamic_scope) to resolve symbols.</p>

<p>Consider the following program:</p>

<pre><code> 4 :a
 ( 
   a 3 + :a
   (
      a 1 + :a
      (a dup * :a) dequote
   ) dequote
 ) dequote
</code></pre>

<p>&hellip;What is the value of the symbol <code>a</code> after executing it?</p>

<p>Simple: <code>4</code>. Every quotation defines its own scope, and in each scope a new variable called <code>a</code> is defined. In the innermost scope containing the quotation <code>(a dup * :a)</code> the value of <code>a</code> is set to <code>64</code>, but this value is not propagated to the outer scopes. Note also that the value of <code>a</code> in the innermost scope is first retrieved from the outer scope (8).</p>

<p>If we want to change the value of the original <code>a</code> symbol defined in the outermost scope, we have to use the <a href="#min-operator-id-bind">bind</a> or its shorthand sigil <code>@</code>, so that the programs becomes the following:</p>

<pre><code> 4 :a ;First definition of the symbol a
 (
   a 3 + @a ;The value of a is updated to 7.
   (
     a 1 + @a ;The value of a is updated to 8
     (a dup * @a) dequote ;The value of a is now 64
   ) dequote
 ) dequote
</code></pre>

<a name="quote-define-and-quote-bind"></a>
<h4>quote-define and quote-bind<a href="#document-top" title="Go to top"></a></h4>

<p>So far, we saw how to use the <a href="#min-operator-id-define">define</a> and <a href="#min-operator-id-bind">bind</a> operator (or better, their shorthand sigils <code>:</code> and <code>@</code>) to define new symbols or bind values to existing ones.</p>

<p>Consider the following example:</p>

<pre><code> (1 2 3 4 5) :my-list
 my-list (dup *) map
</code></pre>

<p>If run the program above in min shell by pasting the first and then the second line in it, you&rsquo;ll get an error similar to the following:</p>

<pre><code> (!) &lt;repl&gt;(1,19) [map]: Incorrect values found on the stack:
 - expected: {top} quot quot {bottom}
 - got:      {top} quot int {bottom}
     &lt;repl&gt;(1,19) in symbol: map
</code></pre>

<p>This error says that when the <a href="#min-operator-id-map">map</a> operator was evaluated, there were incorrect values on the stack. Two quotations were expected, but instead a quotation and an integer were found. How did this happen?</p>

<p>Basically, when <code>my-list</code> was pushed on the stack, it pushed all its item on top of the stack. If you run <a href="#min-operator-id-get-stack">get-stack</a>, it will return the following list:</p>

<pre><code> (1 2 3 4 5 (dup *))
</code></pre>

<p>This happens because by default min assumes that when you define a quotation you want to define a new operator rather than a list. The following program works as expected, and it returns a list containing the squares of the first five integer numbers:</p>

<pre><code> (dup *) :square
 (1 2 3 4 5) (square) map
</code></pre>

<p>To avoid this behavior &ndash; i.e. whenever you want to define a list of items rather than an operator that will be immediately evaluated when pushed on the stack, you have to use the <a href="#min-operator-id-quote-define">quote-define</a> and the <a href="#min-operator-id-quote-bind">quote-bind</a> or their respective sigils <code>#</code> and <code>=</code>:</p>

<pre><code> (1 2 3 4 5) #my-list
 my-list (dup *) map ;Returns (1 4 9 16 25) 
</code></pre>

<a name="Sealing-symbols"></a>
<h4>Sealing symbols<a href="#document-top" title="Go to top"></a></h4>

<p>Finally, symbols can be sealed to pervent accidental updates or deletions. By default, all symbols defined in the core min modules are sealed, so the following code if run in min shell will result in an error:</p>

<pre><code> 5 :quote
</code></pre>

<p>&hellip;because the symbol quote is already defned in the root scope. However, note that the folliwng code will <em>not</em> return an error:</p>

<pre><code> (5 :quote quote dup *) -&gt; ;returns 25
</code></pre>

<p>&hellip;because the <code>quote</code> symbol is only defined in the root scope and can therefore be redefined in child scopes.</p>

<p>If you want, you can <a href="#min-operator-id-seal">seal</a> your own symbols so that they may not be redefined using the <a href="#min-operator-id-bind">bind</a> operator or deleted using the <a href="#min-operator-id-delete">delete</a>.</p>

<div class="info"><p>Note</p>

<p>The <a href="#min-operator-id-unseal">unseal</a> operator can be used to effectively un-seal a previously-sealed symbol. Use with caution!</p></div>

<a name="Control-Flow"></a>
<h3>Control Flow<a href="#document-top" title="Go to top"></a></h3>

<p>The <a href="#&lt;code>lang&lt;/code>-Module">lang Module</a> provide some symbols that can be used for the most common control flow statements. Unlike most programming language, min does not differentiate between functions and statements &ndash; control flow statements are just ordinary symbols that manipulate the main stack.</p>

<a name="Conditionals"></a>
<h4>Conditionals<a href="#document-top" title="Go to top"></a></h4>

<p>The following symbols provide ways to implement common conditional statements:</p>

<ul>
<li><a href="#min-operator-id-case">case</a></li>
<li><a href="#min-operator-id-if">if</a></li>
<li><a href="#min-operator-id-unless">unless</a></li>
<li><a href="#min-operator-id-when">when</a></li>
</ul>


<p>For example, consider the following program:</p>

<pre><code> (
   (  
     "" :type
     (("\.(md|markdown)$") ("markdown" @type))
     (("\.txt$") ("text" @type))
     (("\.min$") ("min" @type))
     (("\.html?$") ("HTML" @type))
     ((true) ("unknown" @type))
   ) case 
   "This is a $1 file." (type) % echo
 ) :display-file-info
</code></pre>

<p>This program defines a symbol <code>display-file-info</code> that takes a file name and outputs a message displaying its type, if known.</p>

<a name="Loops"></a>
<h4>Loops<a href="#document-top" title="Go to top"></a></h4>

<p>The following symbols provide ways to implement common loops:</p>

<ul>
<li><a href="#min-operator-id-foreach">foreach</a></li>
<li><a href="#min-operator-id-times">times</a></li>
<li><a href="#min-operator-id-while">while</a></li>
</ul>


<p>For example, consider the following program:</p>

<pre><code> (
   :n
   1 :i
   1 :f
   (i n &lt;=)
   (
     f i * @f 
     i succ @i
   ) while
   f
 ) :factorial
</code></pre>

<p>This program defines a symbol <code>factorial</code> that calculates the factorial of an integer iteratively using the symbol <a href="#min-operator-id-while">while</a>.</p>

<a name="Error-handling"></a>
<h4>Error handling<a href="#document-top" title="Go to top"></a></h4>

<p>The following symbols provide ways to manage errors in min:</p>

<ul>
<li><a href="#min-operator-id-format-error">format-error</a></li>
<li><a href="#min-operator-id-raise">raise</a></li>
<li><a href="#min-operator-id-try">try</a></li>
</ul>


<p>For example, consider the following program:</p>

<pre><code> . ls
 (
   (
     (fsize) 
     (pop 0)
   ) try
 ) map 
 1 (+) reduce
</code></pre>

<p>This program calculates the size in bytes of all files included in the current directory. Because the <a href="#min-operator-id-fsize">fsize</a> symbol throws an error if the argument provided is not a file (for example if it is a directory), the <code>try</code> symbol is used to remove the error from the stack and push <code>0</code> on the stack instead.</p>

<a name="Using-the-min-Shell"></a>
<h2>Using the min Shell<a href="#document-top" title="Go to top"></a></h2>

<p>The min executable also provide an interactive REPL (Read-Eval-Print Loop) when launched with the <code>-i</code> flag:</p>

<div class="min-terminal"><p><span class="prompt">$</span> min -i
<span class="prompt">&#91;/Users/h3rald/Development/min&#93;$</span></p></div>

<p>Although not as advanced, the min REPL is not dissimilar from an OS system shell like Bash, and as a matter of fact it provides many functionalities that are found in other shells or command prompts, such as:</p>

<ul>
<li>Auto-completion</li>
<li>Persistent line history</li>
<li>A customizable prompt</li>
<li>Access to environment variables</li>
</ul>


<p>&hellip;plus in can obviously leverage the entire min language for complex scripting.</p>

<a name="Autocompletion-and-shortcuts"></a>
<h3>Autocompletion and shortcuts<a href="#document-top" title="Go to top"></a></h3>

<p>The min shell features smart tab autocompletion and keyboard shortcut implemented using the <a href="https://github.com/h3rald/nimline">nimline</a> library.</p>

<p>The following behaviors are implemented when pressing the <code>TAB</code> key within:</p>

<table>
<thead>
<tr>
<th>Context                                                        </th>
<th> Result</th>
</tr>
</thead>
<tbody>
<tr>
<td>&hellip;a string                                                    </td>
<td> Auto-completes the current word using file and directory names.</td>
</tr>
<tr>
<td>&hellip;a word starting with <code>!</code> or <code>&amp;</code>                             </td>
<td> Auto-completes the current word using executable file names.</td>
</tr>
<tr>
<td>&hellip;a word starting with <code>$</code>                                    </td>
<td> Auto-completes the current word using environment variable names.</td>
</tr>
<tr>
<td>&hellip;a word starting with <code>'</code>, <code>~</code>, <code>@</code>, <code>#</code>, <code>&gt;</code>, <code>&lt;</code>, <code>*</code>, <code>(</code> </td>
<td> Auto-completes the current word using symbol names.</td>
</tr>
</tbody>
</table>


<p>Additionally, at least some of the following systems should also be available, depending on your operating system:</p>

<table>
<thead>
<tr>
<th>Key            </th>
<th> Effect</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>INSERT</code>       </td>
<td> Switches between insert and replace mode.</td>
</tr>
<tr>
<td><code>UP</code>           </td>
<td> Displays the previous history entry.</td>
</tr>
<tr>
<td><code>DOWN</code>         </td>
<td> Displays the next history entry.</td>
</tr>
<tr>
<td><code>CTRL+c</code>       </td>
<td> Terminates min shell.</td>
</tr>
<tr>
<td><code>CTRL+x</code>       </td>
<td> Clears the current line.</td>
</tr>
<tr>
<td><code>CTRL+b</code>       </td>
<td> Goes to the beginning of the line.</td>
</tr>
<tr>
<td><code>CTRL+e</code>       </td>
<td> Goes to the end of the line.</td>
</tr>
</tbody>
</table>


<a name="Shell-configuration-files"></a>
<h3>Shell configuration files<a href="#document-top" title="Go to top"></a></h3>

<p>When the min interpreter is first launched, the following files are created automatically in the $HOME directory (%HOMEPROFILE% on Windows).</p>

<a name=".minrc"></a>
<h4>.minrc<a href="#document-top" title="Go to top"></a></h4>

<p>This file is interpreted first every time min is run. By default it is empty, but it can be used to define code to execute at startup.</p>

<a name=".min_history"></a>
<h4>.min_history<a href="#document-top" title="Go to top"></a></h4>

<p>This file is used to persist all commands entered in the min shell, and it is loaded in memory at startup to provide line history support.</p>

<a name=".min_symbols"></a>
<h4>.min_symbols<a href="#document-top" title="Go to top"></a></h4>

<p>This files contains all symbol definitions in JSON format that were previously-saved using the <a href="#min-operator-id-save-symbol">save-symbol</a> symbol. Symbols can be loaded using the <a href="#min-operator-id-load-symbol">load-symbol</a> symbol.</p>

<a name="Extending-min"></a>
<h2>Extending min<a href="#document-top" title="Go to top"></a></h2>

<p>min provides a fairly complete standard library with many useful modules. However, you may feel the need to extend min in order to perform more specialized tasks.</p>

<p>In such situations, you basically have three options:</p>

<ul>
<li>Implement new min modules in min</li>
<li>Embed min in your <a href="https://nim-lang.org">Nim</a> program</li>
<li>Implemet min modules as dynamic libraries in Nim</li>
</ul>


<a name="Implementing-new-min-modules-using-min-itself"></a>
<h3>Implementing new min modules using min itself<a href="#document-top" title="Go to top"></a></h3>

<p>When you just want to create more high-level min operator using functionalities that are already available in min, the easiest way is to create your own reusable min modules.</p>

<p>The <a href="#min-operator-id-module">module</a> (and the <strong>+</strong> sigil) allows you to create a new min module:</p>

<pre><code>(
  (dup *)             :pow2

  (dup dup * *)       :pow3

  (dup dup dup * * *) :pow4

) +quickpows
</code></pre>

<p>Save your code to a file (e.g. <em>quickpows.min</em>) and you can use it in other nim files using the <a href="#min-operator-id-load">load</a> operator and the <a href="#min-operator-id-import">import</a>:</p>

<pre><code>'quickpows load
'quickpows import

2 pow3 pow2 puts ;prints 64
</code></pre>

<a name="Embedding-min-in-your-Nim-program"></a>
<h3>Embedding min in your Nim program<a href="#document-top" title="Go to top"></a></h3>

<p>If you&rsquo;d like to use min as a scripting language within your own program, and maybe extend it by implementing additional operators, you can use min as a Nim library.</p>

<p>To do so:</p>

<ol>
<li>Install min sources using Nifty as explained in the Download section.</li>
<li>Import it in your Nim file.</li>
<li>Implement a new <code>proc</code> to define the module.</li>
</ol>


<p>The following code is taken from <a href="https://github.com/h3rald/hastysite">HastySite</a> and shows how to define a new <code>hastysite</code> module containing some symbols (<code>preprocess</code>, <code>postprocess</code>, <code>process-rules</code>, &hellip;):</p>

<pre><code>import packages/min/min

proc hastysite_module*(i: In, hs1: HastySite) =
  var hs = hs1
  let def = i.define()

  def.symbol("preprocess") do (i: In):
    hs.preprocess()

   def.symbol("postprocess") do (i: In):
    hs.postprocess()

  def.symbol("process-rules") do (i: In):
    hs.interpret(hs.files.rules)

  # ...

  def.finalize("hastysite")
</code></pre>

<p>Then you need to:</p>

<ol>
<li>Instantiate a new min interpreter using the <code>newMinInterpreter</code> proc.</li>
<li>Run the <code>proc</code> used to define the module.</li>
<li>Call the <code>interpret</code> method to interpret a min file or string:</li>
</ol>


<pre><code>proc interpret(hs: HastySite, file: string) =
  var i = newMinInterpreter(file, file.parentDir)
  i.hastysite_module(hs)
  i.interpret(newFileStream(file, fmRead))
</code></pre>

<div class="tip"><p>Tip</p>

<p>For more information on how to create new modules with Nim, have a look in the <a href="https://github.com/h3rald/min/tree/master/lib">lib folder</a> of the min repository, which contains all the min modules included in the standard library.</p></div>

<a name="Implementing-min-modules-as-dynamic-libraries"></a>
<h3>Implementing min modules as dynamic libraries<a href="#document-top" title="Go to top"></a></h3>

<div class="warning"><p>Warning</p>

<p>This technique is currently experimental, it has not been tested extensively and it may not even work on Windows.</p></div>

<p>If you just want to add a new module to min providing functinalities that cannot be built natively with min operators, you can also implement a min module in Nim and compile it to a dynamic library which can be linked dynamically when min is started.</p>

<p>In order to do this, you don&rsquo;t even need to download the whole min source code, you just need to download the <a href="https://github.com/h3rald/min/blob/master/mindyn.nim">mindyn.nim</a> file and import it in your Nim program.</p>

<p>The following code shows how to create a simple min module called <em>dyntest</em> containing only a single operator <em>dynplus</em>, which essentially returns the sum of two numbers:</p>

<pre><code>import mindyn

proc dyntest*(i: In) {.dynlib, exportc.} =

  let def = i.define()

  def.symbol("dynplus") do (i: In):
    let vals = i.expect("num", "num")
    let a = vals[0]
    let b = vals[1]
    if a.isInt:
      if b.isInt:
        i.push newVal(a.intVal + b.intVal)
      else:
        i.push newVal(a.intVal.float + b.floatVal)
    else:
      if b.isFloat:
        i.push newVal(a.floatVal + b.floatVal)
      else:
        i.push newVal(a.floatVal + b.intVal.float)

  def.finalize("dyntest")
</code></pre>

<p>Note that the <code>mindym.nim</code> file contains the signatures of all the <code>proc</code>s that are commonly used to define min modules, but not their implementation. Such <code>proc</code>s will become available at run time when the dynamic library is linked to the min executable.</p>

<p>You can compile the following library by running the following command:</p>

<div class="min-terminal"><p><span class="prompt">$</span> nim c --app:lib -d:release --noMain dyntest.nim</p></div>

<p>If you are using <a href="https://clang.llvm.org/">clang</a> to compile Nim code, you may need to run the following command instead:</p>

<div class="min-terminal"><p><span class="prompt">$</span> nim c --app:lib -d:release --noMain  -l:&#34;-undefined dynamic_lookup&#34; dyntest.nim</p></div>

<p>Now you should have a <code>libdyntest.so|dyn|dll</code> file. To make min load it and link it automatically when it starts, just run:</p>

<div class="min-terminal"><p><span class="prompt">$</span> min --install:libdyntest.dyn</p></div>

<p>This command will copy the library file to <code>$HOME/.minlibs/</code> (<code>%HOMEPATH%\.minlibs\</code> on Windows). min looks for dynamic libraries in this folder when it starts.</p>

<div class="note"><p>Notes</p>

<ul>
<li>The dynamic library file must have the same name as the module it defines (<em>dyntest</em> in this case).</li>
<li>At startup, min links all your installed dynamic libraries but does not import the modules automatically.</li>
</ul>
</div>

<p>If you wish to uninstall the library, run the following command instead:</p>

<div class="min-terminal"><p><span class="prompt">$</span> min --uninstall:libdyntest.dyn</p></div>

<a name="Reference"></a>
<h2>Reference<a href="#document-top" title="Go to top"></a></h2>

<p>min includes a small but powerful standard library organized into the following <em>modules</em>:</p>

<dl>
<dt><a href="#&lt;code>lang&lt;/code>-Module">lang Module</a></dt>
<dd>Defines the basic language constructs, such as control flow, type conversions, symbol definition and binding, exception handling,  etc.</dd>
<dt><a href="#&lt;code>stack&lt;/code>-Module">stack Module</a></dt>
<dd>Defines combinators and stack-shufflers like dip, dup, swap, cons, etc.</dd>
<dt><a href="#&lt;code>seq&lt;/code>-Module">seq Module</a></dt>
<dd>Defines operators for quotations and dictionaries, like map, filter, reduce, etc.</dd>
<dt><a href="#&lt;code>io&lt;/code>-Module">io Module</a></dt>
<dd>Provides operators for reading and writing files as well as printing to STDOUT and reading from STDIN.</dd>
<dt><a href="#&lt;code>fs&lt;/code>-Module">fs Module</a></dt>
<dd>Provides operators for accessing file information and properties.</dd>
<dt><a href="#&lt;code>logic&lt;/code>-Module">logic Module</a></dt>
<dd>Provides comparison operators for all min data types and other boolean logic operators.</dd>
<dt><a href="#&lt;code>str&lt;/code>-Module">str Module</a></dt>
<dd>Provides operators to perform operations on strings, use regular expressions, interpolation, etc..</dd>
<dt><a href="#&lt;code>sys&lt;/code>-Module">sys Module</a></dt>
<dd>Provides operators to use as basic shell commands, access environment variables, and execute external commands.</dd>
<dt><a href="#&lt;code>num&lt;/code>-Module">num Module</a></dt>
<dd>Provides operators to perform simple mathematical operations on integer and floating point numbers.</dd>
<dt><a href="#&lt;code>time&lt;/code>-Module">time Module</a></dt>
<dd>Provides a few basic operators to manage dates, times, and timestamps.</dd>
<dt><a href="#&lt;code>crypto&lt;/code>-Module">crypto Module</a></dt>
<dd>Provides operators to compute hashes (MD5, SHA1, SHA224, SHA256, SHA384, sha512), base64 encoding/decoding, and AES encryption/decryption.</dd>
<dt><a href="#&lt;code>math&lt;/code>-Module">math Module</a></dt>
<dd>Provides many mathematical operators and constants such as trigonometric functions, square root, logarithms, etc.</dd>
<dt><a href="#&lt;code>net&lt;/code>-Module">net Module</a></dt>
<dd>Provides basic supports for sockets (some features are not supported on Windows systems).</dd>
<dt><a href="#&lt;code>http&lt;/code>-Module">http Module</a></dt>
<dd>Provides operators to perform HTTP requests, download files and create basic HTTP servers.</dd>
</dl>

<a name="Notation"></a>
<h3>Notation<a href="#document-top" title="Go to top"></a></h3>

<p>The following notation is used in the signature of all min operators:</p>

<a name="Types-and-Values"></a>
<h4>Types and Values<a href="#document-top" title="Go to top"></a></h4>

<dl>
<dt>&#x2205;</dt>
<dd>No value.</dd>
<dt><span class="kwd">a</span></dt>
<dd>A value of any type.</dd>
<dt><span class="kwd">bool</span></dt>
<dd>A boolean value</dd>
<dt><span class="kwd">int</span></dt>
<dd>An integer value.</dd>
<dt><span class="kwd">float</span></dt>
<dd>A float value.</dd>
<dt><span class="kwd">num</span></dt>
<dd>A numeric (integer or float) value.</dd>
<dt><span class="kwd">string</span></dt>
<dd>A string value.</dd>
<dt><span class="kwd">&apos;sym</span></dt>
<dd>A string-like value (string or quoted symbol).</dd>
<dt><span class="kwd">quot</span></dt>
<dd>A quotation (also expressed as parenthesis enclosing other values).</dd>
<dt><span class="kwd">dict</span></dt>
<dd>A dictionary value.</dd>
<dt><span class="kwd">tinfo</span></dt>
<dd><p>A timeinfo dictionary:</p>

<pre><code>(
 ("year" 2017)
 ("month" 7)
 ("day" 8)
 ("weekday" 6)
 ("yearday" 188)
 ("hour" 15)
 ("minute" 16)
 ("second" 25)
 ("dst" true)
 ("timezone" -3600)
)
</code></pre></dd>
<dt><span class="kwd">err</span></dt>
<dd><p>An error dictionary:</p>

<pre><code>(
 ("error" "MyError")
 ("message" "An error occurred")
 ("symbol" "symbol1")
 ("filename" "dir1/file1.min")
 ("line" 3)
 ("column" 13)
)
</code></pre></dd>
<dt><span class="kwd">socket</span></dt>
<dd><p>A socket dictionary that must be created through the <a href="#min-operator-id-socket">socket</a> operator:</p>

<pre><code>(
 ("domain" "ipv4")
 ("type" "stream")
 ("protocol" "tcp")
 ;socket
)
</code></pre></dd>
<dt><span class="kwd">request</span></dt>
<dd><p>A request dictionary, representing an HTTP request to be performed through the operators exposed by the <a href="#&lt;code>http&lt;/code>-Module">http Module</a>:</p>

<pre><code>(
 ("url" "http://httpbin.org/put")
 ("method" "PUT")
 ("version" "1.1")         ;optional
 ("hostname" "h3rald.com") ;optional
 ("headers" (              ;optional
  ("Accept-Language" "it-id")
  ("Host" "httpbin.org")))
 ("body" "test body")      ;optional
)
</code></pre></dd>
<dt><span class="kwd">response</span></dt>
<dd><p>A response dictionary, representing an HTTP response returned by some of the operators exposed by the <a href="#&lt;code>http&lt;/code>-Module">http Module</a>:</p>

<pre><code>(
  ("version" "1.1") ;optional
  ("status" 200)    ;optional
  ("headers"        ;optional
   (("Content-Type" "application/json")))
  ("body"           ;optional
   "{\"test\": \"This is a test\"}")
)
</code></pre></dd>
<dt><span class="kwd">true</span></dt>
<dd>true (boolean type).</dd>
<dt><span class="kwd">false</span></dt>
<dd>false (boolean type)</dd>
</dl>

<a name="Suffixes"></a>
<h4>Suffixes<a href="#document-top" title="Go to top"></a></h4>

<p>The following suffixes can be placed at the end of a value or type to indicate ordering or quantities.</p>

<dl>
<dt><span class="kwd"><sub>1</sub></span></dt>
<dd>The first value of the specified type.</dd>
<dt><span class="kwd"><sub>2</sub></span></dt>
<dd>The second value of the specified type.</dd>
<dt><span class="kwd"><sub>3</sub></span></dt>
<dd>The third value of the specified type.</dd>
<dt><span class="kwd"><sub>4</sub></span></dt>
<dd>The fourth value of the specified type.</dd>
<dt><span class="kwd"><sub>?</sub></span></dt>
<dd>Zero or one.</dd>
<dt><span class="kwd"><sub>*</sub></span></dt>
<dd>Zero or more.</dd>
<dt><span class="kwd"><sub>+</sub></span></dt>
<dd>One or more</dd>
</dl>

<a name="<code>lang</code>-Module"></a>
<h3><code>lang</code> Module<a href="#document-top" title="Go to top"></a></h3>

<p><span class="reference-title">&apos;</span> <span class="sigil"></span></p>

<div class="operator"><p><span class="kwd"> &apos;<span class="kwd">string</span> <strong>&rArr;</strong> <span class="kwd">string</span> quote</span></p>

<p>See <a href="#min-operator-id-quote">quote</a>.</p></div>

<p><span class="reference-title">&apos;</span></p>

<div class="operator"><p><span class="kwd"> &apos; <strong>&rArr;</strong> quote</span></p>

<p>See <a href="#min-operator-id-quote">quote</a>.</p></div>

<p><span class="reference-title">:</span> <span class="sigil"></span></p>

<div class="operator"><p><span class="kwd"> :<span class="kwd">string</span> <strong>&rArr;</strong> <span class="kwd">string</span> define</span></p>

<p>See <a href="#min-operator-id-define">define</a>.</p></div>

<p><span class="reference-title">:</span></p>

<div class="operator"><p><span class="kwd"> : <strong>&rArr;</strong> define</span></p>

<p>See <a href="#min-operator-id-define">define</a>.</p></div>

<p><span class="reference-title">~</span> <span class="sigil"></span></p>

<div class="operator"><p><span class="kwd"> ~<span class="kwd">string</span> <strong>&rArr;</strong> <span class="kwd">string</span> delete</span></p>

<p>See <a href="#min-operator-id-delete">delete</a>.</p></div>

<p><span class="reference-title">+</span> <span class="sigil"></span></p>

<div class="operator"><p><span class="kwd"> +<span class="kwd">string</span> <strong>&rArr;</strong> <span class="kwd">string</span> module</span></p>

<p>See <a href="#min-operator-id-module">module</a>.</p></div>

<p><span class="reference-title">^</span> <span class="sigil"></span></p>

<div class="operator"><p><span class="kwd"> ^<span class="kwd">string</span> <strong>&rArr;</strong> <span class="kwd">string</span> call</span></p>

<p>See <a href="#min-operator-id-call">call</a>.</p></div>

<p><span class="reference-title">^</span></p>

<div class="operator"><p><span class="kwd"> ^ <strong>&rArr;</strong> call</span></p>

<p>See <a href="#min-operator-id-call">call</a>.</p></div>

<p><span class="reference-title">@</span> <span class="sigil"></span></p>

<div class="operator"><p><span class="kwd"> @<span class="kwd">string</span> <strong>&rArr;</strong> <span class="kwd">string</span> bind</span></p>

<p>See <a href="#min-operator-id-bind">bind</a>.</p></div>

<p><span class="reference-title">@</span></p>

<div class="operator"><p><span class="kwd"> @ <strong>&rArr;</strong> bind</span></p>

<p>See <a href="#min-operator-id-bind">bind</a>.</p></div>

<p><span class="reference-title">></span> <span class="sigil"></span></p>

<div class="operator"><p><span class="kwd"> ><span class="kwd">string</span> <strong>&rArr;</strong> <span class="kwd">string</span> save-symbol</span></p>

<p>See <a href="#min-operator-id-save-symbol">save-symbol</a>.</p></div>

<p><span class="reference-title">&lt;</span> <span class="sigil"></span></p>

<div class="operator"><p><span class="kwd"> &lt;<span class="kwd">string</span> <strong>&rArr;</strong> <span class="kwd">string</span> load-symbol</span></p>

<p>See <a href="#min-operator-id-load-symbol">load-symbol</a>.</p></div>

<p><span class="reference-title">-></span></p>

<div class="operator"><p><span class="kwd"> -> <strong>&rArr;</strong> dequote</span></p>

<p>See <a href="#min-operator-id-dequote">dequote</a>.</p></div>

<p><span class="reference-title">=></span></p>

<div class="operator"><p><span class="kwd"> => <strong>&rArr;</strong> apply</span></p>

<p>See <a href="#min-operator-id-apply">apply</a>.</p></div>

<p><span class="reference-title">#</span> <span class="sigil"></span></p>

<div class="operator"><p><span class="kwd"> #<span class="kwd">string</span> <strong>&rArr;</strong> <span class="kwd">string</span> quote-bind</span></p>

<p>See <a href="#min-operator-id-quote-bind">quote-bind</a>.</p></div>

<p><span class="reference-title">#</span></p>

<div class="operator"><p><span class="kwd"> # <strong>&rArr;</strong> quote-bind</span></p>

<p>See <a href="#min-operator-id-quote-bind">quote-bind</a>.</p></div>

<p><span class="reference-title">=</span> <span class="sigil"></span></p>

<div class="operator"><p><span class="kwd"> =<span class="kwd">string</span> <strong>&rArr;</strong> <span class="kwd">string</span> quote-define</span></p>

<p>See <a href="#min-operator-id-quote-define">quote-define</a>.</p></div>

<p><span class="reference-title">=</span></p>

<div class="operator"><p><span class="kwd"> = <strong>&rArr;</strong> quote-define</span></p>

<p>See <a href="#min-operator-id-quote-define">quote-define</a>.</p></div>

<p><a id="min-operator-id-apply"></a>
<span class="reference-title">apply</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot</span> <strong>&rArr;</strong> (<span class="kwd">a<sub>*</sub></span>)</span></p>

<p>Returns a new quotation <span class="kwd">quot</span> obtained by evaluating each element of <span class="kwd">quot</span> in a separate stack.</p></div>

<p><a id="min-operator-id-args"></a>
<span class="reference-title">args</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> <span class="kwd">quot</span></span></p>

<p>Returns a list of all arguments passed to the current program.</p></div>

<p><a id="min-operator-id-bind"></a>
<span class="reference-title">bind</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Binds the specified value (auto-quoted) to an existing symbol <span class="kwd">&apos;sym</span>.</p></div>

<p><a id="min-operator-id-bool"></a>
<span class="reference-title">bool</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Converts <span class="kwd">a</span> to a boolean value based on the following rules:</p>

<ul>
<li>If <span class="kwd">a</span> is a boolean value, no conversion is performed.</li>
<li>If <span class="kwd">a</span> is a non-zero numeric value, it is converted to <span class="kwd">true</span>, otherwise it is converted to <span class="kwd">false</span>.</li>
<li>If <span class="kwd">a</span> is a non-empty quotation, it is converted to <span class="kwd">true</span>, otherwise it is converted to <span class="kwd">false</span>.</li>
<li>If <span class="kwd">a</span> is a non-empty string or not <code>"false"</code>, it is converted to <span class="kwd">true</span>, otherwise it is converted to <span class="kwd">false</span>.</li>
</ul>
</div>

<p><a id="min-operator-id-call"></a>
<span class="reference-title">call</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot</span> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">a<sub>*</sub></span></span></p>

<p>Calls operator <span class="kwd">&apos;sym</span> defined in scope <span class="kwd">quot</span>.</p></div>

<p><a id="min-operator-id-case"></a>
<span class="reference-title">case</span></p>

<div class="operator"><p><span class="kwd"> ((<span class="kwd">quot<sub>1</sub></span> <span class="kwd">quot<sub>2</sub></span>)<span class="kwd"><sub>*</sub></span>) <strong>&rArr;</strong> <span class="kwd">a<sub>*</sub></span></span></p>

<p>This operator takes a quotation containing <em>n</em> different conditional branches.</p>

<p>Each branch must be a quotation containing two quotations, and it is processed as follows:</p>

<ul>
<li>if <span class="kwd">quot<sub>1</sub></span> evaluates to <span class="kwd">true</span>, then the <span class="kwd">quot<sub>2</sub></span> is executed.</li>
<li>if <span class="kwd">quot<sub>1</sub></span> evaluates to <span class="kwd">false</span>, then the following branch is processed (if any).</li>
</ul>


<div class="sidebar"><p>Example</p>

<p>The following program prints &ldquo;Smaller than 3&rdquo;:</p>

<pre><code>2 (
   ((&gt; 3) ("Greater than 3" put!))
   ((&lt; 3) ("Smaller than 3" put!))
   ((true) ("Exactly 3" put!))
) case
</code></pre></div></div>

<p><a id="min-operator-id-define"></a>
<span class="reference-title">define</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Defines a new symbol <span class="kwd">&apos;sym</span>, containing the specified value (auto-quoted if not already a quotation).</p></div>

<p><a id="min-operator-id-defined?"></a>
<span class="reference-title">defined?</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Returns <span class="kwd">true</span> if <span class="kwd">&apos;sym</span> is defined, <span class="kwd">false</span> otherwise.</p></div>

<p><a id="min-operator-id-delete"></a>
<span class="reference-title">delete</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Deletes the specified symbol <span class="kwd">&apos;sym</span>.</p></div>

<p><a id="min-operator-id-dequote"></a>
<span class="reference-title">dequote</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot</span> <strong>&rArr;</strong> <span class="kwd">a<sub>*</sub></span></span></p>

<p>Pushes the contents of quotation <span class="kwd">quot</span> on the stack.</p></div>

<p><a id="min-operator-id-eval"></a>
<span class="reference-title">eval</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">string</span> <strong>&rArr;</strong> <span class="kwd">a<sub>*</sub></span></span></p>

<p>Parses and interprets <span class="kwd">string</span>.</p></div>

<p><a id="min-operator-id-exit"></a>
<span class="reference-title">exit</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">int</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Exits the program or shell with <span class="kwd">int</span> as return code.</p></div>

<p><a id="min-operator-id-expect"></a>
<span class="reference-title">expect</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">quot<sub>2</sub></span></span></p>

<p>Validates the first <em>n</em> elements of the stack against the type descriptions specified in <span class="kwd">quot<sub>1</sub></span> (<em>n</em> is <span class="kwd">quot<sub>1</sub></span>&rsquo;s length) and if all the elements are valid returns them wrapped in <span class="kwd">quot<sub>2</sub></span> (in reverse order).</p>

<div class="sidebar"><p>Example</p>

<p>Assuming that the following elements are on the stack (from top to bottom):</p>

<p><code>1 "test" 3.4</code></p>

<p>the following program evaluates to <code>true</code>:</p>

<p><code>(int string num) expect (3.4 "test" 1) ==</code></p></div></div>

<p><a id="min-operator-id-float"></a>
<span class="reference-title">float</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <strong>&rArr;</strong> <span class="kwd">float</span></span></p>

<p>Converts <span class="kwd">a</span> to an integer value based on the following rules:</p>

<ul>
<li>If <span class="kwd">a</span> is <span class="kwd">true</span>, it is converted to <code>1.0</code>.</li>
<li>If <span class="kwd">a</span> is <span class="kwd">false</span>, it is converted to <code>0.0</code>.</li>
<li>If <span class="kwd">a</span> is a integer, it is converted to float value.</li>
<li>If <span class="kwd">a</span> is a float, no conversion is performed.</li>
<li>If <span class="kwd">a</span> is a string, it is parsed as a float value.</li>
</ul>
</div>

<p><a id="min-operator-id-foreach"></a>
<span class="reference-title">foreach</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <span class="kwd">quot<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">a<sub>*</sub></span></span></p>

<p>Applies the quotation <span class="kwd">quot<sub>2</sub></span> to each element of <span class="kwd">quot<sub>1</sub></span>.</p></div>

<p><a id="min-operator-id-format-error"></a>
<span class="reference-title">format-error</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">err</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Formats the error <span class="kwd">err</span> as a string.</p>

<div class="sidebar"><p>Example</p>

<p>The following:</p>

<p><code>((error "MyError") (message "This is a test error")) format-error</code></p>

<p>produces: <code>"This is a test error"</code></p></div></div>

<p><a id="min-operator-id-from-json"></a>
<span class="reference-title">from-json</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">string</span> <strong>&rArr;</strong> <span class="kwd">a<sub>*</sub></span></span></p>

<p>Converts a JSON string into <em>min</em> data.</p></div>

<p><a id="min-operator-id-if"></a>
<span class="reference-title">if</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <span class="kwd">quot<sub>2</sub></span> <span class="kwd">quot<sub>3</sub></span> <strong>&rArr;</strong> <span class="kwd">a<sub>*</sub></span></span></p>

<p>If <span class="kwd">quot<sub>1</sub></span> evaluates to <span class="kwd">true</span> then evaluates <span class="kwd">quot<sub>2</sub></span>, otherwise evaluates <span class="kwd">quot<sub>3</sub></span>.</p></div>

<p><a id="min-operator-id-import"></a>
<span class="reference-title">import</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Imports the a previously-loaded module <span class="kwd">&apos;sym</span>, defining all its symbols in the current scope.</p></div>

<p><a id="min-operator-id-int"></a>
<span class="reference-title">int</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <strong>&rArr;</strong> <span class="kwd">int</span></span></p>

<p>Converts <span class="kwd">a</span> to an integer value based on the following rules:</p>

<ul>
<li>If <span class="kwd">a</span> is <span class="kwd">true</span>, it is converted to <code>1</code>.</li>
<li>If <span class="kwd">a</span> is <span class="kwd">false</span>, it is converted to <code>0</code>.</li>
<li>If <span class="kwd">a</span> is an integer, no conversion is performed.</li>
<li>If <span class="kwd">a</span> is a float, it is converted to an integer value by truncating its decimal part.</li>
<li>If <span class="kwd">a</span> is a string, it is parsed as an integer value.</li>
</ul>
</div>

<p><a id="min-operator-id-linrec"></a>
<span class="reference-title">linrec</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <span class="kwd">quot<sub>2</sub></span> <span class="kwd">quot<sub>3</sub></span> <span class="kwd">quot<sub>4</sub></span> <strong>&rArr;</strong> <span class="kwd">a<sub>*</sub></span></span></p>

<p>Implements linear recursions as follows:</p>

<ol>
<li>Evaluates <span class="kwd">quot<sub>1</sub></span>.

<ul>
<li>If <span class="kwd">quot<sub>1</sub></span> evaluates to <span class="kwd">true</span>, then it evaluates <span class="kwd">quot<sub>2</sub></span>.</li>
<li>Otherwises it executes <span class="kwd">quot<sub>3</sub></span> and recurses using the same four quotations.</li>
</ul>
</li>
<li>Finally, it executes <span class="kwd">quot<sub>4</sub></span>.</li>
</ol>


<div class="sidebar"><p>Example</p>

<p>The following program leaves <code>120</code> on the stack, the factorial of 5:</p>

<pre><code>(dup 0 ==) 'succ (dup pred) '* linrec
</code></pre></div></div>

<p><a id="min-operator-id-lite?"></a>
<span class="reference-title">lite?</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Returns <span class="kwd">true</span> if min was built in <em>lite</em> mode.</p></div>

<p><a id="min-operator-id-load"></a>
<span class="reference-title">load</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">a<sub>*</sub></span></span></p>

<p>Parses and interprets the specified <em>min</em> file, adding <span class="ext">.min</span> if not specified.</p></div>

<p><a id="min-operator-id-load-symbol"></a>
<span class="reference-title">load-symbol</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">a<sub>*</sub></span></span></p>

<p>Loads the contents of symbol <span class="kwd">&apos;sym</span> from the <span class="file">.min_symbols</span> file.</p></div>

<p><a id="min-operator-id-loglevel"></a>
<span class="reference-title">loglevel</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Sets the current logging level to <span class="kwd">&apos;sym</span>. <span class="kwd">&apos;sym</span> must be one of the following strings or quoted symbols:</p>

<ul>
<li>debug</li>
<li>info</li>
<li>notice</li>
<li>warn</li>
<li>error</li>
<li>fatal</li>
</ul>


<div class="note"><p>Note</p>

<p>The default logging level is <em>notice</em>.</p></div></div>

<p><a id="min-operator-id-module"></a>
<span class="reference-title">module</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot</span> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Creates a new module <span class="kwd">&apos;sym</span> based on quotation <span class="kwd">quot</span>.</p></div>

<p><a id="min-operator-id-module-sigils"></a>
<span class="reference-title">module-sigils</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot</span> <strong>&rArr;</strong> (<span class="kwd">string<sub>*</sub></span>)</span></p>

<p>Returns a list of all sigils defined in module <span class="kwd">quot</span>.</p></div>

<p><a id="min-operator-id-module-symbols"></a>
<span class="reference-title">module-symbols</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot</span> <strong>&rArr;</strong> (<span class="kwd">string<sub>*</sub></span>)</span></p>

<p>Returns a list of all symbols defined in module <span class="kwd">quot</span>.</p></div>

<p><a id="min-operator-id-opts"></a>
<span class="reference-title">opts</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> <span class="kwd">dict</span></span></p>

<p>Returns a dictionary of all options passed to the current program, with their respective values.</p></div>

<p><a id="min-operator-id-parse"></a>
<span class="reference-title">parse</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">string</span> <strong>&rArr;</strong> <span class="kwd">quot</span></span></p>

<p>Parses <span class="kwd">string</span> and returns a quoted program <span class="kwd">quot</span>.</p></div>

<p><a id="min-operator-id-prompt"></a>
<span class="reference-title">prompt</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>This symbol is used to configure the prompt of the min shell. By default, it is set to the following quotation:</p>

<pre><code>("[$1]$$ " (.) =&gt; %)
</code></pre>

<p>Unlike other predefined symbols, this symbol is <em>unsealed</em>, which means it can be modified.</p></div>

<p><a id="min-operator-id-publish"></a>
<span class="reference-title">publish</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <span class="kwd">quot</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Publishes symbol <span class="kwd">&apos;sym</span> to the scope of <span class="kwd">quot</span>.</p>

<div class="sidebar"><p>Example</p>

<p>Publish symbol <span class="kwd">my-local-symbol</span> to <span class="kwd">ROOT</span> scope:
<code>'my-local-symbol ROOT publish</code></p></div></div>

<p><a id="min-operator-id-quote"></a>
<span class="reference-title">quote</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <strong>&rArr;</strong> (<span class="kwd">a</span>)</span></p>

<p>Wraps <span class="kwd">a</span> in a quotation.</p></div>

<p><a id="min-operator-id-quote-bind"></a>
<span class="reference-title">quote-bind</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Quotes <span class="kwd">a</span> and binds the quotation to the existing symbol <span class="kwd">&apos;sym</span>.</p></div>

<p><a id="min-operator-id-quote-define"></a>
<span class="reference-title">quote-define</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Quotes <span class="kwd">a</span> and assigns the quotation to the symbol <span class="kwd">&apos;sym</span>, creating it if not already defined.</p></div>

<p><a id="min-operator-id-raise"></a>
<span class="reference-title">raise</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">err</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Raises the error specified via the dictionary <span class="kwd">err</span>.</p></div>

<p><a id="min-operator-id-read"></a>
<span class="reference-title">read</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">quot</span></span></p>

<p>Reads and parses the specified <em>min</em> file <span class="kwd">&apos;sym</span> and returns a quoted program <span class="kwd">quot</span>.</p></div>

<p><a id="min-operator-id-remove-symbol"></a>
<span class="reference-title">remove-symbol</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Removes the symbol <span class="kwd">&apos;sym</span> from the <span class="file">.min_symbols</span> file.</p></div>

<p><a id="min-operator-id-ROOT"></a>
<span class="reference-title">ROOT</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> <span class="kwd">quot</span></span></p>

<p>Returns an empty quotation holding a reference to the <span class="kwd">ROOT</span> scope.</p>

<div class="tip"><p>Tip</p>

<p>This symbol is very useful in conjunction with the <strong>with</strong> operator.
#</p></div></div>

<p><a id="min-operator-id-save-symbol"></a>
<span class="reference-title">save-symbol</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Saves the contents of symbol <span class="kwd">&apos;sym</span> to the <span class="file">.min_symbols</span> file.</p></div>

<p><a id="min-operator-id-seal"></a>
<span class="reference-title">seal</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Seals symbol <span class="kwd">&apos;sym</span>, so that it cannot be re-assigned.</p></div>

<p><a id="min-operator-id-sigils"></a>
<span class="reference-title">sigils</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> (<span class="kwd">string<sub>*</sub></span>)</span></p>

<p>Returns a list of all sigils defined in the <span class="kwd">ROOT</span> scope.</p></div>

<p><a id="min-operator-id-source"></a>
<span class="reference-title">source</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">quot</span></span></p>

<p>Display the source code of symbol <span class="kwd">&apos;sym</span> (if it has been implemented a <em>min</em> quotation).</p></div>

<p><a id="min-operator-id-stored-symbols"></a>
<span class="reference-title">stored-symbols</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> (<span class="kwd">string<sub>*</sub></span>)</span></p>

<p>Returns a quotation containing all symbols stored in the <span class="file">.min_symbols</span> file.</p></div>

<p><a id="min-operator-id-string"></a>
<span class="reference-title">string</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Converts <span class="kwd">a</span> to its string representation.</p></div>

<p><a id="min-operator-id-symbols"></a>
<span class="reference-title">symbols</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> (<span class="kwd">string<sub>*</sub></span>)</span></p>

<p>Returns a list of all symbols defined in the <span class="kwd">ROOT</span> scope.</p></div>

<p><a id="min-operator-id-tap"></a>
<span class="reference-title">tap</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <span class="kwd">quot</span> <strong>&rArr;</strong> <span class="kwd">a</span></span></p>

<p>Performs the following operations:</p>

<ol>
<li>Removes <span class="kwd">a</span> from the stack.</li>
<li>For each quotation defined in <span class="kwd">quot</span> (which is a quotation of quotations each requiring one argument and returning one argument):

<ol>
<li>Pushes <span class="kwd">a</span> back to the stack.</li>
<li>Dequotes the quotation and saves the result as <span class="kwd">a</span>.</li>
</ol>
</li>
<li>Push the resulting <span class="kwd">a</span> back on the stack.</li>
</ol>


<div class="sidebar"><p>Example</p>

<p>The following program:</p>

<pre><code>(
  (("a" 1) ("b" 2) ("c" 3)) (
  (dup /a  succ succ %a)
  (dup /b  succ %b)
) tap
</code></pre>

<p>Returns <code>(("a" 3) ("b" 3) ("c" 3))</code>.</p></div></div>

<p><a id="min-operator-id-tap!"></a>
<span class="reference-title">tap!</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <span class="kwd">quot</span> <strong>&rArr;</strong> <span class="kwd">a</span></span></p>

<p>Performs the following operations:</p>

<ol>
<li>Removes <span class="kwd">a</span> from the stack.</li>
<li>For each quotation defined in <span class="kwd">quot</span> (which is a quotation of quotations each requiring one argument and returning one argument):

<ol>
<li>Pushes <span class="kwd">a</span> back to the stack.</li>
<li>Dequotes the quotation and saves the result as <span class="kwd">a</span>.</li>
</ol>
</li>
</ol>


<div class="sidebar"><p>Example</p>

<p>The following program:</p>

<pre><code>"" :s1
"test" (
  (' "1" swap append "" join)
  (' "2" swap append "" join)
  (' "3" swap append "" join @s1 s1)
) tap!
</code></pre>

<p>Sets <code>s1</code> to <code>"test123"</code>.</p></div></div>

<p><a id="min-operator-id-times"></a>
<span class="reference-title">times</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot</span> <span class="kwd">int</span> <strong>&rArr;</strong> <span class="kwd">a<sub>*</sub></span></span></p>

<p>Applies the quotation <span class="kwd">quot</span> <span class="kwd">int</span> times.</p></div>

<p><a id="min-operator-id-to-json"></a>
<span class="reference-title">to-json</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Converts <span class="kwd">quot</span> into a JSON string <span class="kwd">string</span>.</p></div>

<p><a id="min-operator-id-try"></a>
<span class="reference-title">try</span></p>

<div class="operator"><p><span class="kwd"> (<span class="kwd">quot<sub>1</sub></span> <span class="kwd">quot</span><span class="kwd"><sub>2</sub></span><span class="kwd"><sub>?</sub></span> <span class="kwd">quot</span><span class="kwd"><sub>3</sub></span><span class="kwd"><sub>?</sub></span>) <strong>&rArr;</strong> <span class="kwd">a<sub>*</sub></span></span></p>

<p>Evaluates a quotation as a try/catch/finally block.</p>

<p>The must contain the following elements:</p>

<ol>
<li>A quotation <span class="kwd">quot<sub>1</sub></span> containing the code to be evaluated (<em>try</em> block).</li>
<li><em>(optional)</em> A quotation <span class="kwd">quot<sub>2</sub></span> containing the code to execute in case of error (<em>catch</em> block).</li>
<li><em>(optional)</em> A quotation <span class="kwd">quot<sub>3</sub></span> containing the code to execute after the code has been evaluated, whether an error occurred or not (<em>finally</em> block).</li>
</ol>


<div class="sidebar"><p>Example</p>

<p>The following program executed on an empty stack prints the message &ldquo;Insufficient items on the stack&rdquo; and pushes 0 on the stack:</p>

<pre><code>  (
    (pop)
    (format-error puts)
    (0)
  ) try
</code></pre></div></div>

<p><a id="min-operator-id-unless"></a>
<span class="reference-title">unless</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <span class="kwd">quot<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">a<sub>*</sub></span></span></p>

<p>If <span class="kwd"><sub>1</sub></span> evaluates to <span class="kwd">false</span> then evaluates <span class="kwd"><sub>2</sub></span>.</p></div>

<p><a id="min-operator-id-unseal"></a>
<span class="reference-title">unseal</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Unseals symbol <span class="kwd">&apos;sym</span>, so that it can be re-assigned.</p></div>

<p><a id="min-operator-id-version"></a>
<span class="reference-title">version</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Returns the current min version number.</p></div>

<p><a id="min-operator-id-when"></a>
<span class="reference-title">when</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <span class="kwd">quot<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">a<sub>*</sub></span></span></p>

<p>If <span class="kwd">quot<sub>1</sub></span> evaluates to <span class="kwd">true</span> then evaluates <span class="kwd">quot<sub>2</sub></span>.</p></div>

<p><a id="min-operator-id-while"></a>
<span class="reference-title">while</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <span class="kwd">quot<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">a<sub>*</sub></span></span></p>

<p>Executes <span class="kwd">quot<sub>2</sub></span> while <span class="kwd">quot<sub>1</sub></span> evaluates to <span class="kwd">true</span>.</p>

<div class="sidebar"><p>Example</p>

<p>The following program prints all natural numbers from 0 to 10:</p>

<pre><code>0 :count
(count 10 &lt;=) 
(count puts succ @count) while
</code></pre></div></div>

<p><a id="min-operator-id-with"></a>
<span class="reference-title">with</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <span class="kwd">quot<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">a<sub>*</sub></span></span></p>

<p>Applies quotation <span class="kwd">quot<sub>1</sub></span> within the scope of <span class="kwd">quot<sub>2</sub></span>.</p>

<div class="sidebar"><p>Example</p>

<p>This operator is useful to define symbols on the <span class="kwd">ROOT</span> scope or a parent scope. For example min&rsquo;s prelude includes the following code used to import certain modules only if min was not compiled in lite mode:</p>

<pre><code>'lite? (
 (
  'crypto    import
  'math      import
  'net       import
  'http      import
 ) ROOT with
) unless
</code></pre>

<p>#</p></div></div>

<a name="<code>stack</code>-Module"></a>
<h3><code>stack</code> Module<a href="#document-top" title="Go to top"></a></h3>

<p><a id="min-operator-id-clear-stack"></a>
<span class="reference-title">clear-stack</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> &#x2205;</span></p>

<p>Empties the stack.</p></div>

<p><a id="min-operator-id-cleave"></a>
<span class="reference-title">cleave</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a<sub>1</sub></span> (<span class="kwd">quot</span><span class="kwd"><sub>*</sub></span>) <strong>&rArr;</strong> <span class="kwd">a<sub>*</sub></span></span></p>

<p>Applies each quotation contained in the first element to the second element <span class="kwd">a<sub>1</sub></span>.</p>

<div class="sidebar"><p>Example</p>

<p>The following program leaves 2 on the stack:</p>

<p><code>(1 2 3) ((sum) (size)) cleave /</code></p></div></div>

<p><a id="min-operator-id-cons"></a>
<span class="reference-title">cons</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a<sub>1</sub></span> (<span class="kwd">a<sub>*</sub></span>) <strong>&rArr;</strong> (<span class="kwd">a<sub>1</sub></span> <span class="kwd">a<sub>*</sub></span>)</span></p>

<p>Prepends <span class="kwd">a<sub>1</sub></span> to the quotation on top of the stack.</p></div>

<p><a id="min-operator-id-dip"></a>
<span class="reference-title">dip</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a<sub>1</sub></span> (<span class="kwd">a<sub>2</sub></span>) <strong>&rArr;</strong> <span class="kwd">a<sub>*</sub></span> <span class="kwd">a<sub>1</sub></span></span></p>

<p>Removes the first and second element from the stack, dequotes the first element, and restores the second element.</p></div>

<p><a id="min-operator-id-dup"></a>
<span class="reference-title">dup</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">a<sub>1</sub></span> <span class="kwd">a<sub>1</sub></span></span></p>

<p>Duplicates the first element on the stack.</p></div>

<p><a id="min-operator-id-get-stack"></a>
<span class="reference-title">get-stack</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> (<span class="kwd">a<sub>*</sub></span>)</span></p>

<p>Returns a quotation containing the contents of the stack.</p></div>

<p><a id="min-operator-id-id"></a>
<span class="reference-title">id</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> &#x2205;</span></p>

<p>Does nothing.</p></div>

<p><a id="min-operator-id-keep"></a>
<span class="reference-title">keep</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a<sub>1</sub></span> <span class="kwd">quot</span> <strong>&rArr;</strong> <span class="kwd">a<sub>*</sub></span> <span class="kwd">a<sub>1</sub></span></span></p>

<p>Applies each quotation contained in the first element to each subsequent corresponding element.</p>

<div class="sidebar"><p>Example</p>

<p>The following program leaves <code>5 3</code> on the stack:</p>

<p><code>2 3 '+ keep</code></p></div></div>

<p><a id="min-operator-id-nip"></a>
<span class="reference-title">nip</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a<sub>1</sub></span> <span class="kwd">a<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">a<sub>2</sub></span></span></p>

<p>Removes the second element from the stack.</p></div>

<p><a id="min-operator-id-over"></a>
<span class="reference-title">over</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a<sub>1</sub></span> <span class="kwd">a<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">a<sub>1</sub></span> <span class="kwd">a<sub>2</sub></span> <span class="kwd">a<sub>1</sub></span></span></p>

<p>Pushes a copy of the second element on top of the stack.</p></div>

<p><a id="min-operator-id-pick"></a>
<span class="reference-title">pick</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a<sub>1</sub></span> <span class="kwd">a<sub>2</sub></span> <span class="kwd">a<sub>3</sub></span> <strong>&rArr;</strong> <span class="kwd">a<sub>1</sub></span> <span class="kwd">a<sub>2</sub></span> <span class="kwd">a<sub>3</sub></span> <span class="kwd">a<sub>1</sub></span></span></p>

<p>Pushes a copy of the third element on top of the stack.</p></div>

<p><a id="min-operator-id-pop"></a>
<span class="reference-title">pop</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Removes the first element from the stack.</p></div>

<p><a id="min-operator-id-rolldown"></a>
<span class="reference-title">rolldown</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a<sub>1</sub></span> <span class="kwd">a<sub>2</sub></span> <span class="kwd">a<sub>3</sub></span> <strong>&rArr;</strong> <span class="kwd">a<sub>2</sub></span> <span class="kwd">a<sub>3</sub></span> <span class="kwd">a<sub>1</sub></span></span></p>

<p>Moves the third element in first position, the second in third position and the the first in second position.</p></div>

<p><a id="min-operator-id-rollup"></a>
<span class="reference-title">rollup</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a<sub>1</sub></span> <span class="kwd">a<sub>2</sub></span> <span class="kwd">a<sub>3</sub></span> <strong>&rArr;</strong> <span class="kwd">a<sub>3</sub></span> <span class="kwd">a<sub>2</sub></span> <span class="kwd">a<sub>1</sub></span></span></p>

<p>Moves the third and second element into second and third position and moves the first element into third position.</p></div>

<p><a id="min-operator-id-set-stack"></a>
<span class="reference-title">set-stack</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot</span> <strong>&rArr;</strong> <span class="kwd">a<sub>*</sub></span></span></p>

<p>Substitute the existing stack with the contents of <span class="kwd">quot</span>.</p></div>

<p><a id="min-operator-id-sip"></a>
<span class="reference-title">sip</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a<sub>1</sub></span> (<span class="kwd">a<sub>2</sub></span>) <strong>&rArr;</strong> <span class="kwd">a<sub>*</sub></span> <span class="kwd">a<sub>1</sub></span></span></p>

<p>Saves the <span class="kwd">a<sub>1</sub></span>, dequotes <span class="kwd">a<sub>2</sub></span>, and restores <span class="kwd">a<sub>1</sub></span>.</p></div>

<p><a id="min-operator-id-spread"></a>
<span class="reference-title">spread</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a<sub>*</sub></span> (<span class="kwd">quot</span><span class="kwd"><sub>*</sub></span>) <strong>&rArr;</strong> <span class="kwd">a<sub>*</sub></span></span></p>

<p>Applies each quotation contained in the first element to each subsequent corresponding element.</p>

<div class="sidebar"><p>Example</p>

<p>The following program leaves <code>(1 4)</code> on the stack:</p>

<p><code>(1 2) (3 4) ((0 get) (1 get)) spread</code></p></div></div>

<p><a id="min-operator-id-swap"></a>
<span class="reference-title">swap</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a<sub>1</sub></span> <span class="kwd">a<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">a<sub>2</sub></span> <span class="kwd">a<sub>1</sub></span></span></p>

<p>Swaps the first two elements on the stack.</p></div>

<p><a id="min-operator-id-swons"></a>
<span class="reference-title">swons</span></p>

<div class="operator"><p><span class="kwd"> (<span class="kwd">a<sub>*</sub></span>) <span class="kwd">a<sub>1</sub></span> <strong>&rArr;</strong> (<span class="kwd">a<sub>1</sub></span> <span class="kwd">a<sub>*</sub></span>)</span></p>

<p>Prepends <span class="kwd">a<sub>1</sub></span> to the quotation that follows it.</p></div>

<a name="<code>seq</code>-Module"></a>
<h3><code>seq</code> Module<a href="#document-top" title="Go to top"></a></h3>

<p><span class="reference-title">/</span> <span class="sigil"></span></p>

<div class="operator"><p><span class="kwd"> /<span class="kwd">string</span> <strong>&rArr;</strong> <span class="kwd">string</span> dget</span></p>

<p>See <a href="#min-operator-id-dget">dget</a>.</p></div>

<p><span class="reference-title">?</span> <span class="sigil"></span></p>

<div class="operator"><p><span class="kwd"> ?<span class="kwd">string</span> <strong>&rArr;</strong> <span class="kwd">string</span> dhas?</span></p>

<p>See <a href="#min-operator-id-dhas?">dhas?</a>.</p></div>

<p><span class="reference-title">%</span> <span class="sigil"></span></p>

<div class="operator"><p><span class="kwd"> %<span class="kwd">string</span> <strong>&rArr;</strong> <span class="kwd">string</span> dset</span></p>

<p>See <a href="#min-operator-id-dset">dset</a>.</p></div>

<p><a id="min-operator-id-all?"></a>
<span class="reference-title">all?</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <span class="kwd">quot<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Applies predicate <span class="kwd">quot<sub>2</sub></span> to each element of <span class="kwd">quot<sub>1</sub></span> and returns <span class="kwd">true</span> if all elements of <span class="kwd">quot<sub>1</sub></span> satisfy predicate <span class="kwd">quot<sub>2</sub></span>, <span class="kwd">false</span> otherwise.</p></div>

<p><a id="min-operator-id-any?"></a>
<span class="reference-title">any?</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <span class="kwd">quot<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Applies predicate <span class="kwd">quot<sub>2</sub></span> to each element of <span class="kwd">quot<sub>1</sub></span> and returns <span class="kwd">true</span> if at least one element of <span class="kwd">quot<sub>1</sub></span> satisfies predicate <span class="kwd">quot<sub>2</sub></span>, <span class="kwd">false</span> otherwise.</p></div>

<p><a id="min-operator-id-append"></a>
<span class="reference-title">append</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <span class="kwd">quot</span> <strong>&rArr;</strong> (<span class="kwd">a<sub>*</sub></span> <span class="kwd">a</span>)</span></p>

<p>Returns a new quotation containing the contents of <span class="kwd">quot</span> with <span class="kwd">a</span> appended.</p></div>

<p><a id="min-operator-id-get"></a>
<span class="reference-title">get</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot</span> <span class="kwd">int</span> <strong>&rArr;</strong> <span class="kwd">a</span></span></p>

<p>Returns the <em>n<sup>th</sup></em> element of <span class="kwd">quot</span> (zero-based).</p></div>

<p><a id="min-operator-id-concat"></a>
<span class="reference-title">concat</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <span class="kwd">quot<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">quot<sub>3</sub></span></span></p>

<p>Concatenates <span class="kwd">quot<sub>1</sub></span> with <span class="kwd">quot<sub>2</sub></span>.</p></div>

<p><a id="min-operator-id-ddel"></a>
<span class="reference-title">ddel</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">dict<sub>1</sub></span> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">dict<sub>2</sub></span></span></p>

<p>Returns a copy of <span class="kwd">dict<sub>1</sub></span> without the element with key <span class="kwd">&apos;sym</span>.</p></div>

<p><a id="min-operator-id-dget"></a>
<span class="reference-title">dget</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">dict</span> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">a</span></span></p>

<p>Returns the value of key <span class="kwd">&apos;sym</span> from dictionary <span class="kwd">dict</span>.</p></div>

<p><a id="min-operator-id-dhas?"></a>
<span class="reference-title">dhas?</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">dict</span> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Returns <span class="kwd">true</span> if dictionary <span class="kwd">dict</span> contains the key <span class="kwd">&apos;sym</span>, <span class="kwd">false</span> otherwise.</p>

<div class="sidebar"><p>Example</p>

<p>The following program returns <span class="kwd">true</span>:</p>

<pre><code>(("a1" true) ("a2" "aaa") ("a3" false)) 'a2 dhas?
</code></pre></div></div>

<p><a id="min-operator-id-dkeys"></a>
<span class="reference-title">dkeys</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">dict</span> <strong>&rArr;</strong> (<span class="kwd">string</span><span class="kwd"><sub>*</sub></span>)</span></p>

<p>Returns a quotation containing all the keys of dictionary <span class="kwd">dict</span>.</p></div>

<p><a id="min-operator-id-dpick"></a>
<span class="reference-title">dpick</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">dict<sub>1</sub></span> <span class="kwd">quot</span> <strong>&rArr;</strong> <span class="kwd">dict<sub>2</sub></span></span></p>

<p>Returns a new dictionary <span class="kwd">dict<sub>2</sub></span> containing the elements of <span class="kwd">dict<sub>1</sub></span> whose keys are included in <span class="kwd">quot</span>.</p>

<div class="sidebar"><p>Example</p>

<p>The following program returns <code>(("a" 4) ("d" 7))</code>:</p>

<pre><code>(("q" 5) ("a" 4) ("c" 6) ("d" 7)) ("a" "d") dpick
</code></pre></div></div>

<p><a id="min-operator-id-drop"></a>
<span class="reference-title">drop</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <span class="kwd">int</span> <strong>&rArr;</strong> <span class="kwd">quot<sub>2</sub></span></span></p>

<p>Returns a quotation <span class="kwd">quot<sub>2</sub></span> containing the remaining elements after the first <em>n</em> values of the input quotation <span class="kwd">quot<sub>1</sub></span>, or an empty quotation if <span class="kwd">int</span> is greater than the length of <span class="kwd">quot<sub>1</sub></span>.</p></div>

<p><a id="min-operator-id-dset"></a>
<span class="reference-title">dset</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">dict<sub>1</sub></span> <span class="kwd">a</span> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">dict<sub>2</sub></span></span></p>

<p>Sets the value of the <span class="kwd">&apos;sym</span> of <span class="kwd">dict<sub>1</sub></span>  to <span class="kwd">a</span>, and returns the modified copy of the dictionary <span class="kwd">dict<sub>2</sub></span>.</p></div>

<p><a id="min-operator-id-dsort"></a>
<span class="reference-title">dsort</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">dict<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">dict<sub>2</sub></span></span></p>

<p>Returns a new dictionary <span class="kwd">dict<sub>2</sub></span> containing all elements of <span class="kwd">dict<sub>1</sub></span> sorted by key in ascending order.</p>

<div class="sidebar"><p>Example</p>

<p>The following program leaves <code>(("a" 342) ("b" true) ("c" -4) ("d" 22))</code> on the stack:</p>

<pre><code>(("b" true) ("d" 22) ("c" -4) ("a" 342)) dsort
</code></pre></div></div>

<p><a id="min-operator-id-dvalues"></a>
<span class="reference-title">dvalues</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">dict</span> <strong>&rArr;</strong> (<span class="kwd">a<sub>*</sub></span>)</span></p>

<p>Returns a quotation containing all the values of dictionary <span class="kwd">dict</span>.</p></div>

<p><a id="min-operator-id-filter"></a>
<span class="reference-title">filter</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <span class="kwd">quot<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">quot<sub>3</sub></span></span></p>

<p>Returns a new quotation <span class="kwd">quot<sub>3</sub></span> containing all elements of <span class="kwd">quot<sub>1</sub></span> that satisfy predicate <span class="kwd">quot<sub>2</sub></span>.</p>

<div class="sidebar"><p>Example</p>

<p>The following program leaves <code>(2 6 8 12)</code> on the stack:</p>

<pre><code>(1 37 34 2 6 8 12 21)
(dup 20 &lt; swap even? and) filter
</code></pre></div></div>

<p><a id="min-operator-id-find"></a>
<span class="reference-title">find</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <span class="kwd">quot<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">int</span></span></p>

<p>Returns the index of the first element within <span class="kwd">quot<sub>1</sub></span> that satisfies predicate <span class="kwd">quot<sub>2</sub></span>.</p>

<div class="sidebar"><p>Example</p>

<p>The following program leaves <code>3</code> on the stack:</p>

<pre><code>(1 2 4 8 16)
(5 &gt;) find
</code></pre></div></div>

<p><a id="min-operator-id-first"></a>
<span class="reference-title">first</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot</span> <strong>&rArr;</strong> <span class="kwd">a</span></span></p>

<p>Returns the first element of <span class="kwd">quot</span>.</p></div>

<p><a id="min-operator-id-flatten"></a>
<span class="reference-title">flatten</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">quot<sub>2</sub></span></span></p>

<p>Flattens all quotations within <span class="kwd">quot<sub>1</sub></span> and returns the resulting sequence <span class="kwd">quot<sub>2</sub></span>.</p>

<div class="sidebar"><p>Example</p>

<p>The following program leaves <code>(1 2 3 4 5 6 7 8)</code> on the stack:</p>

<pre><code>(1 (2 3 4) 5 (6 7) 8)
flatten
</code></pre></div></div>

<p><a id="min-operator-id-harvest"></a>
<span class="reference-title">harvest</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">quot<sub>2</sub></span></span></p>

<p>Creates a new quotation <span class="kwd">quot<sub>2</sub></span> containing all elements of <span class="kwd">quot<sub>1</sub></span> except for empty quotations.</p>

<div class="sidebar"><p>Example</p>

<p>The following program leaves <code>(1 2 3)</code> on the stack:</p>

<pre><code>(1 () () () 2 () 3)
harvest
</code></pre></div></div>

<p><a id="min-operator-id-in?"></a>
<span class="reference-title">in?</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot</span> <span class="kwd">a</span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Returns <span class="kwd">true</span> if <span class="kwd">a</span> is contained in <span class="kwd">quot</span>, <span class="kwd">false</span> otherwise.</p></div>

<p><a id="min-operator-id-insert"></a>
<span class="reference-title">insert</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <span class="kwd">a</span> <span class="kwd">int</span> <strong>&rArr;</strong> <span class="kwd">quot<sub>2</sub></span></span></p>

<p>Inserts <span class="kwd">a</span> as the value of the <em>n<sup>th</sup></em> element <span class="kwd">quot<sub>1</sub></span> (zero-based), and returns the modified copy of the quotation <span class="kwd">quot<sub>2</sub></span>.</p></div>

<p><a id="min-operator-id-last"></a>
<span class="reference-title">last</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot</span> <strong>&rArr;</strong> <span class="kwd">a</span></span></p>

<p>Returns the last element of <span class="kwd">quot</span>.</p></div>

<p><a id="min-operator-id-map"></a>
<span class="reference-title">map</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <span class="kwd">quot<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">quot<sub>3</sub></span></span></p>

<p>Returns a new quotation <span class="kwd">quot<sub>3</sub></span> obtained by applying <span class="kwd">quot<sub>2</sub></span> to each element of <span class="kwd">quot<sub>1</sub></span>.</p></div>

<p><a id="min-operator-id-map-reduce"></a>
<span class="reference-title">map-reduce</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <span class="kwd">quot<sub>2</sub></span> <span class="kwd">quot<sub>3</sub></span> <strong>&rArr;</strong> <span class="kwd">int</span></span></p>

<p>Applies <span class="kwd">quot<sub>2</sub></span> (map) to each element of <span class="kwd">quot<sub>1</sub></span> and then applies <span class="kwd">quot<sub>3</sub></span> (reduce) to each successive element of <span class="kwd">quot<sub>1</sub></span>. <span class="kwd">quot<sub>1</sub></span> must have at least one element.</p>

<div class="sidebar"><p>Example</p>

<p>The following program leaves <code>35</code> on the stack:</p>

<pre><code>(1 3 5)
(dup *) (+) map-reduce
</code></pre></div></div>

<p><a id="min-operator-id-partition"></a>
<span class="reference-title">partition</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <span class="kwd">quot<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">quot<sub>3</sub></span> <span class="kwd">quot<sub>4</sub></span></span></p>

<p>Partitions <span class="kwd">quot<sub>1</sub></span> into two quotations: <span class="kwd">quot<sub>3</sub></span> contains all elements of <span class="kwd">quot<sub>1</sub></span> that satisfy predicate <span class="kwd">quot<sub>2</sub></span>, <span class="kwd">quot<sub>4</sub></span> all the others.</p>

<div class="sidebar"><p>Example</p>

<p>The following program leaves <code>(1 2 3) (2 4 6)</code> on the stack:</p>

<pre><code>(1 2 3 4 5 6)
(odd?) partition
</code></pre></div></div>

<p><a id="min-operator-id-prepend"></a>
<span class="reference-title">prepend</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <span class="kwd">quot</span> <strong>&rArr;</strong> (<span class="kwd">a</span> <span class="kwd">a<sub>*</sub></span>)</span></p>

<p>Returns a new quotation containing the contents of <span class="kwd">quot</span> with <span class="kwd">a</span> prepended.</p></div>

<p><a id="min-operator-id-quote-map"></a>
<span class="reference-title">quote-map</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">quot<sub>2</sub></span></span></p>

<p>Returns a new quotation <span class="kwd">quot<sub>2</sub></span> obtained by quoting each element of <span class="kwd">quot<sub>1</sub></span>.</p></div>

<p><a id="min-operator-id-reduce"></a>
<span class="reference-title">reduce</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <span class="kwd">a</span> <span class="kwd">quot<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">int</span></span></p>

<p>Combines each successive element of <span class="kwd">quot<sub>1</sub></span> using <span class="kwd">quot<sub>2</sub></span>. On the first iteration, the first two inputs processed by <span class="kwd">quot<sub>2</sub></span> are <span class="kwd">a</span> and the first element of <span class="kwd">quot<sub>1</sub></span>.</p>

<div class="sidebar"><p>Example</p>

<p>The following program leaves <code>120</code> on the stack:</p>

<pre><code>(1 2 3 4 5)
1 (*) reduce
</code></pre></div></div>

<p><a id="min-operator-id-reject"></a>
<span class="reference-title">reject</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <span class="kwd">quot<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">quot<sub>3</sub></span></span></p>

<p>Returns a new quotatios <span class="kwd">quot<sub>3</sub></span> including all elements of <span class="kwd">quot<sub>1</sub></span> that do not satisfy predicate <span class="kwd">quot<sub>2</sub></span> (i.e. the opposite of <code>filter</code>)</p></div>

<p><a id="min-operator-id-remove"></a>
<span class="reference-title">remove</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <span class="kwd">int</span> <strong>&rArr;</strong> <span class="kwd">quot<sub>2</sub></span></span></p>

<p>Returns the <em>n<sup>th</sup></em> element of <span class="kwd">quot<sub>1</sub></span> (zero-based), and returns the modified copy of the quotation <span class="kwd">quot<sub>2</sub></span>.</p></div>

<p><a id="min-operator-id-rest"></a>
<span class="reference-title">rest</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">quot<sub>2</sub></span></span></p>

<p>Returns a new quotation <span class="kwd">quot<sub>2</sub></span> containing all elements of <span class="kwd">quot<sub>1</sub></span> quotation except for the first.</p></div>

<p><a id="min-operator-id-reverse"></a>
<span class="reference-title">reverse</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">quot<sub>2</sub></span></span></p>

<p>Returns a new quotation <span class="kwd">quot<sub>2</sub></span> containing all elements of <span class="kwd">quot<sub>1</sub></span> in reverse order.</p></div>

<p><a id="min-operator-id-set"></a>
<span class="reference-title">set</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <span class="kwd">a</span> <span class="kwd">int</span> <strong>&rArr;</strong> <span class="kwd">quot<sub>2</sub></span></span></p>

<p>Sets the value of the <em>n<sup>th</sup></em> element <span class="kwd">quot<sub>1</sub></span> (zero-based) to <span class="kwd">a</span>, and returns the modified copy of the quotation <span class="kwd">quot<sub>2</sub></span>.</p></div>

<p><a id="min-operator-id-shorten"></a>
<span class="reference-title">shorten</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <span class="kwd">int</span> <strong>&rArr;</strong> <span class="kwd">quot<sub>2</sub></span></span></p>

<p>Returns a quotation <span class="kwd">quot<sub>2</sub></span> containing the first <em>n</em> values of the input quotation <span class="kwd">quot<sub>1</sub></span>.</p></div>

<p><a id="min-operator-id-size"></a>
<span class="reference-title">size</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot</span> <strong>&rArr;</strong> <span class="kwd">int</span></span></p>

<p>Returns the length of <span class="kwd">quot</span>.</p></div>

<p><a id="min-operator-id-slice"></a>
<span class="reference-title">slice</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <span class="kwd">int<sub>1</sub></span> <span class="kwd">int<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">quot<sub>2</sub></span></span></p>

<p>Creates a new quotation <span class="kwd">quot<sub>2</sub></span> obtaining by selecting all elements of <span class="kwd">quot<sub>1</sub></span> between indexes <span class="kwd">int<sub>1</sub></span> and <span class="kwd">int<sub>2</sub></span>.</p>

<div class="sidebar"><p>Example</p>

<p>The following program leaves <code>(3 4 5)</code> on the stack:</p>

<pre><code>(1 2 3 4 5 6)
2 4 slice
</code></pre></div></div>

<p><a id="min-operator-id-sort"></a>
<span class="reference-title">sort</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <span class="kwd">quot<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">quot<sub>3</sub></span></span></p>

<p>Sorts all elements of <span class="kwd">quot<sub>1</sub></span> according to predicate <span class="kwd">quot<sub>2</sub></span>.</p>

<div class="sidebar"><p>Example</p>

<p>The following program leaves <code>(1 3 5 7 9 13 16)</code> on the stack:</p>

<pre><code>(1 9 5 13 16 3 7) '&gt; sort
</code></pre></div></div>

<p><a id="min-operator-id-take"></a>
<span class="reference-title">take</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot<sub>1</sub></span> <span class="kwd">int</span> <strong>&rArr;</strong> <span class="kwd">quot<sub>2</sub></span></span></p>

<p>Returns a quotation <span class="kwd">quot<sub>2</sub></span> containing the first <em>n</em> values of the input quotation <span class="kwd">quot<sub>1</sub></span>, or <span class="kwd">quot<sub>1</sub></span> itself if <span class="kwd">int</span> is greater than the length of <span class="kwd">quot<sub>1</sub></span>.</p></div>

<a name="<code>io</code>-Module"></a>
<h3><code>io</code> Module<a href="#document-top" title="Go to top"></a></h3>

<p><a id="min-operator-id-ask"></a>
<span class="reference-title">ask</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">string<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">string<sub>2</sub></span></span></p>

<p>Prints <span class="kwd">string<sub>1</sub></span> (prompt), reads a line from STDIN and places it on top of the stack as a string.</p></div>

<p><a id="min-operator-id-choose"></a>
<span class="reference-title">choose</span></p>

<div class="operator"><p><span class="kwd"> ((<span class="kwd">string<sub>1</sub></span> <span class="kwd">quot<sub>1</sub></span>)<span class="kwd"><sub>+</sub></span>) <span class="kwd">string<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">a<sub>*</sub></span></span></p>

<p>Prints <span class="kwd">string<sub>2</sub></span>, then prints all <span class="kwd">string<sub>1</sub></span> included in the quotation prepended with a number, and waits from valid input from the user.</p>

<p>If the user enters a number that matches one of the choices, then the corresponding quotation <span class="kwd">quot<sub>1</sub></span> is executed, otherwise the choice menu is displayed again until a valid choice is made.</p></div>

<p><a id="min-operator-id-column-print"></a>
<span class="reference-title">column-print</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot</span> <span class="kwd">int</span> <strong>&rArr;</strong> <span class="kwd">a</span></span></p>

<p>Prints all elements of <span class="kwd">quot</span> to STDOUT, in <span class="kwd">int</span> columns.</p></div>

<p><a id="min-operator-id-confirm"></a>
<span class="reference-title">confirm</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">string</span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Prints <span class="kwd">string</span> (prompt) appending <code>" [yes/no]: "</code>, reads a line from STDIN and:</p>

<ul>
<li>if it matches <code>/^y(es)$/i</code>, puts <span class="kwd">true</span> on the stack.</li>
<li>if it matches <code>/^no?$/i</code>, puts <span class="kwd">false</span> on the stack.</li>
<li>Otherwise, it prints <code>Invalid answer. Please enter 'yes' or 'no':</code> and waits for a new answer.</li>
</ul>
</div>

<p><a id="min-operator-id-debug"></a>
<span class="reference-title">debug</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <strong>&rArr;</strong> <span class="kwd">a</span></span></p>

<p>Prints <span class="kwd">a</span> and a new line to STDOUT, if logging level is set to <span class="kwd">debug</span> or lower.</p></div>

<p><a id="min-operator-id-error"></a>
<span class="reference-title">error</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <strong>&rArr;</strong> <span class="kwd">a</span></span></p>

<p>Prints <span class="kwd">a</span> and a new line to STDERR, if logging level is set to <span class="kwd">error</span> or lower.</p></div>

<p><a id="min-operator-id-fappend"></a>
<span class="reference-title">fappend</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">string<sub>1</sub></span> <span class="kwd">string<sub>2</sub></span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Appends <span class="kwd">string<sub>1</sub></span> to the end of file <span class="kwd">string<sub>2</sub></span>.</p></div>

<p><a id="min-operator-id-fatal"></a>
<span class="reference-title">fatal</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <strong>&rArr;</strong> <span class="kwd">a</span></span></p>

<p>Prints <span class="kwd">a</span> and a new line to STDERR, and exists the program with error code <code>100</code>.</p></div>

<p><a id="min-operator-id-fread"></a>
<span class="reference-title">fread</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">string</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Reads the file <span class="kwd">string</span> and puts its contents on the top of the stack as a string.</p></div>

<p><a id="min-operator-id-fwrite"></a>
<span class="reference-title">fwrite</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">string<sub>1</sub></span> <span class="kwd">string<sub>2</sub></span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Writes <span class="kwd">string<sub>1</sub></span> to the file <span class="kwd">string<sub>2</sub></span>, erasing all its contents first.</p></div>

<p><a id="min-operator-id-gets"></a>
<span class="reference-title">gets</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Reads a line from STDIN and places it on top of the stack as a string.</p></div>

<p><a id="min-operator-id-info"></a>
<span class="reference-title">info</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <strong>&rArr;</strong> <span class="kwd">a</span></span></p>

<p>Prints <span class="kwd">a</span> and a new line to STDOUT, if logging level is set to <span class="kwd">info</span> or lower.</p></div>

<p><a id="min-operator-id-newline"></a>
<span class="reference-title">newline</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> &#x2205;</span></p>

<p>Prints a new line to STDOUT.</p></div>

<p><a id="min-operator-id-notice"></a>
<span class="reference-title">notice</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <strong>&rArr;</strong> <span class="kwd">a</span></span></p>

<p>Prints <span class="kwd">a</span> and a new line to STDOUT, if logging level is set to <span class="kwd">notice</span> (default) or lower.</p></div>

<p><a id="min-operator-id-password"></a>
<span class="reference-title">password</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Reads a line from STDIN displaying * for each typed character, and places it on top of the stack as a string.</p></div>

<p><a id="min-operator-id-print"></a>
<span class="reference-title">print</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <strong>&rArr;</strong> <span class="kwd">a</span></span></p>

<p>Prints <span class="kwd">a</span> to STDOUT.</p></div>

<p><a id="min-operator-id-print!"></a>
<span class="reference-title">print!</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Prints <span class="kwd">a</span> to STDOUT and removes <span class="kwd">a</span> from the stack.</p></div>

<p><a id="min-operator-id-puts"></a>
<span class="reference-title">puts</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <strong>&rArr;</strong> <span class="kwd">a</span></span></p>

<p>Prints <span class="kwd">a</span> and a new line to STDOUT.</p></div>

<p><a id="min-operator-id-puts!"></a>
<span class="reference-title">puts!</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Prints <span class="kwd">a</span> and a new line to STDOUT, removing <span class="kwd">a</span> from the stack.</p></div>

<p><a id="min-operator-id-warning"></a>
<span class="reference-title">warning</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <strong>&rArr;</strong> <span class="kwd">a</span></span></p>

<p>Prints <span class="kwd">a</span> and a new line to STDERR, if logging level is set to <span class="kwd">warning</span> or lower.</p></div>

<a name="<code>fs</code>-Module"></a>
<h3><code>fs</code> Module<a href="#document-top" title="Go to top"></a></h3>

<p><a id="min-operator-id-atime"></a>
<span class="reference-title">atime</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">float</span></span></p>

<p>Returns a timestamp corresponding to the time that file/directory <span class="kwd">&apos;sym</span> was last accessed.</p></div>

<p><a id="min-operator-id-ctime"></a>
<span class="reference-title">ctime</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">float</span></span></p>

<p>Returns a timestamp corresponding to the time that file/directory <span class="kwd">&apos;sym</span> was created.</p></div>

<p><a id="min-operator-id-fperms"></a>
<span class="reference-title">fperms</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">int</span></span></p>

<p>Returns the Unix permissions (expressed as a three-digit number) of file/directory <span class="kwd">&apos;sym</span>.</p></div>

<p><a id="min-operator-id-fsize"></a>
<span class="reference-title">fsize</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">int</span></span></p>

<p>Returns the size in bytes of file/directory <span class="kwd">&apos;sym</span>.</p></div>

<p><a id="min-operator-id-fstats"></a>
<span class="reference-title">fstats</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">dict</span></span></p>

<p>Returns a dictionary <span class="kwd">dict</span> containing information on file/directory <span class="kwd">&apos;sym</span>.</p>

<div class="sidebar"><p>Example</p>

<p>Assuming that <code>min</code> is a file, the following:</p>

<p><code>'min fstats</code></p>

<p>produces:</p>

<pre><code> (
   ("name" (min))
   ("device" 16777220)
   ("file" 50112479)
   ("type" "file")
   ("size" 617068)
   ("permissions" 755)
   ("nlinks" 1)
   ("ctime" 1496583112.0)
   ("atime" 1496584370.0)
   ("mtime" 1496583112.0)
 )
</code></pre></div></div>

<p><a id="min-operator-id-ftype"></a>
<span class="reference-title">ftype</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Returns the type of file/directory <span class="kwd">&apos;sym</span> (<code>"file"</code> or <code>"dir"</code>).</p></div>

<p><a id="min-operator-id-hidden?"></a>
<span class="reference-title">hidden?</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Returns <span class="kwd">true</span> if file/directory <span class="kwd">&apos;sym</span> is hidden, <span class="kwd">false</span> otherwise.</p></div>

<p><a id="min-operator-id-mtime"></a>
<span class="reference-title">mtime</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">float</span></span></p>

<p>Returns a timestamp corresponding to the time that file/directory <span class="kwd">&apos;sym</span> was last modified.</p></div>

<a name="<code>logic</code>-Module"></a>
<h3><code>logic</code> Module<a href="#document-top" title="Go to top"></a></h3>

<p><a id="min-operator-id-&gt;"></a>
<span class="reference-title">&gt;</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a<sub>1</sub></span> <span class="kwd">a<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Returns <span class="kwd">true</span> if <span class="kwd">a<sub>1</sub></span> is greater than <span class="kwd">a<sub>2</sub></span>, <span class="kwd">false</span> otherwise.</p>

<div class="note"><p>Note</p>

<p>Only comparisons among two numbers or two strings are supported.</p></div></div>

<p><a id="min-operator-id-&gt;="></a>
<span class="reference-title">&gt;=</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a<sub>1</sub></span> <span class="kwd">a<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Returns <span class="kwd">true</span> if <span class="kwd">a<sub>1</sub></span> is greater than or equal to <span class="kwd">a<sub>2</sub></span>, <span class="kwd">false</span> otherwise.</p>

<div class="note"><p>Note</p>

<p>Only comparisons among two numbers or two strings are supported.</p></div></div>

<p><a id="min-operator-id-&lt;"></a>
<span class="reference-title">&lt;</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a<sub>1</sub></span> <span class="kwd">a<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Returns <span class="kwd">true</span> if <span class="kwd">a<sub>1</sub></span> is smaller than <span class="kwd">a<sub>2</sub></span>, <span class="kwd">false</span> otherwise.</p>

<div class="note"><p>Note</p>

<p>Only comparisons among two numbers or two strings are supported.</p></div></div>

<p><a id="min-operator-id-&lt;="></a>
<span class="reference-title">&lt;=</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a<sub>1</sub></span> <span class="kwd">a<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Returns <span class="kwd">true</span> if <span class="kwd">a<sub>1</sub></span> is smaller than or equal to <span class="kwd">a<sub>2</sub></span>, <span class="kwd">false</span> otherwise.</p>

<div class="note"><p>Note</p>

<p>Only comparisons among two numbers or two strings are supported.</p></div></div>

<p><a id="min-operator-id-=="></a>
<span class="reference-title">==</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a<sub>1</sub></span> <span class="kwd">a<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Returns <span class="kwd">true</span> if <span class="kwd">a<sub>1</sub></span> is equal to <span class="kwd">a<sub>2</sub></span>, <span class="kwd">false</span> otherwise.</p></div>

<p><a id="min-operator-id-!="></a>
<span class="reference-title">!=</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a<sub>1</sub></span> <span class="kwd">a<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Returns <span class="kwd">true</span> if <span class="kwd">a<sub>1</sub></span> is not equal to <span class="kwd">a<sub>2</sub></span>, <span class="kwd">false</span> otherwise.</p></div>

<p><a id="min-operator-id-and"></a>
<span class="reference-title">and</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">bool<sub>1</sub></span> <span class="kwd">bool<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">bool<sub>3</sub></span></span></p>

<p>Returns <span class="kwd">true</span> if <span class="kwd">bool<sub>1</sub></span> is equal to <span class="kwd">bool<sub>2</sub></span>, <span class="kwd">false</span> otherwise.</p></div>

<p><a id="min-operator-id-boolean?"></a>
<span class="reference-title">boolean?</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Returns <span class="kwd">true</span> if <span class="kwd">a</span> is a boolean, <span class="kwd">false</span> otherwise.</p></div>

<p><a id="min-operator-id-dequote-and"></a>
<span class="reference-title">dequote-and</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a<sub>1</sub></span> <span class="kwd">a<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Short-circuited logical and. It performs the following operations:</p>

<ol>
<li>Pops <span class="kwd">a<sub>1</sub></span> and <span class="kwd">a<sub>2</sub></span> off the stack.</li>
<li>Dequotes <span class="kwd">a<sub>1</sub></span>, if <span class="kwd">false</span> is on the stack, it pushes <span class="kwd">false</span> on the stack and stops, otherwise it carries on.</li>
<li>Dequotes <span class="kwd">a<sub>2</sub></span>.</li>
<li>If <span class="kwd">a<sub>2</sub></span> is <span class="kwd">true</span>, it pushes <span class="kwd">true</span> on the stack.</li>
</ol>


<div class="note"><p>Note</p>

<p><span class="kwd">a<sub>1</sub></span> (and <span class="kwd">a<sub>2</sub></span>, if dequoted) must evaluate to a boolean value, otherwise an exception is raised.</p></div>

<div class="sidebar"><p>Example</p>

<p>The following program returns <span class="kwd">false</span> and never executes the second quotation.</p>

<pre><code> "test" :x (x number?) (x 5 &lt;) dequote-and
</code></pre></div></div>

<p><a id="min-operator-id-dequote-or"></a>
<span class="reference-title">dequote-or</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a<sub>1</sub></span> <span class="kwd">a<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Short-circuited logical or. It performs the following operations:</p>

<ol>
<li>Pops <span class="kwd">a<sub>1</sub></span> and <span class="kwd">a<sub>2</sub></span> off the stack.</li>
<li>Dequotes <span class="kwd">a<sub>1</sub></span>, if <span class="kwd">true</span> is on the stack, it pushes <span class="kwd">true</span> on the stack and stops, otherwise it carries on.</li>
<li>Dequotes <span class="kwd">a<sub>2</sub></span>.</li>
<li>If <span class="kwd">a<sub>2</sub></span> is <span class="kwd">false</span>, it pushes <span class="kwd">false</span> on the stack.</li>
</ol>


<div class="note"><p>Note</p>

<p><span class="kwd">a<sub>1</sub></span> (and <span class="kwd">a<sub>2</sub></span>, if dequoted) must evaluate to a boolean value, otherwise an exception is raised.</p></div>

<div class="sidebar"><p>Example</p>

<p>The following program returns <span class="kwd">true</span> and never executes the second quotation.</p>

<pre><code> "test" :x (x string?) (x quotation?) dequote-or
</code></pre></div></div>

<p><a id="min-operator-id-dictionary?"></a>
<span class="reference-title">dictionary?</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Returns <span class="kwd">true</span> if <span class="kwd">a</span> is a dictionary, <span class="kwd">false</span> otherwise.</p></div>

<p><a id="min-operator-id-float?"></a>
<span class="reference-title">float?</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Returns <span class="kwd">true</span> if <span class="kwd">a</span> is a float, <span class="kwd">false</span> otherwise.</p></div>

<p><a id="min-operator-id-or"></a>
<span class="reference-title">or</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">bool<sub>1</sub></span> <span class="kwd">bool<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">bool<sub>3</sub></span></span></p>

<p>Returns <span class="kwd">true</span> if <span class="kwd">bool<sub>1</sub></span> or <span class="kwd">bool<sub>2</sub></span> is <span class="kwd">true</span>, <span class="kwd">false</span> otherwise.</p></div>

<p><a id="min-operator-id-integer?"></a>
<span class="reference-title">integer?</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Returns <span class="kwd">true</span> if <span class="kwd">a</span> is an integer, <span class="kwd">false</span> otherwise.</p></div>

<p><a id="min-operator-id-not"></a>
<span class="reference-title">not</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">bool<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">bool<sub>2</sub></span></span></p>

<p>Negates <span class="kwd">bool<sub>1</sub></span>.</p></div>

<p><a id="min-operator-id-number?"></a>
<span class="reference-title">number?</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Returns <span class="kwd">true</span> if <span class="kwd">a</span> is a number, <span class="kwd">false</span> otherwise.</p></div>

<p><a id="min-operator-id-quotation?"></a>
<span class="reference-title">quotation?</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">a</span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Returns <span class="kwd">true</span> if <span class="kwd">a</span> is a quotation, <span class="kwd">false</span> otherwise.</p></div>

<p><a id="min-operator-id-xor"></a>
<span class="reference-title">xor</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">bool<sub>1</sub></span> <span class="kwd">bool<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">bool<sub>3</sub></span></span></p>

<p>Returns <span class="kwd">true</span> if <span class="kwd">bool<sub>1</sub></span> and <span class="kwd">bool<sub>2</sub></span> are different, <span class="kwd">false</span> otherwise.</p></div>

<a name="<code>str</code>-Module"></a>
<h3><code>str</code> Module<a href="#document-top" title="Go to top"></a></h3>

<p><span class="reference-title">%</span></p>

<div class="operator"><p><span class="kwd"> % <strong>&rArr;</strong> interpolate</span></p>

<p>See <a href="#min-operator-id-interpolate">interpolate</a>.</p></div>

<p><span class="reference-title">=~</span></p>

<div class="operator"><p><span class="kwd"> =~ <strong>&rArr;</strong> regex</span></p>

<p>See <a href="#min-operator-id-regex">regex</a>.</p></div>

<p><a id="min-operator-id-capitalize"></a>
<span class="reference-title">capitalize</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Returns a copy of <span class="kwd">&apos;sym</span> with the first character capitalized.</p></div>

<p><a id="min-operator-id-indent"></a>
<span class="reference-title">indent</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <span class="kwd">int</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Returns <span class="kwd">string</span> containing <span class="kwd">&apos;sym</span> indented with <span class="kwd">int</span> spaces.</p></div>

<p><a id="min-operator-id-indexof"></a>
<span class="reference-title">indexof</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">string<sub>1</sub></span> <span class="kwd">string<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">int</span></span></p>

<p>If <span class="kwd">string<sub>2</sub></span> is contained in <span class="kwd">string<sub>1</sub></span>, returns the index of the first match or -1 if no match is found.</p></div>

<p><a id="min-operator-id-interpolate"></a>
<span class="reference-title">interpolate</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">string</span> <span class="kwd">quot</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Substitutes the placeholders included in <span class="kwd">string</span> with the values in <span class="kwd">quot</span>.</p>

<div class="note"><p>Note</p>

<p>If <span class="kwd">quot</span> contains symbols or quotations, they are not interpreted. To do so, call <code>apply</code> before interpolating.</p></div>

<div class="sidebar"><p>Example</p>

<p>The following code (executed in a directory called &lsquo;/Users/h3rald/Development/min&rsquo; containing 19 files):</p>

<p><code>"Directory '$1' includes $2 files." (. (. ls 'file? filter size)) apply interpolate</code></p>

<p>produces:</p>

<p><code>"Directory '/Users/h3rald/Development/min' includes 19 files."</code></p></div></div>

<p><a id="min-operator-id-join"></a>
<span class="reference-title">join</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot</span> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Joins the elements of <span class="kwd">quot</span> using separator <span class="kwd">&apos;sym</span>, producing <span class="kwd">string</span>.</p></div>

<p><a id="min-operator-id-length"></a>
<span class="reference-title">length</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">int</span></span></p>

<p>Returns the length of <span class="kwd">&apos;sym</span>.</p></div>

<p><a id="min-operator-id-lowercase"></a>
<span class="reference-title">lowercase</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Returns a copy of <span class="kwd">&apos;sym</span> converted to lowercase.</p></div>

<p><a id="min-operator-id-match"></a>
<span class="reference-title">match</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">string<sub>1</sub></span> <span class="kwd">string<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Returns <span class="kwd">true</span> if <span class="kwd">string<sub>2</sub></span> matches <span class="kwd">string<sub>1</sub></span>, <span class="kwd">false</span> otherwise.</p>

<div class="tip"><p>Tip</p>

<p><span class="kwd">string<sub>2</sub></span> can be a <a href="https://github.com/snake5/sgregex">sgregex</a>.-compatible regular expression.</p></div></div>

<p><a id="min-operator-id-repeat"></a>
<span class="reference-title">repeat</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <span class="kwd">int</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Returns <span class="kwd">string</span> containing <span class="kwd">&apos;sym</span> repeated <span class="kwd">int</span> times.</p></div>

<p><a id="min-operator-id-replace"></a>
<span class="reference-title">replace</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">string<sub>1</sub></span> <span class="kwd">string<sub>2</sub></span> <span class="kwd">string<sub>3</sub></span> <strong>&rArr;</strong> <span class="kwd">string<sub>4</sub></span></span></p>

<p>Returns a copy of <span class="kwd">string<sub>1</sub></span> containing all occurrences of <span class="kwd">string<sub>2</sub></span> replaced by <span class="kwd">string<sub>3</sub></span></p>

<div class="tip"><p>Tip</p>

<p><span class="kwd">string<sub>2</sub></span> can be a <a href="https://github.com/snake5/sgregex">sgregex</a>.-compatible regular expression.</p></div>

<div class="sidebar"><p>Example</p>

<p>The following:</p>

<p><code>"This is a stupid test. Is it really a stupid test?" " s[a-z]+" " simple" replace</code></p>

<p>produces: <code>"This is a simple test. Is it really a simple test?"</code></p></div></div>

<p><a id="min-operator-id-regex"></a>
<span class="reference-title">regex</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">string<sub>1</sub></span> <span class="kwd">string<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">quot</span></span></p>

<p>Performs a search and/or a search-and-replace operation using pattern <span class="kwd">string<sub>2</sub></span>.</p>

<p><span class="kwd">string<sub>2</sub></span> can be one of the following patterns:</p>

<ul>
<li><strong>/</strong><em>search-regex</em><strong>/</strong><em>modifiers</em></li>
<li><strong>s/</strong><em>search-regex</em><strong>/</strong><em>replacemenet</em><strong>/</strong><em>modifiers</em></li>
</ul>


<p><span class="kwd">quot</span> is always a quotation containing:</p>

<ul>
<li>One or more strings containing the first match and captures (if any), like for the <code>search</code> operator.</li>
<li>A string containing the resuling string after the search-and-replace operation.</li>
</ul>


<div class="tip"><p>Tip</p>

<ul>
<li><em>search-regex</em> can be a <a href="https://github.com/snake5/sgregex">sgregex</a>.-compatible regular expression.</li>
<li><em>modifiers</em> are optionals can contain one or more of the following characters, in any order:

<ul>
<li><strong>i</strong>: case-insensitive match.</li>
<li><strong>m</strong>: multi-line match.</li>
<li><strong>s</strong>: dot character includes newlines.</li>
</ul>
</li>
</ul>
</div>

<div class="sidebar"><p>Example: Search</p>

<p>The following:</p>

<p><code>"This is a GOOD idea." "/(good) idea/i" regex</code></p>

<p>produces: <code>("GOOD idea", "GOOD")</code></p></div>

<div class="sidebar"><p>Example: Search and Replace</p>

<p>The following:</p>

<p><code>"This is a GOOD idea." "s/good/bad/i" regex</code></p>

<p>produces: <code>("This is a bad idea")</code></p></div></div>

<p><a id="min-operator-id-search"></a>
<span class="reference-title">search</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">string<sub>1</sub></span> <span class="kwd">string<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">quot</span></span></p>

<p>Returns a quotation containing the first occurrence of <span class="kwd">string<sub>2</sub></span> within <span class="kwd">string<sub>2</sub></span>. Note that:</p>

<ul>
<li>The first element of <span class="kwd">quot</span> is the matching substring.</li>
<li>Other elements (if any) contain captured substrings.</li>
</ul>


<div class="tip"><p>Tip</p>

<p><span class="kwd">string<sub>2</sub></span> can be a <a href="https://github.com/snake5/sgregex">sgregex</a>.-compatible regular expression.</p></div>

<div class="sidebar"><p>Example</p>

<p>The following:</p>

<p><code>"192.168.1.1, 127.0.0.1" "[0-9]+\.[0-9]+\.([0-9]+)\.([0-9]+)" search</code></p>

<p>produces: <code>("192.168.1.1", "1", "1")</code></p></div></div>

<p><a id="min-operator-id-split"></a>
<span class="reference-title">split</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym<sub>1</sub></span> <span class="kwd">&apos;sym<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">quot</span></span></p>

<p>Splits <span class="kwd">&apos;sym<sub>1</sub></span> using separator <span class="kwd">&apos;sym<sub>2</sub></span> and returns the resulting strings within the quotation <span class="kwd">quot</span>.</p></div>

<p><a id="min-operator-id-strip"></a>
<span class="reference-title">strip</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Returns <span class="kwd">string</span>, which is set to <span class="kwd">&apos;sym</span> with leading and trailing spaces removed.</p></div>

<p><a id="min-operator-id-substr"></a>
<span class="reference-title">substr</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">string<sub>1</sub></span> <span class="kwd">int<sub>1</sub></span> <span class="kwd">int<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">string<sub>2</sub></span></span></p>

<p>Returns a substring <span class="kwd">string<sub>2</sub></span> obtained by retriving <span class="kwd">int<sub>2</sub></span> characters starting from index <span class="kwd">int<sub>1</sub></span> within <span class="kwd">string<sub>1</sub></span>.</p></div>

<p><a id="min-operator-id-titleize"></a>
<span class="reference-title">titleize</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Returns a copy of <span class="kwd">&apos;sym</span> in which the first character of each word is capitalized.</p></div>

<p><a id="min-operator-id-uppercase"></a>
<span class="reference-title">uppercase</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">&apos;sym<sub>2</sub></span></span></p>

<p>Returns a copy of <span class="kwd">&apos;sym</span> converted to uppercase.</p></div>

<a name="<code>sys</code>-Module"></a>
<h3><code>sys</code> Module<a href="#document-top" title="Go to top"></a></h3>

<p><span class="reference-title">$</span> <span class="sigil"></span></p>

<div class="operator"><p><span class="kwd"> $<span class="kwd">string</span> <strong>&rArr;</strong> <span class="kwd">string</span> get-env</span></p>

<p>See <a href="#min-operator-id-get-env">get-env</a>.</p></div>

<p><span class="reference-title">$</span></p>

<div class="operator"><p><span class="kwd"> $ <strong>&rArr;</strong> get-env</span></p>

<p>See <a href="#min-operator-id-get-env">get-env</a>.</p></div>

<p><span class="reference-title">!</span> <span class="sigil"></span></p>

<div class="operator"><p><span class="kwd"> !<span class="kwd">string</span> <strong>&rArr;</strong> <span class="kwd">string</span> system</span></p>

<p>See <a href="#min-operator-id-system">system</a>.</p></div>

<p><span class="reference-title">!</span></p>

<div class="operator"><p><span class="kwd"> ! <strong>&rArr;</strong> system</span></p>

<p>See <a href="#min-operator-id-system">system</a>.</p></div>

<p><span class="reference-title">&amp;</span> <span class="sigil"></span></p>

<div class="operator"><p><span class="kwd"> &amp;<span class="kwd">string</span> <strong>&rArr;</strong> <span class="kwd">string</span> run</span></p>

<p>See <a href="#min-operator-id-run">run</a>.</p></div>

<p><span class="reference-title">&amp;</span></p>

<div class="operator"><p><span class="kwd"> &amp; <strong>&rArr;</strong> run</span></p>

<p>See <a href="#min-operator-id-run">run</a>.</p></div>

<p><a id="min-operator-id-."></a>
<span class="reference-title">.</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Returns the full path to the current directory.</p></div>

<p><a id="min-operator-id-.."></a>
<span class="reference-title">..</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Returns the full path to the parent directory.</p></div>

<p><a id="min-operator-id-chmod"></a>
<span class="reference-title">chmod</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <span class="kwd">int</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Sets the permissions of file or directory <span class="kwd">&apos;sym</span> to <span class="kwd">int</span>. <span class="kwd">int</span> is a three-digit representation of user, group and other permissions. See the <a href="http://permissions-calculator.org/">Unix Permissions Calculator</a> for examples and conversions.</p>

<div class="sidebar"><p>Example</p>

<p>The following program makes the file <strong>/tmp/test.txt</strong> readable, writable and executable by its owner, and readable and executable by users of the same group and all other users:</p>

<p><code>/tmp/test.txt 755 chmod</code></p></div></div>

<p><a id="min-operator-id-cd"></a>
<span class="reference-title">cd</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Change the current directory to {<span class="kwd">&apos;sym</span>.</p></div>

<p><a id="min-operator-id-cp"></a>
<span class="reference-title">cp</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym<sub>1</sub></span> <span class="kwd">&apos;sym<sub>2</sub></span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Copies the file or directory <span class="kwd">&apos;sym<sub>1</sub></span> to <span class="kwd">&apos;sym<sub>2</sub></span>.</p></div>

<p><a id="min-operator-id-cpu"></a>
<span class="reference-title">cpu</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Returns the host CPU. It can be one of the following strings i386, alpha, powerpc, powerpc64, powerpc64el, sparc, amd64, mips, mipsel, arm, arm64.</p></div>

<p><a id="min-operator-id-env?"></a>
<span class="reference-title">env?</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Returns <span class="kwd">true</span> if environment variable <span class="kwd">&apos;sym</span> exists, <span class="kwd">false</span> otherwise.</p></div>

<p><a id="min-operator-id-dir?"></a>
<span class="reference-title">dir?</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Returns <span class="kwd">true</span> if the specified path <span class="kwd">&apos;sym</span> exists and is a directory.</p></div>

<p><a id="min-operator-id-dirname"></a>
<span class="reference-title">dirname</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Returns the path of the directory containing path <span class="kwd">&apos;sym</span>.</p></div>

<p><a id="min-operator-id-exists?"></a>
<span class="reference-title">exists?</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Returns <span class="kwd">true</span> if the specified file or directory <span class="kwd">&apos;sym</span> exists.</p></div>

<p><a id="min-operator-id-file?"></a>
<span class="reference-title">file?</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Returns <span class="kwd">true</span> if the specified path <span class="kwd">&apos;sym</span> exists and is a file.</p></div>

<p><a id="min-operator-id-filename"></a>
<span class="reference-title">filename</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Returns the file name of path <span class="kwd">&apos;sym</span>.</p></div>

<p><a id="min-operator-id-get-env"></a>
<span class="reference-title">get-env</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Returns environment variable <span class="kwd">&apos;sym</span>.</p></div>

<p><a id="min-operator-id-hardlink"></a>
<span class="reference-title">hardlink</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym<sub>1</sub></span> <span class="kwd">&apos;sym<sub>2</sub></span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Creates hardlink <span class="kwd">&apos;sym<sub>2</sub></span> for file or directory <span class="kwd">&apos;sym<sub>1</sub></span>.</p></div>

<p><a id="min-operator-id-ls"></a>
<span class="reference-title">ls</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">quot</span></span></p>

<p>Returns a quotation <span class="kwd">quot</span> containing all children (files and directories) of the directory <span class="kwd">&apos;sym</span>.</p></div>

<p><a id="min-operator-id-ls-r"></a>
<span class="reference-title">ls-r</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">quot</span></span></p>

<p>Returns a quotation <span class="kwd">quot</span> containing all children (files and directories) of the directory <span class="kwd">&apos;sym</span>, recursively.</p></div>

<p><a id="min-operator-id-mkdir"></a>
<span class="reference-title">mkdir</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Creates the specified directory <span class="kwd">&apos;sym</span>.</p></div>

<p><a id="min-operator-id-mv"></a>
<span class="reference-title">mv</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym<sub>1</sub></span> <span class="kwd">&apos;sym<sub>2</sub></span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Moves the file or directory <span class="kwd">&apos;sym<sub>1</sub></span> to <span class="kwd">&apos;sym<sub>2</sub></span>.</p></div>

<p><a id="min-operator-id-os"></a>
<span class="reference-title">os</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Returns the host operating system. It can be one of the following strings: windows, macosx, linux, netbsd, freebsd, openbsd, solaris, aix, standalone.</p></div>

<p><a id="min-operator-id-put-env"></a>
<span class="reference-title">put-env</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym<sub>1</sub></span> <span class="kwd">&apos;sym<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Sets environment variable <span class="kwd">&apos;sym<sub>2</sub></span> to <span class="kwd">&apos;sym<sub>1</sub></span>.</p></div>

<p><a id="min-operator-id-rm"></a>
<span class="reference-title">rm</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Deletes the specified file <span class="kwd">&apos;sym</span>.</p></div>

<p><a id="min-operator-id-rmdir"></a>
<span class="reference-title">rmdir</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Deletes the specified directory <span class="kwd">&apos;sym</span> and all its subdirectories recursively.</p></div>

<p><a id="min-operator-id-run"></a>
<span class="reference-title">run</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">dict</span></span></p>

<p>Executes the external command <span class="kwd">&apos;sym</span> in the current directory without displaying its output. Returns a dictionary containing the command output and return code (in keys <strong>output</strong> and <strong>code</strong> respectively).</p></div>

<p><a id="min-operator-id-sleep"></a>
<span class="reference-title">sleep</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">int</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Halts program execution for <span class="kwd">int</span> milliseconds.</p></div>

<p><a id="min-operator-id-symlink"></a>
<span class="reference-title">symlink</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym<sub>1</sub></span> <span class="kwd">&apos;sym<sub>2</sub></span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Creates symlink <span class="kwd">&apos;sym<sub>2</sub></span> for file or directory <span class="kwd">&apos;sym<sub>1</sub></span>.</p></div>

<p><a id="min-operator-id-symlink?"></a>
<span class="reference-title">symlink?</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Returns <span class="kwd">true</span> if the specified path <span class="kwd">&apos;sym</span> exists and is a symbolic link.</p></div>

<p><a id="min-operator-id-system"></a>
<span class="reference-title">system</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">int</span></span></p>

<p>Executes the external command <span class="kwd">&apos;sym</span> in the current directory and pushes its return code on the stack.</p></div>

<p><a id="min-operator-id-unzip"></a>
<span class="reference-title">unzip</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Decompresses zip file <span class="kwd">&apos;sym</span>.</p></div>

<p><a id="min-operator-id-which"></a>
<span class="reference-title">which</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Returns the full path to the directory containing executable <span class="kwd">&apos;sym</span>, or an empty string if the executable is not found in <strong>$PATH</strong>.</p></div>

<p><a id="min-operator-id-zip"></a>
<span class="reference-title">zip</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <span class="kwd">quot</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Compresses files included in quotation <span class="kwd">quot</span> into zip file <span class="kwd">&apos;sym</span>.</p></div>

<a name="<code>num</code>-Module"></a>
<h3><code>num</code> Module<a href="#document-top" title="Go to top"></a></h3>

<p><a id="min-operator-id-+"></a>
<span class="reference-title">+</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">num<sub>1</sub></span> <span class="kwd">num<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">num<sub>3</sub></span></span></p>

<p>Sums <span class="kwd">num<sub>1</sub></span> and <span class="kwd">num<sub>2</sub></span>.</p></div>

<p><a id="min-operator-id--"></a>
<span class="reference-title">-</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">num<sub>1</sub></span> <span class="kwd">num<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">num<sub>3</sub></span></span></p>

<p>Subtracts <span class="kwd">num<sub>2</sub></span> from <span class="kwd">num<sub>1</sub></span>.</p></div>

<p><a id="min-operator-id--inf"></a>
<span class="reference-title">-inf</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> <span class="kwd">num</span></span></p>

<p>Returns negative infinity.</p></div>

<p><a id="min-operator-id-\*"></a>
<span class="reference-title">*</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">num<sub>1</sub></span> <span class="kwd">num<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">num<sub>3</sub></span></span></p>

<p>Multiplies <span class="kwd">num<sub>1</sub></span> by <span class="kwd">num<sub>2</sub></span>.</p></div>

<p><a id="min-operator-id-/"></a>
<span class="reference-title">/</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">num<sub>1</sub></span> <span class="kwd">num<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">num<sub>3</sub></span></span></p>

<p>Divides <span class="kwd">num<sub>1</sub></span> by <span class="kwd">num<sub>2</sub></span>.</p></div>

<p><a id="min-operator-id-even?"></a>
<span class="reference-title">even?</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">int</span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Returns <span class="kwd">true</span> if <span class="kwd">int</span> is even, <span class="kwd">false</span> otherwise.</p></div>

<p><a id="min-operator-id-div"></a>
<span class="reference-title">div</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">int<sub>1</sub></span> <span class="kwd">int<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">int<sub>3</sub></span></span></p>

<p>Divides <span class="kwd">int<sub>1</sub></span> by <span class="kwd">int<sub>2</sub></span> (integer division).</p></div>

<p><a id="min-operator-id-inf"></a>
<span class="reference-title">inf</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> <span class="kwd">num</span></span></p>

<p>Returns infinity.</p></div>

<p><a id="min-operator-id-mod"></a>
<span class="reference-title">mod</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">int<sub>1</sub></span> <span class="kwd">int<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">int<sub>3</sub></span></span></p>

<p>Returns the integer module of <span class="kwd">int<sub>1</sub></span> divided by <span class="kwd">int<sub>2</sub></span>.</p></div>

<p><a id="min-operator-id-nan"></a>
<span class="reference-title">nan</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> nan</span></p>

<p>Returns <strong>NaN</strong> (not a number).</p></div>

<p><a id="min-operator-id-odd?"></a>
<span class="reference-title">odd?</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">int</span> <strong>&rArr;</strong> <span class="kwd">bool</span></span></p>

<p>Returns <span class="kwd">true</span> if <span class="kwd">int</span> is odd, <span class="kwd">false</span> otherwise.</p></div>

<p><a id="min-operator-id-pred"></a>
<span class="reference-title">pred</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">int<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">int<sub>2</sub></span></span></p>

<p>Returns the predecessor of <span class="kwd">int<sub>1</sub></span>.</p></div>

<p><a id="min-operator-id-random"></a>
<span class="reference-title">random</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">int<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">int<sub>2</sub></span></span></p>

<p>Returns a random number <span class="kwd">int<sub>2</sub></span> between 0 and <span class="kwd">int<sub>1</sub></span>-1.</p>

<p>%note%
Note</p>

<p>You must call <code>randomize</code> to initialize the random number generator, otherwise the same sequence of numbers will be returned.</p></div>

<p><a id="min-operator-id-randomize"></a>
<span class="reference-title">randomize</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> {{null}</span></p>

<p>Initializes the random number generator using a seed based on the current timestamp.</p></div>

<p><a id="min-operator-id-succ"></a>
<span class="reference-title">succ</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">int<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">int<sub>2</sub></span></span></p>

<p>Returns the successor of <span class="kwd">int<sub>1</sub></span>.</p></div>

<p><a id="min-operator-id-sum"></a>
<span class="reference-title">sum</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">quot</span> <strong>&rArr;</strong> <span class="kwd">int</span></span></p>

<p>Returns the sum of all items of <span class="kwd">quot</span>. <span class="kwd">quot</span> is a quotation of integers.</p></div>

<a name="<code>time</code>-Module"></a>
<h3><code>time</code> Module<a href="#document-top" title="Go to top"></a></h3>

<p><a id="min-operator-id-now"></a>
<span class="reference-title">now</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> <span class="kwd">float</span></span></p>

<p>Returns the current time as Unix timestamp with microseconds.</p></div>

<p><a id="min-operator-id-timestamp"></a>
<span class="reference-title">timestamp</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> <span class="kwd">int</span></span></p>

<p>Returns the current time as Unix timestamp.</p></div>

<p><a id="min-operator-id-timeinfo"></a>
<span class="reference-title">timeinfo</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">int</span> <strong>&rArr;</strong> <span class="kwd">tinfo</span></span></p>

<p>Returns a timeinfo dictionary from timestamp <span class="kwd">int</span>.</p></div>

<p><a id="min-operator-id-to-timestamp"></a>
<span class="reference-title">to-timestamp</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">tinfo</span> <strong>&rArr;</strong> <span class="kwd">int</span></span></p>

<p>Converts the timeinfo dictionary <span class="kwd">tinfo</span> to the corresponding Unix timestamp.</p></div>

<p><a id="min-operator-id-datetime"></a>
<span class="reference-title">datetime</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">int</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Returns an ISO 8601 string representing the combined date and time in UTC of timestamp <span class="kwd">int</span>.</p></div>

<p><a id="min-operator-id-tformat"></a>
<span class="reference-title">tformat</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">int</span> <span class="kwd">string</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Formats timestamp <span class="kwd">int</span> using string <span class="kwd">string</span>.</p>

<div class="tip"><p>Tip</p>

<p>For information on special characters in the format string, see the <a href="https://nim-lang.org/docs/times.html#format,TimeInfo,string">format</a> nim method.</p></div></div>

<a name="<code>crypto</code>-Module"></a>
<h3><code>crypto</code> Module<a href="#document-top" title="Go to top"></a></h3>

<p><a id="min-operator-id-aes"></a>
<span class="reference-title">aes</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym<sub>1</sub></span> <span class="kwd">&apos;sym<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Encrypts or decrypts <span class="kwd">&apos;sym<sub>1</sub></span> using the Advanced Encryption Standard (AES) in CTR mode, using <span class="kwd">&apos;sym<sub>2</sub></span> as password.</p></div>

<p><a id="min-operator-id-decode"></a>
<span class="reference-title">decode</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Decodes the Base64-encoded string <span class="kwd">&apos;sym</span>.</p></div>

<p><a id="min-operator-id-encode"></a>
<span class="reference-title">encode</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Base64-encodes <span class="kwd">&apos;sym</span>.</p></div>

<p><a id="min-operator-id-md5"></a>
<span class="reference-title">md5</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Returns the MD5 hash of <span class="kwd">&apos;sym</span>.</p></div>

<p><a id="min-operator-id-sha1"></a>
<span class="reference-title">sha1</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Returns the SHA1 hash of <span class="kwd">&apos;sym</span>.</p></div>

<p><a id="min-operator-id-sha224"></a>
<span class="reference-title">sha224</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Returns the SHA224 hash of <span class="kwd">&apos;sym</span>.</p></div>

<p><a id="min-operator-id-sha256"></a>
<span class="reference-title">sha256</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Returns the SHA256 hash of <span class="kwd">&apos;sym</span>.</p></div>

<p><a id="min-operator-id-sha384"></a>
<span class="reference-title">sha384</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Returns the SHA384 hash of <span class="kwd">&apos;sym</span>.</p></div>

<p><a id="min-operator-id-sha512"></a>
<span class="reference-title">sha512</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">&apos;sym</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Returns the SHA512 hash of <span class="kwd">&apos;sym</span>.</p></div>

<a name="<code>math</code>-Module"></a>
<h3><code>math</code> Module<a href="#document-top" title="Go to top"></a></h3>

<p><a id="min-operator-id-acos"></a>
<span class="reference-title">acos</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">num<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">num<sub>2</sub></span></span></p>

<p>Calculates the arc cosine of <span class="kwd">num<sub>1</sub></span> (in radians).</p></div>

<p><a id="min-operator-id-asin"></a>
<span class="reference-title">asin</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">num<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">num<sub>2</sub></span></span></p>

<p>Calculates the arc sine of <span class="kwd">num<sub>1</sub></span> (in radians).</p></div>

<p><a id="min-operator-id-atan"></a>
<span class="reference-title">atan</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">num<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">num<sub>2</sub></span></span></p>

<p>Calculates the arc tangent of <span class="kwd">num<sub>1</sub></span> (in radians).</p></div>

<p><a id="min-operator-id-ceil"></a>
<span class="reference-title">ceil</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">num</span> <strong>&rArr;</strong> <span class="kwd">int</span></span></p>

<p>Returns the smallest integer <span class="kwd">int</span> that is not smaller than <span class="kwd">num</span>.</p></div>

<p><a id="min-operator-id-cos"></a>
<span class="reference-title">cos</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">num<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">num<sub>2</sub></span></span></p>

<p>Calculates the cosine of <span class="kwd">num<sub>1</sub></span> (in radians).</p></div>

<p><a id="min-operator-id-cosh"></a>
<span class="reference-title">cosh</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">num<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">num<sub>2</sub></span></span></p>

<p>Calculates the hyperbolic cosine of <span class="kwd">num<sub>1</sub></span> (in radians).</p></div>

<p><a id="min-operator-id-d2r"></a>
<span class="reference-title">d2r</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">num<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">num<sub>2</sub></span></span></p>

<p>Converts <span class="kwd">num<sub>1</sub></span> from degrees to radians.</p></div>

<p><a id="min-operator-id-e"></a>
<span class="reference-title">e</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> <span class="kwd">num</span></span></p>

<p>Returns the value of the <em>e</em> constant (Euler&rsquo;s number).</p></div>

<p><a id="min-operator-id-floor"></a>
<span class="reference-title">floor</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">num</span> <strong>&rArr;</strong> <span class="kwd">int</span></span></p>

<p>Returns the largest integer <span class="kwd">int</span> that is not greater than <span class="kwd">num</span>.</p></div>

<p><a id="min-operator-id-ln"></a>
<span class="reference-title">ln</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">num<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">num<sub>2</sub></span></span></p>

<p>Calculates the natural logarithm of <span class="kwd">num<sub>1</sub></span>.</p></div>

<p><a id="min-operator-id-log10"></a>
<span class="reference-title">log10</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">num<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">num<sub>2</sub></span></span></p>

<p>Calculates the common logarithm of <span class="kwd">num<sub>1</sub></span>.</p></div>

<p><a id="min-operator-id-log2"></a>
<span class="reference-title">log2</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">num<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">num<sub>2</sub></span></span></p>

<p>Calculates the binary logarithm of <span class="kwd">num<sub>1</sub></span>.</p></div>

<p><a id="min-operator-id-pi"></a>
<span class="reference-title">pi</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> <span class="kwd">num</span></span></p>

<p>Returns the value of the &pi; constant.</p></div>

<p><a id="min-operator-id-pow"></a>
<span class="reference-title">pow</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">num<sub>1</sub></span> <span class="kwd">num<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">num<sub>3</sub></span></span></p>

<p>Computes <span class="kwd">num<sub>1</sub></span> to power raised of <span class="kwd">num<sub>2</sub></span>.</p></div>

<p><a id="min-operator-id-r2d"></a>
<span class="reference-title">r2d</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">num<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">num<sub>2</sub></span></span></p>

<p>Converts <span class="kwd">num<sub>1</sub></span> from radians to degrees.</p></div>

<p><a id="min-operator-id-round"></a>
<span class="reference-title">round</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">num<sub>1</sub></span> <span class="kwd">int</span> <strong>&rArr;</strong> <span class="kwd">num<sub>2</sub></span></span></p>

<p>Rounds <span class="kwd">num<sub>1</sub></span> to the <span class="kwd">int</span><sup>th</sup> decimal place.</p></div>

<p><a id="min-operator-id-sin"></a>
<span class="reference-title">sin</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">num<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">num<sub>2</sub></span></span></p>

<p>Calculates the sine of <span class="kwd">num<sub>1</sub></span> (in radians).</p></div>

<p><a id="min-operator-id-sinh"></a>
<span class="reference-title">sinh</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">num<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">num<sub>2</sub></span></span></p>

<p>Calculates the hyperbolic sine of <span class="kwd">num<sub>1</sub></span> (in radians).</p></div>

<p><a id="min-operator-id-sqrt"></a>
<span class="reference-title">sqrt</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">num<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">num<sub>2</sub></span></span></p>

<p>Returns square root of <span class="kwd">num<sub>1</sub></span>.</p></div>

<p><a id="min-operator-id-tan"></a>
<span class="reference-title">tan</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">num<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">num<sub>2</sub></span></span></p>

<p>Calculates the tangent of <span class="kwd">num<sub>1</sub></span> (in radians).</p></div>

<p><a id="min-operator-id-tanh"></a>
<span class="reference-title">tanh</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">num<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">num<sub>2</sub></span></span></p>

<p>Calculates the hyperbolic tangent of <span class="kwd">num<sub>1</sub></span> (in radians).</p></div>

<p><a id="min-operator-id-tau"></a>
<span class="reference-title">tau</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> <span class="kwd">num</span></span></p>

<p>Returns the value of the &tau; constant (2&pi;).</p></div>

<p><a id="min-operator-id-trunc"></a>
<span class="reference-title">trunc</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">num<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">num<sub>2</sub></span></span></p>

<p>Truncates <span class="kwd">num</span> to the decimal point.</p></div>

<a name="<code>net</code>-Module"></a>
<h3><code>net</code> Module<a href="#document-top" title="Go to top"></a></h3>

<p><a id="min-operator-id-accept"></a>
<span class="reference-title">accept</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">socket<sub>1</sub></span> <span class="kwd">socket<sub>2</sub></span> <strong>&rArr;</strong> <span class="kwd">socket<sub>1</sub></span></span></p>

<p>Makes <span class="kwd">socket<sub>2</sub></span> (server) accept a connection from <span class="kwd">socket<sub>1</sub></span> (client). Returns the client socket <span class="kwd">socket<sub>1</sub></span> from which it will be possible to receive data from.</p></div>

<p><a id="min-operator-id-close"></a>
<span class="reference-title">close</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">socket</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Closes a previously-opened socket.</p></div>

<p><a id="min-operator-id-connect"></a>
<span class="reference-title">connect</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">socket</span> <span class="kwd">string</span> <span class="kwd">int</span> <strong>&rArr;</strong> <span class="kwd">socket</span></span></p>

<p>Connects socket <span class="kwd">socket</span> to address <span class="kwd">string</span> and port <span class="kwd">int</span>.</p>

<div class="sidebar"><p>Example</p>

<p>The following code shows how to send a message to a server running on localhost:7777. The message is passed as the first argument to the program.</p>

<pre><code>() socket "localhost" 7777 connect =cli

args 1 get :msg

"Sending message \"$1\" to localhost:7777..." (msg) =&gt; % puts!

cli "$1\n" (msg) =&gt; % send

"Done." puts!

cli close
</code></pre></div></div>

<p><a id="min-operator-id-listen"></a>
<span class="reference-title">listen</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">dict</span> <span class="kwd">socket<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">socket<sub>2</sub></span></span></p>

<p>Makes socket <span class="kwd">socket<sub>1</sub></span> listen to the specified address and port. <span class="kwd">dict</span> can be empty or contain any of the following properties, used to specify the address and port to listen to respectively.</p>

<dl>
<dt>address</dt>
<dd>The address to listen to (default: <strong>0.0.0.0</strong>).</dd>
<dt>port</dt>
<dd>The port to listen to (default: <strong>80</strong>).</dd>
</dl>

<div class="sidebar"><p>Example</p>

<p>The following code shows how to create a simple server that listens on port 7777, prints data received from clients, and exits when it receives the string <code>exit</code>:</p>

<pre><code>() socket (("address" "127.0.0.1") ("port" 7777)) listen =srv

"Server listening on localhost:7777" puts!

() socket =cli
"" :line
(line "exit" !=)
(
  srv cli accept #cli
  cli recv-line @line
  "Received: $1" (line) =&gt; % puts!
) while

"Exiting..." puts!

srv close
</code></pre></div></div>

<p><a id="min-operator-id-recv"></a>
<span class="reference-title">recv</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">socket</span> <span class="kwd">int</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Waits to receive <span class="kwd">int</span> characters from <span class="kwd">socket</span> and returns the resulting data <span class="kwd">string</span>.</p></div>

<p><a id="min-operator-id-recv-line"></a>
<span class="reference-title">recv-line</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">socket</span> <strong>&rArr;</strong> <span class="kwd">string</span></span></p>

<p>Waits to receive a line of data from <span class="kwd">socket</span> and returns the resulting data <span class="kwd">string</span>. <code>""</code> is returned if <span class="kwd">socket</span> is disconnected.</p>

<div class="sidebar"><p>Example</p>

<p>The following code shows how to make a simple GET request to <a href="http://httpbin.org/uuid">http://httpbin.org/uuid</a> to receive a random UUID and display its response:</p>

<pre><code>() socket "httpbin.org" 80 connect =cli

cli "GET /uuid HTTP/1.1\r\nHost: httpbin.org\r\n\r\n" send

cli recv-line puts :line
(line "}" !=) 
(
  cli recv-line puts @line
) while
</code></pre></div></div>

<p><a id="min-operator-id-send"></a>
<span class="reference-title">send</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">socket</span> <span class="kwd">string</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Sends <span class="kwd">string</span> to the connected socket <span class="kwd">socket</span>.</p></div>

<p><a id="min-operator-id-socket"></a>
<span class="reference-title">socket</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">dict</span> <strong>&rArr;</strong> <span class="kwd">socket</span></span></p>

<p>Opens a new socket.</p>

<p><span class="kwd">dict</span> can be empty or contain any of the following properties, used to specify the domain, type and protocol of the socket respectively.</p>

<dl>
<dt>domain</dt>
<dd><p>The socket domain. It can be set to one of the following values:</p>

<ul>
<li><strong>ipv4</strong> (default): Internet Protocol version 4.</li>
<li><strong>ipv6</strong>: Internet Protocol version 6.</li>
<li><strong>unix</strong>: local Unix file (not supported on Windows systems).</li>
</ul>
</dd>
<dt>type</dt>
<dd><p>The socket type. It can be set to one of the following values:</p>

<ul>
<li><strong>stream</strong> (default): Reliable stream-oriented service or Stream Socket.</li>
<li><strong>dgram</strong>: Datagram service or Datagram Socket.</li>
<li><strong>raw</strong>: Raw protocols atop the network layer.</li>
<li><strong>seqpacket</strong>: Reliable sequenced packet service.</li>
</ul>
</dd>
<dt>protocol</dt>
<dd><p>The socket protocol. It can be set to one of the following values:</p>

<ul>
<li><strong>tcp</strong> (default): Transmission Control Protocol.</li>
<li><strong>udp</strong>: User Datagram Protocol.</li>
<li><strong>ipv4</strong>: Internet Protocol version 4 (not supported on Windows systems).</li>
<li><strong>ipv6</strong>: Internet Protocol version 6 (not supported on Windows systems).</li>
<li><strong>raw</strong>: Raw IP Packets protocol (not supported on Windows systems).</li>
<li><strong>icmp</strong>: Internet Control Message Protocol (not supported on Windows systems).</li>
</ul>
</dd>
</dl></div>

<a name="<code>http</code>-Module"></a>
<h3><code>http</code> Module<a href="#document-top" title="Go to top"></a></h3>

<p><a id="min-operator-id-download"></a>
<span class="reference-title">download</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">string<sub>1</sub></span> <span class="kwd">string<sub>2</sub></span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Downloads the contents of URL <span class="kwd">string<sub>1</sub></span> to the local file <span class="kwd">string<sub>2</sub></span>.</p></div>

<p><a id="min-operator-id-get-content"></a>
<span class="reference-title">get-content</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">string<sub>1</sub></span> <strong>&rArr;</strong> <span class="kwd">string<sub>2</sub></span></span></p>

<p>Retrieves the contents of URL <span class="kwd">string<sub>1</sub></span> as <span class="kwd">string<sub>2</sub></span>.</p></div>

<p><a id="min-operator-id-request"></a>
<span class="reference-title">request</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">request</span> <strong>&rArr;</strong> <span class="kwd">response</span></span></p>

<p>Performs an HTTP request.</p>

<div class="sidebar"><p>Example</p>

<p>The following code constructs a <span class="kwd">request</span> dictionary using the <strong>tap</strong> operator and passes it to the <strong>request</strong> operator to perform an HTTP GET request to <a href="http://httpbin.org/ip">http://httpbin.org/ip</a>:</p>

<pre><code>() (
  ("GET" %method)
  ("http://httpbin.org/ip" %url)
) tap request
</code></pre></div></div>

<p><a id="min-operator-id-start-server"></a>
<span class="reference-title">start-server</span></p>

<div class="operator"><p><span class="kwd"> <span class="kwd">dict</span> <strong>&rArr;</strong> &#x2205;</span></p>

<p>Starts an HTTP server based on the configuration provided in <span class="kwd">dict</span>.</p>

<p><span class="kwd">dict</span> is a dictionary containing the following keys:</p>

<dl>
<dt>address</dt>
<dd>The address to bind the server to (default: <strong>127.0.0.1</strong>).</dd>
<dt>port</dt>
<dd>The port to bind the server to.</dd>
<dt>handler</dt>
<dd>A quotation with the following signature, used to handle all incoming requests: <span class="kwd"><span class="kwd">request</span> &rArr; <span class="kwd">response</span></span></dd>
</dl>

<div class="sidebar"><p>Example</p>

<p>The following program starts a very simple HTTP server that can display the current timestamp or date and time in ISO 8601 format:</p>

<pre><code>(
 =req
 req /url :url
 ;Set response body
 "Invalid Request: $1" (url) =&gt; % :body
 ("/datetime" url ==) (
  timestamp datetime @body
 ) when
 ("/timestamp" url ==) (
   timestamp string @body
 ) when
 ("/shutdown" url ==) (
  "Stopping server..." puts!
  stop-server
 ) when
 ;Prepare response
 () (
  (body %body)
 ) tap 
) =handler

;Start server
"Server started on port 5555." puts!
"Press Ctrl+C to stop." puts!
() (
 (handler %handler)
 (5555 %port)
) tap start-server
</code></pre></div></div>

<p><a id="min-operator-id-stop-server"></a>
<span class="reference-title">stop-server</span></p>

<div class="operator"><p><span class="kwd"> &#x2205; <strong>&rArr;</strong> &#x2205;</span></p>

<p>Stops the currently-running HTTP server. This operator should be used within an HTTP server handler quotation.</p></div>
    </div>
    <div id="footer">
      <p><span class="copy"></span> Fabio Cevasco &ndash; April 20, 2018</p>
      <p><span>Powered by</span> <a href="https://h3rald.com/hastyscribe"><span class="hastyscribe"></span></a></p>
    </div>
  </div>
  
</body>