'hastysite import

; Copy PDF files saved in asset folder
; to the corresponding article output folder.
(
  (dict) expect -> =asset
  asset /id :id
  id "^pdf\/(.+)$" search 1 get :name
  asset "output/articles/$1/$1" (name) => % %id #asset
  asset output-cp
) :copy-pdf-article-asset


; Process a content file applying the appropriate template
; and compiling markdown to HTML if necessary.
(
  (dict) expect -> =content
  content /content-type :ct
  content /id :id
  "page" :tpl
  (ct "article" ==) ("article" @tpl) when
  (id "index" ==) ("home" @tpl) when
  "" :page
  "" :contents
  content (
    (input-fread @contents content)
    ((/ext ".md" ==) (=temp contents temp markdown @contents temp) when)
    (contents %contents)
    (=temp tpl temp mustache @page temp)
    (page %contents)
    ((id "index" !=)("$1/index" (id) => % %id ".html" %ext) when)
  ) tap
) :process-content

;;;; MAIN ;;;;

contents (process-content output-fwrite) foreach

; Process all assets.
assets (
  dup
  (
    ((/id "^pdf\/" match) (copy-pdf-article-asset))
    ;((/ext ".css" match) (process-css-asset))
    ((true) (output-cp))
  ) case
) foreach
