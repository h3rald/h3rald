#!/usr/bin/env ruby

ignore /^\/hastystyles\/(styles|fonts|images|README)/

ignore '/styles/_*'

compile /^\/(archives|home)\// do
	filter :erb
	layout 'default'
end

compile /^\/(projects|about)/ do
	filter :erb
	filter :redcloth
	layout 'default'
end

compile /(rss|atom)/ do
	filter :erb unless rep.binary? # e.g. rss.png image
end

compile '/styles/_*/' do 
end 

compile '/hastystyles/styles/_*/' do 
end 

compile '/styles/*' do
	if item[:extension] == "less" && item.identifier.match(/style\/$/) then
		filter :less
	end
end

compile "sitemap" do
	filter :erb
end

compile /^\/(js\/.+?)/ do
	# do nothing
end

compile '/hastyscribe/HastyScribe_UserGuide/' do
	# do nothing
end

compile '/litestore/LiteStore_UserGuide/' do
	# do nothing
end

compile '/glyph/book/images/*' do
	# do nothing
end

compile '/glyph/book/*' do
	layout 'default'
end

compile '/ruby-compendium/book/images/*' do
	# do nothing
end

compile '/ruby-compendium/book/*' do
	layout 'default'
end

compile '*' do
	if item[:filters_pre] && !item[:filters_pre].empty? then
		item[:filters_pre].each do |f|
			filter f.to_sym
		end
		layout 'default'
	else
		unless rep.binary? then
			case item[:extension]
			when 'textile' then
				filter :redcloth
				layout 'default'
			when 'md','markdown' then
				filter :rdiscount
				layout 'default'
			when 'bbcode' then
				filter :bbcode
				layout 'default'
			when 'glyph' then
				glyph_config @item
				glyph_article_for @item
        if item[:pdf] then
          pdf_file = Pathname.new "#{Dir.pwd}/output#{item.identifier.gsub(/\/$/, '')}.pdf"
          glyph_pdf_for @item unless pdf_file.exist?
        end
				Glyph.reset
			end
		end
	end
end

route /^\/tags\/.+?-(atom|rss)/ do
	item.identifier.gsub(/(.+)-(rss|atom)\/$/, '\1/\2') + '.xml'
end

route '/(atom|rss)/' do
	item.identifier.chop + '.xml'
end

route '/css/*' do
	item.identifier.chop + '.css'
end

route '/styles/*' do
	item.identifier.chop + '.css' 
end

route '/hastyscribe/HastyScribe_UserGuide' do
  '/hastyscribe/HastyScribe_UserGuide.htm'
end

route '/litestore/LiteStore_UserGuide' do
  '/litestore/LiteStore_UserGuide.htm'
end

route '/glyph/book/' do
	'/glyph/book/index.html'
end

route '/ruby-compendium/book/' do
	'/ruby-compendium/book/index.html'
end

route '/glyph/book/images/glyph/*' do
	item.identifier.chop + ".#{item[:extension]}"
end

route '/glyph/book/*' do
	item.identifier.chop+'.html'
end
route '/ruby-compendium/book/*' do
	item.identifier.chop+'.html'
end

route '/home/' do
	"/index.html"
end

route '/sitemap' do
	item.identifier.chop + '.xml'
end

route "/htaccess" do
	"/.htaccess"
end

route /\/(images|img|files|favicon|robots)\// do
	item.identifier.chop + ".#{item[:extension]}"
end

route '/js/*' do
	item.identifier.chop + '.js'
end

route '/fonts/*' do
	item.identifier.chop + ".#{item[:extension]}"
end

route '/hastystyles/fonts/*' do
	item.identifier.chop + ".#{item[:extension]}"
end

route '*' do
  item.identifier + 'index.html'
end

layout '*', :erb
